{
  "contractName": "Privatizable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "approveHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "revokeHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"approveHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"revokeHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approveHolder(uint256,address)\":{\"details\":\"Function to approve holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"revokeHolder(uint256,address)\":{\"details\":\"Function to revoke holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to update a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be updated\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":\"Privatizable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0x2c6ddeee25687af20d7e0ab3d5eb0b4be28a79a94b6268cfdb7c966222fed832\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9b13cb152456398b0ae8d4630832b2b720cb9ed302edab78e8814c40a91186a2\",\"dweb:/ipfs/QmY4No4F1jKTMtGeXfwQCuzyS2Ct4nz6NzEpoK3ukkWJTe\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ERC1155.sol\":{\"keccak256\":\"0x8b18d12608e7af15e32f60373d41a6d4a0e38174c070663fb5cdda02a8790539\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5124ce85a85fc32201c34e01e18fef7ed6e70ed8f89aaad561c22dca7ae0b4b2\",\"dweb:/ipfs/QmdRVkHFHGGKmej6zEejb8FKyTmD9jUNT3xE5kGri4fBsH\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x89f566b2b45db160adbfb2fe8da9a65f2385cbbcf904f03c199dbc3d625c03fd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://261c4652ae1ca909a88839c2455653b486aae8cc248a2b4da6aa0f301d2fb398\",\"dweb:/ipfs/QmfRj76anEn31QfmBFAJmEEdx5YRa2ZWPY714ehNXe4pmD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0x4d612c86404655accc4cc5b718bdd3de1bd0a5cca37de80e1da9abae99c99ae7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a9c117e797c48721addb3996a94e9346388a011ba3d4c08f38918192027c0946\",\"dweb:/ipfs/QmZAFQrxzzardakgXzm6LBmRcCBtKeyXL8iZmpoV4MhsH3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0xa96fdae86c9a62714e0b9120f128b422968063449cba408fe582f8bcb7d18c6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f9717005fa657ee4313d7b1f6db859d2424ae8800272123c4da00cdaf51566b\",\"dweb:/ipfs/QmUVVGNGnTV7TiU3kn3VVDPpbiWBqfSSATkN7Wdf3Eb216\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":{\"keccak256\":\"0xd8b068c736d1b5ef364d6f73d6fef3788034d3250fb3cd9e8d44d099aaca7b52\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fae9426d967287250027a3fb45c6499614b3365ee98debed327affa09d254d08\",\"dweb:/ipfs/Qmf8ap2iGa8UK7wSzMTxMM2tp4MaTpm5WXZCwS41Uj9ZCg\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0xba7141abe563c21e0db0d666c72a8219382b9f96b549ba958e768a8ecd55d2c9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://21d3bde82aaf8d4adbf808d93ab1d4d1711a45d1538d71511283f51484edba36\",\"dweb:/ipfs/QmS4uYwEmabJHH3ox6MNmZKWSLhkAdqyhHqviY5bV7t7pn\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/StashBloxData.sol\":{\"keccak256\":\"0xd5098cbeafaf9c59014a976ef2f060e0e17d30ac5abf1ca9d9dc3ffa166917d2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://24661c0231b9b13b3f7dfb8f9f4045951382f00dd4b3d932939e0ccadeb2c7ad\",\"dweb:/ipfs/QmahTj8KAAHgCoTff9KKNLqbqUhRz8EmqPw7Q9w1xLTKV6\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200001d3362000023565b620000e0565b6001600160a01b03811662000084576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180620037746026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b61368480620000f06000396000f3fe6080604052600436106101805760003560e01c80638870147b116100d1578063d1660e181161008a578063ed70554d11610064578063ed70554d14610c56578063f242432a14610cd4578063f2fde38b14610d67578063f8a5a07c14610d9a57610180565b8063d1660e1814610ba3578063d41d0aa314610be2578063e985e9c514610c1b57610180565b80638870147b146108fb5780638aeba37e1461092e5780638da5cb5b14610967578063a22cb46514610998578063c02f303c146109d3578063c40b87ae14610a0657610180565b80634392e5771161013e5780635dafec1b116101185780635dafec1b1461081d5780635dd2b9a614610856578063759c52141461088f5780637627b732146108c857610180565b80634392e577146104ba5780634ab0d2531461051b5780634e1273f41461069d57610180565b8062fdd58e1461018557806301ffc9a7146101d05780632eb2c2d6146102185780632ed42bf7146103415780633cacd7d6146103d5578063414ed0ce14610428575b600080fd5b34801561019157600080fd5b506101be600480360360408110156101a857600080fd5b506001600160a01b038135169060200135610ed1565b60408051918252519081900360200190f35b3480156101dc57600080fd5b50610204600480360360208110156101f357600080fd5b50356001600160e01b031916610f46565b604080519115158252519081900360200190f35b61033f600480360360a081101561022e57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561026157600080fd5b82018360208201111561027357600080fd5b803590602001918460208302840111600160201b8311171561029457600080fd5b919390929091602081019035600160201b8111156102b157600080fd5b8201836020820111156102c357600080fd5b803590602001918460208302840111600160201b831117156102e457600080fd5b919390929091602081019035600160201b81111561030157600080fd5b82018360208201111561031357600080fd5b803590602001918460018302840111600160201b8311171561033457600080fd5b509092509050610f8d565b005b34801561034d57600080fd5b5061035661123b565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610399578181015183820152602001610381565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103e157600080fd5b50610408600480360360208110156103f857600080fd5b50356001600160a01b03166112d1565b604080519315158452911515602084015282820152519081900360600190f35b34801561043457600080fd5b506104526004803603602081101561044b57600080fd5b50356112f7565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b3480156104c657600080fd5b5061033f60048036036101408110156104de57600080fd5b81019080806101400190600a806020026040519081016040528092919082600a6020028082843760009201919091525091945061136a9350505050565b34801561052757600080fd5b5061033f600480360361014081101561053f57600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b81111561059457600080fd5b8201836020820111156105a657600080fd5b803590602001918460208302840111600160201b831117156105c757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561061657600080fd5b82018360208201111561062857600080fd5b803590602001918460208302840111600160201b8311171561064957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166113c2565b3480156106a957600080fd5b506107cd600480360360408110156106c057600080fd5b810190602081018135600160201b8111156106da57600080fd5b8201836020820111156106ec57600080fd5b803590602001918460208302840111600160201b8311171561070d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561075c57600080fd5b82018360208201111561076e57600080fd5b803590602001918460208302840111600160201b8311171561078f57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506114b9945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156108095781810151838201526020016107f1565b505050509050019250505060405180910390f35b34801561082957600080fd5b506102046004803603604081101561084057600080fd5b50803590602001356001600160a01b031661163d565b34801561086257600080fd5b5061033f6004803603604081101561087957600080fd5b50803590602001356001600160a01b0316611650565b34801561089b57600080fd5b5061033f600480360360408110156108b257600080fd5b50803590602001356001600160a01b03166116e2565b3480156108d457600080fd5b5061033f600480360360208110156108eb57600080fd5b50356001600160a01b031661176f565b34801561090757600080fd5b5061033f6004803603602081101561091e57600080fd5b50356001600160a01b03166117da565b34801561093a57600080fd5b5061033f6004803603604081101561095157600080fd5b50803590602001356001600160a01b0316611842565b34801561097357600080fd5b5061097c6118c0565b604080516001600160a01b039092168252519081900360200190f35b3480156109a457600080fd5b5061033f600480360360408110156109bb57600080fd5b506001600160a01b03813516906020013515156118cf565b3480156109df57600080fd5b50610204600480360360208110156109f657600080fd5b50356001600160a01b0316611985565b348015610a1257600080fd5b5061033f60048036036101a0811015610a2a57600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610a9a57600080fd5b820183602082011115610aac57600080fd5b803590602001918460208302840111600160201b83111715610acd57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610b1c57600080fd5b820183602082011115610b2e57600080fd5b803590602001918460208302840111600160201b83111715610b4f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611990565b348015610baf57600080fd5b506101be60048036036060811015610bc657600080fd5b506001600160a01b038135169060208101359060400135611a4f565b348015610bee57600080fd5b5061033f60048036036040811015610c0557600080fd5b50803590602001356001600160a01b0316611a64565b348015610c2757600080fd5b5061020460048036036040811015610c3e57600080fd5b506001600160a01b0381358116916020013516611adf565b348015610c6257600080fd5b50610c8060048036036020811015610c7957600080fd5b5035611b20565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b61033f600480360360a0811015610cea57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610d2957600080fd5b820183602082011115610d3b57600080fd5b803590602001918460018302840111600160201b83111715610d5c57600080fd5b509092509050611b7c565b348015610d7357600080fd5b5061033f60048036036020811015610d8a57600080fd5b50356001600160a01b0316611cd3565b348015610da657600080fd5b5061033f60048036036060811015610dbd57600080fd5b81359190810190604081016020820135600160201b811115610dde57600080fd5b820183602082011115610df057600080fd5b803590602001918460208302840111600160201b83111715610e1157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610e6057600080fd5b820183602082011115610e7257600080fd5b803590602001918460208302840111600160201b83111715610e9357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d26945050505050565b60006001600160a01b038316610f185760405162461bcd60e51b815260040180806020018281038252602b815260200180613439602b913960400191505060405180910390fd5b506000818152600d602090815260408083206001600160a01b03861684526007019091529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b1480610f7757506001600160e01b03198216636cdb3d1360e11b145b15610f8457506001610f88565b5060005b919050565b848314610fcb5760405162461bcd60e51b815260040180806020018281038252602e8152602001806135f0602e913960400191505060405180910390fd5b6001600160a01b0387166110105760405162461bcd60e51b815260040180806020018281038252602881526020018061348a6028913960400191505060405180910390fd5b6001600160a01b038816331480611032575061102c8833611adf565b15156001145b61106d5760405162461bcd60e51b81526004018080602001828103825260378152602001806135b96037913960400191505060405180910390fd5b6110dc888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092019190915250611ec992505050565b866001600160a01b0316886001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a461123133898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a9150899081908401838280828437600092019190915250611f8392505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156112c75780601f1061129c576101008083540402835291602001916112c7565b820191906000526020600020905b8154815290600101906020018083116112aa57829003601f168201915b5050505050905082565b600c602052600090815260409020805460019091015460ff808316926101009004169083565b600e6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b611372612174565b6113b1576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6113be600282600a6132e4565b5050565b876113cd8133612185565b611418576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000898152600d6020526040902054611468576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b61147889898989898989896121bf565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b606081518351146114fb5760405162461bcd60e51b81526004018080602001828103825260308152602001806134de6030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561151557600080fd5b5060405190808252806020026020018201604052801561153f578160200160208202803683370190505b50905060005b84518110156116355760006001600160a01b031685828151811061156557fe5b60200260200101516001600160a01b031614156115b35760405162461bcd60e51b81526004018080602001828103825260348152602001806135446034913960400191505060405180910390fd5b600d60008583815181106115c357fe5b6020026020010151815260200190815260200160002060070160008683815181106115ea57fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061162257fe5b6020908102919091010152600101611545565b509392505050565b60006116498383612185565b9392505050565b8161165b8133612185565b6116a6576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b506000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805462ff0000191662010000179055565b816116ed8133612185565b611738576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b506000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805462ff000019169055565b611777612174565b6117b6576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600c60205260409020805460ff19166001179055565b6117e2612174565b611821576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600c60205260409020805460ff19169055565b61184a612174565b611889576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600f546001600160a01b031690565b336001600160a01b03831614156119175760405162461bcd60e51b815260040180806020018281038252602c8152602001806134b2602c913960400191505060405180910390fd5b3360008181526010602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610f4082612363565b61199933612363565b6119e4576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6119f78b8b8b8b8b8b8b8b8b8b8b61238d565b604080518b8152602081018b905281516001600160a01b038e169260009233927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62929181900390910190a45050505050505050505050565b6000611a5c8484846124f6565b949350505050565b611a6c612174565b611aab576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b6000611aeb83836126de565b806116495750506001600160a01b03918216600090815260106020908152604080832093909416825291909152205460ff1690565b600d60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516611bc15760405162461bcd60e51b815260040180806020018281038252602881526020018061348a6028913960400191505060405180910390fd5b6001600160a01b038616331480611be35750611bdd8633611adf565b15156001145b611c1e5760405162461bcd60e51b81526004018080602001828103825260378152602001806135b96037913960400191505060405180910390fd5b611c2a868686866127c5565b846001600160a01b0316866001600160a01b0316336001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611ccb338787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061283d92505050565b505050505050565b611cdb612174565b611d1a576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b611d23816129b2565b50565b611d2f33612363565b611d7a576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000838152600d602052604090205415801590611d98575080518251145b611ddd576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015611ec357611e1a84848381518110611df957fe5b6020026020010151848481518110611e0d57fe5b6020026020010151612a53565b6000848152600d602052604081206008018054909190611e3657fe5b600091825260208220015484516001600160a01b03909116919033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290879086908110611e8057fe5b6020026020010151600d60008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a4600101611de0565b50505050565b6000803411611ef3576001600160a01b0385166000908152600c6020526040902060010154611ef5565b345b905060005b8351811015611f7157611f67611f388787878581518110611f1757fe5b6020026020010151878681518110611f2b57fe5b6020026020010151612bf5565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152849190612d52565b9150600101611efa565b50611f7c8582612de9565b5050505050565b611f95846001600160a01b0316612e6a565b15611ccb5763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561203557818101518382015260200161201d565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561207457818101518382015260200161205c565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156120b0578181015183820152602001612098565b50505050905090810190601f1680156120dd5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561210257600080fd5b505af1158015612116573d6000803e3d6000fd5b505050506040513d602081101561212c57600080fd5b50516001600160e01b03191614611ccb5760405162461bcd60e51b815260040180806020018281038252603681526020018061350e6036913960400191505060405180910390fd5b600f546001600160a01b0316331490565b6000828152600d602090815260408083206001600160a01b038516845260070190915281206002015460ff16806116495750611649612174565b6000805b85518110156121ef578581815181106121d857fe5b6020026020010151820191508060010190506121c3565b50600086511180156121ff575060015b801561220c575080612710145b8015612219575061271084105b61225e576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600d60209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b9091018054600181018255908552929093206122be93928302019161333c565b506000898152600d6020908152604090912087516122e492600990920191890190613376565b506000898152600d60209081526040909120865161230a92600a909201918801906133ca565b50506000978852600d602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b6001600160a01b0381166000908152600c602052604081205460ff1680610f405750610f40612174565b60008a8152600d60205260409020541580156123a95750600089115b6123ee576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b88600d60008c81526020019081526020016000206000018190555087600d60008c8152602001908152602001600020600101819055506001600d60008c81526020019081526020016000206007016000336001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600d60008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506124de8a888888888888886121bf565b6124e98b8b8b612ea1565b5050505050505050505050565b6000828152600d60205260408120600b015481904290600019015b6000868152600d60205260408120600b0180548390811061252e57fe5b60009182526020822060029091020101546000888152600d60205260408120600b01805492935090918490811061256157fe5b906000526020600020906002020160016002811061257b57fe5b01546000898152600d602090815260408083206001600160a01b038e16845260070190915281206001015491925090831161261e576000898152600d602090815260408083206001600160a01b038e1684526007019091529020600101546125f39062015180906125ed908890612f4a565b90612f8c565b9050806125fe575060015b6126128861260c8385612fce565b90612fce565b8601955050505061265d565b61262f620151806125ed8786612f4a565b90508061263a575060015b919350839161264d8861260c8385612fce565b9095019450505060001901612511565b506000858152600d602052604090206001015461267e908390600a0a612f8c565b6000868152600d6020526040812060030154919350906126a9906305f5e100906125ed908890612fce565b6000878152600d60205260409020600201549091506126d3906126cc9083613027565b8490613027565b979650505050505050565b6000805b600a8110156127bb576000600282600a81106126fa57fe5b01546001600160a01b0316146127b3576000600282600a811061271957fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b15801561276b57600080fd5b505afa15801561277f573d6000803e3d6000fd5b505050506040513d602081101561279557600080fd5b50516001600160a01b031614156127b157600192505050610f40565b505b6001016126e2565b5060009392505050565b60008034116127ef576001600160a01b0385166000908152600c60205260409020600101546127f1565b345b905061283161280286868686612bf5565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152839190612d52565b9050611f7c8582612de9565b61284f846001600160a01b0316612e6a565b15611ccb5763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156128f05781810151838201526020016128d8565b50505050905090810190601f16801561291d5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561294057600080fd5b505af1158015612954573d6000803e3d6000fd5b505050506040513d602081101561296a57600080fd5b50516001600160e01b03191614611ccb5760405162461bcd60e51b815260040180806020018281038252603181526020018061361e6031913960400191505060405180910390fd5b6001600160a01b0381166129f75760405162461bcd60e51b81526004018080602001828103825260268152602001806134646026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b6000838152600d602052604081206008018054612bf09290612a7157fe5b6000918252602080832090910154868352600d8083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a949093908401929190612adb57fe5b9060005260206000209060020201600160028110612af557fe5b0154905260008a8152600d602090815260409182902060090180548351818402810184019094528084529091830182828015612b5a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612b3c575b50505060008d8152600d6020908152604091829020600a0180548351818402810184019094528084529294509250830182828015612bb757602002820191906000526020600020905b815481526020019060010190808311612ba3575b50505060008e8152600d60205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b031661238d565b505050565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152600d82528381206001600160a01b038916825260070190915291822054612c50918490612d52565b6000848152600d602090815260408083206001600160a01b038a168452600701909152902055612c81848484612ea1565b612c8c8584846124f6565b905060005b6000848152600d6020526040902060090154811015612d49576000848152600d60205260408120600901805483908110612cc757fe5b6000918252602080832090910154878352600d90915260408220600a0180546001600160a01b0390921693509084908110612cfe57fe5b6000918252602090912001549050612d1c6127106125ed8684612fce565b6001600160a01b039092166000908152600c60205260409020600190810180549093019092555001612c91565b50949350505050565b60008184841115612de15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612da6578181015183820152602001612d8e565b50505050905090810190601f168015612dd35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600034118015612df95750600081115b15612e45576001600160a01b0382166000908152600c6020526040902060010154612e249082613027565b6001600160a01b0383166000908152600c60205260409020600101556113be565b346113be576001600160a01b03919091166000908152600c6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611a5c5750141592915050565b6000828152600d6020526040902060060154600160a01b900460ff161580612ef757506000828152600d602090815260408083206001600160a01b038716845260070190915290206002015462010000900460ff165b612f3f576040805162461bcd60e51b81526020600482015260146024820152731059191c995cdcc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b612bf0838383613081565b600061164983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d52565b600061164983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061327f565b600082612fdd57506000610f40565b82820282848281612fea57fe5b04146116495760405162461bcd60e51b81526004018080602001828103825260218152602001806135786021913960400191505060405180910390fd5b600082820183811015611649576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000828152600d602090815260408083206001600160a01b03871684526007019091528120546130b19083613027565b6000848152600d602090815260408083206001600160a01b03891684526007019091529020549091506131ae576000838152600d602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff1661317d576001600160a01b0384166000818152600c6020908152604080832060020180546001818101835591855283852001889055878452600d83529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b6000838152600d602090815260408083206001600160a01b038816845260070190915290204260019091015561324f565b6000838152600d602090815260408083206001600160a01b03881684526007019091528120600101546131e2904290612f4a565b6000858152600d602090815260408083206001600160a01b038a1684526007019091528120549192509061321c9084906125ed9085612fce565b6000868152600d602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b6000928352600d602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b600081836132ce5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612da6578181015183820152602001612d8e565b5060008385816132da57fe5b0495945050505050565b82600a810192821561332c579160200282015b8281111561332c57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906132f7565b50613338929150613404565b5090565b826002810192821561336a579160200282015b8281111561336a57825182559160200191906001019061334f565b50613338929150613423565b82805482825590600052602060002090810192821561332c579160200282018281111561332c57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906132f7565b82805482825590600052602060002090810192821561336a579160200282018281111561336a57825182559160200191906001019061334f565b5b808211156133385780546001600160a01b0319168155600101613405565b5b80821115613338576000815560010161342456fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a26469706673582212200a50dbf059c222f93cbae39036011d9dbeb93405f21a33462dd2fcac7e02e10f64736f6c634300070100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106101805760003560e01c80638870147b116100d1578063d1660e181161008a578063ed70554d11610064578063ed70554d14610c56578063f242432a14610cd4578063f2fde38b14610d67578063f8a5a07c14610d9a57610180565b8063d1660e1814610ba3578063d41d0aa314610be2578063e985e9c514610c1b57610180565b80638870147b146108fb5780638aeba37e1461092e5780638da5cb5b14610967578063a22cb46514610998578063c02f303c146109d3578063c40b87ae14610a0657610180565b80634392e5771161013e5780635dafec1b116101185780635dafec1b1461081d5780635dd2b9a614610856578063759c52141461088f5780637627b732146108c857610180565b80634392e577146104ba5780634ab0d2531461051b5780634e1273f41461069d57610180565b8062fdd58e1461018557806301ffc9a7146101d05780632eb2c2d6146102185780632ed42bf7146103415780633cacd7d6146103d5578063414ed0ce14610428575b600080fd5b34801561019157600080fd5b506101be600480360360408110156101a857600080fd5b506001600160a01b038135169060200135610ed1565b60408051918252519081900360200190f35b3480156101dc57600080fd5b50610204600480360360208110156101f357600080fd5b50356001600160e01b031916610f46565b604080519115158252519081900360200190f35b61033f600480360360a081101561022e57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561026157600080fd5b82018360208201111561027357600080fd5b803590602001918460208302840111600160201b8311171561029457600080fd5b919390929091602081019035600160201b8111156102b157600080fd5b8201836020820111156102c357600080fd5b803590602001918460208302840111600160201b831117156102e457600080fd5b919390929091602081019035600160201b81111561030157600080fd5b82018360208201111561031357600080fd5b803590602001918460018302840111600160201b8311171561033457600080fd5b509092509050610f8d565b005b34801561034d57600080fd5b5061035661123b565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610399578181015183820152602001610381565b50505050905090810190601f1680156103c65780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103e157600080fd5b50610408600480360360208110156103f857600080fd5b50356001600160a01b03166112d1565b604080519315158452911515602084015282820152519081900360600190f35b34801561043457600080fd5b506104526004803603602081101561044b57600080fd5b50356112f7565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b3480156104c657600080fd5b5061033f60048036036101408110156104de57600080fd5b81019080806101400190600a806020026040519081016040528092919082600a6020028082843760009201919091525091945061136a9350505050565b34801561052757600080fd5b5061033f600480360361014081101561053f57600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b81111561059457600080fd5b8201836020820111156105a657600080fd5b803590602001918460208302840111600160201b831117156105c757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561061657600080fd5b82018360208201111561062857600080fd5b803590602001918460208302840111600160201b8311171561064957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166113c2565b3480156106a957600080fd5b506107cd600480360360408110156106c057600080fd5b810190602081018135600160201b8111156106da57600080fd5b8201836020820111156106ec57600080fd5b803590602001918460208302840111600160201b8311171561070d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561075c57600080fd5b82018360208201111561076e57600080fd5b803590602001918460208302840111600160201b8311171561078f57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506114b9945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156108095781810151838201526020016107f1565b505050509050019250505060405180910390f35b34801561082957600080fd5b506102046004803603604081101561084057600080fd5b50803590602001356001600160a01b031661163d565b34801561086257600080fd5b5061033f6004803603604081101561087957600080fd5b50803590602001356001600160a01b0316611650565b34801561089b57600080fd5b5061033f600480360360408110156108b257600080fd5b50803590602001356001600160a01b03166116e2565b3480156108d457600080fd5b5061033f600480360360208110156108eb57600080fd5b50356001600160a01b031661176f565b34801561090757600080fd5b5061033f6004803603602081101561091e57600080fd5b50356001600160a01b03166117da565b34801561093a57600080fd5b5061033f6004803603604081101561095157600080fd5b50803590602001356001600160a01b0316611842565b34801561097357600080fd5b5061097c6118c0565b604080516001600160a01b039092168252519081900360200190f35b3480156109a457600080fd5b5061033f600480360360408110156109bb57600080fd5b506001600160a01b03813516906020013515156118cf565b3480156109df57600080fd5b50610204600480360360208110156109f657600080fd5b50356001600160a01b0316611985565b348015610a1257600080fd5b5061033f60048036036101a0811015610a2a57600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610a9a57600080fd5b820183602082011115610aac57600080fd5b803590602001918460208302840111600160201b83111715610acd57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610b1c57600080fd5b820183602082011115610b2e57600080fd5b803590602001918460208302840111600160201b83111715610b4f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611990565b348015610baf57600080fd5b506101be60048036036060811015610bc657600080fd5b506001600160a01b038135169060208101359060400135611a4f565b348015610bee57600080fd5b5061033f60048036036040811015610c0557600080fd5b50803590602001356001600160a01b0316611a64565b348015610c2757600080fd5b5061020460048036036040811015610c3e57600080fd5b506001600160a01b0381358116916020013516611adf565b348015610c6257600080fd5b50610c8060048036036020811015610c7957600080fd5b5035611b20565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b61033f600480360360a0811015610cea57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610d2957600080fd5b820183602082011115610d3b57600080fd5b803590602001918460018302840111600160201b83111715610d5c57600080fd5b509092509050611b7c565b348015610d7357600080fd5b5061033f60048036036020811015610d8a57600080fd5b50356001600160a01b0316611cd3565b348015610da657600080fd5b5061033f60048036036060811015610dbd57600080fd5b81359190810190604081016020820135600160201b811115610dde57600080fd5b820183602082011115610df057600080fd5b803590602001918460208302840111600160201b83111715610e1157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610e6057600080fd5b820183602082011115610e7257600080fd5b803590602001918460208302840111600160201b83111715610e9357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d26945050505050565b60006001600160a01b038316610f185760405162461bcd60e51b815260040180806020018281038252602b815260200180613439602b913960400191505060405180910390fd5b506000818152600d602090815260408083206001600160a01b03861684526007019091529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b1480610f7757506001600160e01b03198216636cdb3d1360e11b145b15610f8457506001610f88565b5060005b919050565b848314610fcb5760405162461bcd60e51b815260040180806020018281038252602e8152602001806135f0602e913960400191505060405180910390fd5b6001600160a01b0387166110105760405162461bcd60e51b815260040180806020018281038252602881526020018061348a6028913960400191505060405180910390fd5b6001600160a01b038816331480611032575061102c8833611adf565b15156001145b61106d5760405162461bcd60e51b81526004018080602001828103825260378152602001806135b96037913960400191505060405180910390fd5b6110dc888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092019190915250611ec992505050565b866001600160a01b0316886001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a461123133898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a9150899081908401838280828437600092019190915250611f8392505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156112c75780601f1061129c576101008083540402835291602001916112c7565b820191906000526020600020905b8154815290600101906020018083116112aa57829003601f168201915b5050505050905082565b600c602052600090815260409020805460019091015460ff808316926101009004169083565b600e6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b611372612174565b6113b1576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6113be600282600a6132e4565b5050565b876113cd8133612185565b611418576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000898152600d6020526040902054611468576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b61147889898989898989896121bf565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b606081518351146114fb5760405162461bcd60e51b81526004018080602001828103825260308152602001806134de6030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561151557600080fd5b5060405190808252806020026020018201604052801561153f578160200160208202803683370190505b50905060005b84518110156116355760006001600160a01b031685828151811061156557fe5b60200260200101516001600160a01b031614156115b35760405162461bcd60e51b81526004018080602001828103825260348152602001806135446034913960400191505060405180910390fd5b600d60008583815181106115c357fe5b6020026020010151815260200190815260200160002060070160008683815181106115ea57fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061162257fe5b6020908102919091010152600101611545565b509392505050565b60006116498383612185565b9392505050565b8161165b8133612185565b6116a6576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b506000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805462ff0000191662010000179055565b816116ed8133612185565b611738576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b506000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805462ff000019169055565b611777612174565b6117b6576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600c60205260409020805460ff19166001179055565b6117e2612174565b611821576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600c60205260409020805460ff19169055565b61184a612174565b611889576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600f546001600160a01b031690565b336001600160a01b03831614156119175760405162461bcd60e51b815260040180806020018281038252602c8152602001806134b2602c913960400191505060405180910390fd5b3360008181526010602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610f4082612363565b61199933612363565b6119e4576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6119f78b8b8b8b8b8b8b8b8b8b8b61238d565b604080518b8152602081018b905281516001600160a01b038e169260009233927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62929181900390910190a45050505050505050505050565b6000611a5c8484846124f6565b949350505050565b611a6c612174565b611aab576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b6000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b6000611aeb83836126de565b806116495750506001600160a01b03918216600090815260106020908152604080832093909416825291909152205460ff1690565b600d60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516611bc15760405162461bcd60e51b815260040180806020018281038252602881526020018061348a6028913960400191505060405180910390fd5b6001600160a01b038616331480611be35750611bdd8633611adf565b15156001145b611c1e5760405162461bcd60e51b81526004018080602001828103825260378152602001806135b96037913960400191505060405180910390fd5b611c2a868686866127c5565b846001600160a01b0316866001600160a01b0316336001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611ccb338787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061283d92505050565b505050505050565b611cdb612174565b611d1a576040805162461bcd60e51b81526020600482018190526024820152600080516020613599833981519152604482015290519081900360640190fd5b611d23816129b2565b50565b611d2f33612363565b611d7a576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000838152600d602052604090205415801590611d98575080518251145b611ddd576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015611ec357611e1a84848381518110611df957fe5b6020026020010151848481518110611e0d57fe5b6020026020010151612a53565b6000848152600d602052604081206008018054909190611e3657fe5b600091825260208220015484516001600160a01b03909116919033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290879086908110611e8057fe5b6020026020010151600d60008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a4600101611de0565b50505050565b6000803411611ef3576001600160a01b0385166000908152600c6020526040902060010154611ef5565b345b905060005b8351811015611f7157611f67611f388787878581518110611f1757fe5b6020026020010151878681518110611f2b57fe5b6020026020010151612bf5565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152849190612d52565b9150600101611efa565b50611f7c8582612de9565b5050505050565b611f95846001600160a01b0316612e6a565b15611ccb5763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561203557818101518382015260200161201d565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561207457818101518382015260200161205c565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156120b0578181015183820152602001612098565b50505050905090810190601f1680156120dd5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561210257600080fd5b505af1158015612116573d6000803e3d6000fd5b505050506040513d602081101561212c57600080fd5b50516001600160e01b03191614611ccb5760405162461bcd60e51b815260040180806020018281038252603681526020018061350e6036913960400191505060405180910390fd5b600f546001600160a01b0316331490565b6000828152600d602090815260408083206001600160a01b038516845260070190915281206002015460ff16806116495750611649612174565b6000805b85518110156121ef578581815181106121d857fe5b6020026020010151820191508060010190506121c3565b50600086511180156121ff575060015b801561220c575080612710145b8015612219575061271084105b61225e576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600d60209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b9091018054600181018255908552929093206122be93928302019161333c565b506000898152600d6020908152604090912087516122e492600990920191890190613376565b506000898152600d60209081526040909120865161230a92600a909201918801906133ca565b50506000978852600d602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b6001600160a01b0381166000908152600c602052604081205460ff1680610f405750610f40612174565b60008a8152600d60205260409020541580156123a95750600089115b6123ee576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b88600d60008c81526020019081526020016000206000018190555087600d60008c8152602001908152602001600020600101819055506001600d60008c81526020019081526020016000206007016000336001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600d60008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506124de8a888888888888886121bf565b6124e98b8b8b612ea1565b5050505050505050505050565b6000828152600d60205260408120600b015481904290600019015b6000868152600d60205260408120600b0180548390811061252e57fe5b60009182526020822060029091020101546000888152600d60205260408120600b01805492935090918490811061256157fe5b906000526020600020906002020160016002811061257b57fe5b01546000898152600d602090815260408083206001600160a01b038e16845260070190915281206001015491925090831161261e576000898152600d602090815260408083206001600160a01b038e1684526007019091529020600101546125f39062015180906125ed908890612f4a565b90612f8c565b9050806125fe575060015b6126128861260c8385612fce565b90612fce565b8601955050505061265d565b61262f620151806125ed8786612f4a565b90508061263a575060015b919350839161264d8861260c8385612fce565b9095019450505060001901612511565b506000858152600d602052604090206001015461267e908390600a0a612f8c565b6000868152600d6020526040812060030154919350906126a9906305f5e100906125ed908890612fce565b6000878152600d60205260409020600201549091506126d3906126cc9083613027565b8490613027565b979650505050505050565b6000805b600a8110156127bb576000600282600a81106126fa57fe5b01546001600160a01b0316146127b3576000600282600a811061271957fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b15801561276b57600080fd5b505afa15801561277f573d6000803e3d6000fd5b505050506040513d602081101561279557600080fd5b50516001600160a01b031614156127b157600192505050610f40565b505b6001016126e2565b5060009392505050565b60008034116127ef576001600160a01b0385166000908152600c60205260409020600101546127f1565b345b905061283161280286868686612bf5565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152839190612d52565b9050611f7c8582612de9565b61284f846001600160a01b0316612e6a565b15611ccb5763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156128f05781810151838201526020016128d8565b50505050905090810190601f16801561291d5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561294057600080fd5b505af1158015612954573d6000803e3d6000fd5b505050506040513d602081101561296a57600080fd5b50516001600160e01b03191614611ccb5760405162461bcd60e51b815260040180806020018281038252603181526020018061361e6031913960400191505060405180910390fd5b6001600160a01b0381166129f75760405162461bcd60e51b81526004018080602001828103825260268152602001806134646026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b6000838152600d602052604081206008018054612bf09290612a7157fe5b6000918252602080832090910154868352600d8083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a949093908401929190612adb57fe5b9060005260206000209060020201600160028110612af557fe5b0154905260008a8152600d602090815260409182902060090180548351818402810184019094528084529091830182828015612b5a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612b3c575b50505060008d8152600d6020908152604091829020600a0180548351818402810184019094528084529294509250830182828015612bb757602002820191906000526020600020905b815481526020019060010190808311612ba3575b50505060008e8152600d60205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b031661238d565b505050565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152600d82528381206001600160a01b038916825260070190915291822054612c50918490612d52565b6000848152600d602090815260408083206001600160a01b038a168452600701909152902055612c81848484612ea1565b612c8c8584846124f6565b905060005b6000848152600d6020526040902060090154811015612d49576000848152600d60205260408120600901805483908110612cc757fe5b6000918252602080832090910154878352600d90915260408220600a0180546001600160a01b0390921693509084908110612cfe57fe5b6000918252602090912001549050612d1c6127106125ed8684612fce565b6001600160a01b039092166000908152600c60205260409020600190810180549093019092555001612c91565b50949350505050565b60008184841115612de15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612da6578181015183820152602001612d8e565b50505050905090810190601f168015612dd35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600034118015612df95750600081115b15612e45576001600160a01b0382166000908152600c6020526040902060010154612e249082613027565b6001600160a01b0383166000908152600c60205260409020600101556113be565b346113be576001600160a01b03919091166000908152600c6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611a5c5750141592915050565b6000828152600d6020526040902060060154600160a01b900460ff161580612ef757506000828152600d602090815260408083206001600160a01b038716845260070190915290206002015462010000900460ff165b612f3f576040805162461bcd60e51b81526020600482015260146024820152731059191c995cdcc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b612bf0838383613081565b600061164983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d52565b600061164983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061327f565b600082612fdd57506000610f40565b82820282848281612fea57fe5b04146116495760405162461bcd60e51b81526004018080602001828103825260218152602001806135786021913960400191505060405180910390fd5b600082820183811015611649576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000828152600d602090815260408083206001600160a01b03871684526007019091528120546130b19083613027565b6000848152600d602090815260408083206001600160a01b03891684526007019091529020549091506131ae576000838152600d602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff1661317d576001600160a01b0384166000818152600c6020908152604080832060020180546001818101835591855283852001889055878452600d83529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b6000838152600d602090815260408083206001600160a01b038816845260070190915290204260019091015561324f565b6000838152600d602090815260408083206001600160a01b03881684526007019091528120600101546131e2904290612f4a565b6000858152600d602090815260408083206001600160a01b038a1684526007019091528120549192509061321c9084906125ed9085612fce565b6000868152600d602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b6000928352600d602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b600081836132ce5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612da6578181015183820152602001612d8e565b5060008385816132da57fe5b0495945050505050565b82600a810192821561332c579160200282015b8281111561332c57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906132f7565b50613338929150613404565b5090565b826002810192821561336a579160200282015b8281111561336a57825182559160200191906001019061334f565b50613338929150613423565b82805482825590600052602060002090810192821561332c579160200282018281111561332c57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906132f7565b82805482825590600052602060002090810192821561336a579160200282018281111561336a57825182559160200191906001019061334f565b5b808211156133385780546001600160a01b0319168155600101613405565b5b80821115613338576000815560010161342456fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a26469706673582212200a50dbf059c222f93cbae39036011d9dbeb93405f21a33462dd2fcac7e02e10f64736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "99:1135:13:-:0;;;;;;;;;;;;-1:-1:-1;638:30:12;657:10;638:18;:30::i;:::-;99:1135:13;;1671:225:12;-1:-1:-1;;;;;1744:22:12;;1736:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:6;;1824:38;;-1:-1:-1;;;;;1824:38:12;;;;1845:6;;1824:38;;1845:6;;1824:38;1872:6;:17;;-1:-1:-1;;;;;;1872:17:12;-1:-1:-1;;;;;1872:17:12;;;;;;;;;;1671:225::o;99:1135:13:-;;;;;;;",
  "deployedSourceMap": "99:1135:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1842:234:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1842:234:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1247:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1247:255:8;-1:-1:-1;;;;;;1247:255:8;;:::i;:::-;;;;;;;;;;;;;;;;;;6062:770;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6062:770:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6062:770:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6062:770:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6062:770:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6062:770:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6062:770:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6062:770:8;;;;;;;;;;-1:-1:-1;6062:770:8;;-1:-1:-1;6062:770:8;-1:-1:-1;6062:770:8;:::i;:::-;;1698:22:15;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1726:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1726:39:15;-1:-1:-1;;;;;1726:39:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1818:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1818:47:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1818:47:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:151:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;510:151:14;;-1:-1:-1;510:151:14;;-1:-1:-1;;;;510:151:14:i;2251:823:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;2251:823:10;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;-1:-1:-1;;;;;2251:823:10;;:::i;2400:631:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2400:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2400:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2400:631:8;;;;;;;;-1:-1:-1;2400:631:8;;-1:-1:-1;;;;;2400:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2400:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2400:631:8;;-1:-1:-1;2400:631:8;;-1:-1:-1;;;;;2400:631:8:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:132:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1412:132:10;;;;;;-1:-1:-1;;;;;1412:132:10;;:::i;388:140:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:140:13;;;;;;-1:-1:-1;;;;;388:140:13;;:::i;684:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;684:140:13;;;;;;-1:-1:-1;;;;;684:140:13;;:::i;623:119:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;623:119:11;-1:-1:-1;;;;;623:119:11;;:::i;879:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;879:117:11;-1:-1:-1;;;;;879:117:11;;:::i;731:144:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;731:144:10;;;;;;-1:-1:-1;;;;;731:144:10;;:::i;1124:86:12:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1124:86:12;;;;;;;;;;;;;;3509:296:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3509:296:8;;;;;;;;;;:::i;1142:116:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1142:116:11;-1:-1:-1;;;;;1142:116:11;;:::i;2097:1038::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2097:1038:11;;;;;;;;-1:-1:-1;2097:1038:11;;-1:-1:-1;;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2097:1038:11;;;;;;;;-1:-1:-1;2097:1038:11;;-1:-1:-1;;;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2097:1038:11;;-1:-1:-1;;2097:1038:11;;;-1:-1:-1;;;2097:1038:11;;;;;;;;;;-1:-1:-1;;;;;2097:1038:11;;:::i;540:159:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;540:159:7;;;;;;;;;;;;;:::i;1044:142:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1044:142:10;;;;;;-1:-1:-1;;;;;1044:142:10;;:::i;4086:203:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4086:203:8;;;;;;;;;;:::i;1771:41:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1771:41:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1771:41:15;;;;;;;;;;;;;;;;;;;;;;;;;;4843:630:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4843:630:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4843:630:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4843:630:8;;;;;;;;;;-1:-1:-1;4843:630:8;;-1:-1:-1;4843:630:8;-1:-1:-1;4843:630:8;:::i;1359:116:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1359:116:12;-1:-1:-1;;;;;1359:116:12;;:::i;3362:645:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3362:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3362:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3362:645:11;;;;;;;;-1:-1:-1;3362:645:11;;-1:-1:-1;;;;;3362:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3362:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3362:645:11;;-1:-1:-1;3362:645:11;;-1:-1:-1;;;;;3362:645:11:i;1842:234:8:-;1920:7;-1:-1:-1;;;;;1947:21:8;;1939:77;;;;-1:-1:-1;;;1939:77:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2033:11:8;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2033:28:8;;;;:19;;:28;;;;;:36;1842:234;;;;;:::o;1247:255::-;1327:4;-1:-1:-1;;;;;;1345:42:8;;-1:-1:-1;;;1345:42:8;;:99;;-1:-1:-1;;;;;;;1401:43:8;;-1:-1:-1;;;1401:43:8;1345:99;1341:135;;;-1:-1:-1;1463:4:8;1456:11;;1341:135;-1:-1:-1;1490:5:8;1247:255;;;;:::o;6062:770::-;6293:27;;;6285:86;;;;-1:-1:-1;;;6285:86:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6389:16:8;;6381:69;;;;-1:-1:-1;;;6381:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6481:18:8;;6489:10;6481:18;;:64;;;6503:34;6520:4;6526:10;6503:16;:34::i;:::-;:42;;6541:4;6503:42;6481:64;6460:166;;;;-1:-1:-1;;;6460:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6637:37;6652:4;6658:2;6662:3;;6637:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6637:37:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6667:6:8;;-1:-1:-1;6667:6:8;;;;6637:37;;;6667:6;;6637:37;6667:6;6637:37;;;;;;;;;-1:-1:-1;6637:14:8;;-1:-1:-1;;;6637:37:8:i;:::-;6722:2;-1:-1:-1;;;;;6690:48:8;6716:4;-1:-1:-1;;;;;6690:48:8;6704:10;-1:-1:-1;;;;;6690:48:8;;6726:3;;6731:6;;6690:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6690:48:8;;;;;;;;;;;;;;;;;-1:-1:-1;6690:48:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6690:48:8;;;;;;;;-1:-1:-1;6690:48:8;;-1:-1:-1;;;;;;;6690:48:8;6749:76;6785:10;6797:4;6803:2;6807:3;;6749:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6749:76:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6812:6:8;;-1:-1:-1;6812:6:8;;;;6749:76;;;6812:6;;6749:76;6812:6;6749:76;;;;;;;;;-1:-1:-1;;6749:76:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6820:4:8;;-1:-1:-1;6820:4:8;;;;6749:76;;6820:4;;;;6749:76;;;;;;;;;-1:-1:-1;6749:35:8;;-1:-1:-1;;;6749:76:8:i;:::-;6062:770;;;;;;;;:::o;1698:22:15:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1698:22:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1726:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1818:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1818:47:15;;;;-1:-1:-1;;;1818:47:15;;;;;-1:-1:-1;;;1818:47:15;;;;;-1:-1:-1;;;1818:47:15;;;;;-1:-1:-1;;;1818:47:15;;;;;-1:-1:-1;;;1818:47:15;;;;;:::o;510:151:14:-;888:10:12;:8;:10::i;:::-;880:55;;;;;-1:-1:-1;;;880:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;880:55:12;;;;;;;;;;;;;;;607:47:14::1;:30;640:14:::0;607:47:::1;;:::i;:::-;;510:151:::0;:::o;2251:823:10:-;2686:2;427:28;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;;;;2729:1:::1;2708:11:::0;;;:7:::1;:11;::::0;;;;:18;2700:48:::1;;;::::0;;-1:-1:-1;;;2700:48:10;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2700:48:10;;;;;;;;;;;;;::::1;;2759:262;2769:2;2791:12;2823:15;2858:14;2892:24;2936:21;2977:9;3006:14;2759:9;:262::i;:::-;3037:30;::::0;;;;;;;3050:2;;3037:30:::1;::::0;;;;;::::1;::::0;;::::1;2251:823:::0;;;;;;;;;:::o;2400:631:8:-;2549:16;2608:3;:10;2589:8;:15;:29;2581:90;;;;-1:-1:-1;;;2581:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2682:30;2729:8;:15;2715:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2715:30:8;;2682:63;;2761:9;2756:238;2780:8;:15;2776:1;:19;2756:238;;;2847:1;-1:-1:-1;;;;;2824:25:8;:8;2833:1;2824:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2824:25:8;;;2816:90;;;;-1:-1:-1;;;2816:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2939:7;:15;2947:3;2951:1;2947:6;;;;;;;;;;;;;;2939:15;;;;;;;;;;;:23;;:36;2963:8;2972:1;2963:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2939:36:8;-1:-1:-1;;;;;2939:36:8;;;;;;;;;;;;:44;;;2920:13;2934:1;2920:16;;;;;;;;;;;;;;;;;:63;2797:3;;2756:238;;;-1:-1:-1;3011:13:8;2400:631;-1:-1:-1;;;2400:631:8:o;1412:132:10:-;1487:4;1510:27;1523:2;1527:9;1510:12;:27::i;:::-;1503:34;1412:132;-1:-1:-1;;;1412:132:10:o;388:140:13:-;462:2;427:28:10;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;;;;-1:-1:-1;476:11:13::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;476:27:13;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:45:::0;;-1:-1:-1;;476:45:13::1;::::0;::::1;::::0;;388:140::o;684:::-;757:2;427:28:10;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;;;;-1:-1:-1;812:5:13::1;771:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;771:27:13;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:46:::0;;-1:-1:-1;;771:46:13::1;::::0;;684:140::o;623:119:11:-;888:10:12;:8;:10::i;:::-;880:55;;;;;-1:-1:-1;;;880:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;880:55:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;699:17:11::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;699:36:11::1;731:4;699:36;::::0;;623:119::o;879:117::-;888:10:12;:8;:10::i;:::-;880:55;;;;;-1:-1:-1;;;880:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;880:55:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;952:17:11::1;984:5;952:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;952:37:11::1;::::0;;879:117::o;731:144:10:-;888:10:12;:8;:10::i;:::-;880:55;;;;;-1:-1:-1;;;880:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;880:55:12;;;;;;;;;;;;;;;819:11:10::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;819:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;819:49:10::1;864:4;819:49;::::0;;731:144::o;1124:86:12:-;1197:6;;-1:-1:-1;;;;;1197:6:12;1124:86;:::o;3509:296:8:-;3605:10;-1:-1:-1;;;;;3605:22:8;;;;3597:79;;;;-1:-1:-1;;;3597:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3705:10;3686:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;3686:40:8;;;;;;;;;;;;:51;;-1:-1:-1;;3686:51:8;;;;;;;;;;3752:46;;;;;;;3686:40;;3705:10;3752:46;;;;;;;;;;;3509:296;;:::o;1142:116:11:-;1205:4;1228:23;1241:9;1228:12;:23::i;2097:1038::-;325:24;338:10;325:12;:24::i;:::-;317:60;;;;;-1:-1:-1;;;317:60:11;;;;;;;;;;;;-1:-1:-1;;;317:60:11;;;;;;;;;;;;;;;2674:378:::1;2687:9;2719:2;2744:6;2773:8;2804:12;2839:15;2877:14;2914:24;2961:21;3005:9;3037:14;2674:12;:378::i;:::-;3067:61;::::0;;;;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;3067:61:11;::::1;::::0;3102:1:::1;::::0;3082:10:::1;::::0;3067:61:::1;::::0;;;;;;;;;::::1;2097:1038:::0;;;;;;;;;;;:::o;540:159:7:-;630:7;656:36;673:7;682:2;686:5;656:16;:36::i;:::-;649:43;540:159;-1:-1:-1;;;;540:159:7:o;1044:142:10:-;888:10:12;:8;:10::i;:::-;880:55;;;;;-1:-1:-1;;;880:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;880:55:12;;;;;;;;;;;;;;;1174:5:10::1;1129:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1129:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1129:50:10::1;::::0;;1044:142::o;4086:203:8:-;4177:4;4200:41;4223:7;4232:8;4200:22;:41::i;:::-;:82;;;-1:-1:-1;;;;;;;4245:27:8;;;;;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4086:203::o;1771:41:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1771:41:15;;;;-1:-1:-1;;;1771:41:15;;;;;-1:-1:-1;;;1771:41:15;;;;:::o;4843:630:8:-;-1:-1:-1;;;;;5045:16:8;;5037:69;;;;-1:-1:-1;;;5037:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5137:18:8;;5145:10;5137:18;;:64;;;5159:34;5176:4;5182:10;5159:16;:34::i;:::-;:42;;5197:4;5159:42;5137:64;5116:166;;;;-1:-1:-1;;;5116:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5293:30;5303:4;5309:2;5313;5317:5;5293:9;:30::i;:::-;5372:2;-1:-1:-1;;;;;5339:47:8;5366:4;-1:-1:-1;;;;;5339:47:8;5354:10;-1:-1:-1;;;;;5339:47:8;;5376:2;5380:5;5339:47;;;;;;;;;;;;;;;;;;;;;;;;5397:69;5428:10;5440:4;5446:2;5450;5454:5;5461:4;;5397:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5397:30:8;;-1:-1:-1;;;5397:69:8:i;:::-;4843:630;;;;;;:::o;1359:116:12:-;888:10;:8;:10::i;:::-;880:55;;;;;-1:-1:-1;;;880:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;880:55:12;;;;;;;;;;;;;;;1440:28:::1;1459:8;1440:18;:28::i;:::-;1359:116:::0;:::o;3362:645:11:-;325:24;338:10;325:12;:24::i;:::-;317:60;;;;;-1:-1:-1;;;317:60:11;;;;;;;;;;;;-1:-1:-1;;;317:60:11;;;;;;;;;;;;;;;3563:1:::1;3542:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;3598:14;:21;3584:3;:10;:35;3542:77;3534:107;;;::::0;;-1:-1:-1;;;3534:107:11;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3534:107:11;;;;;;;;;;;;;::::1;;3657:9;3652:349;3676:3;:10;3672:1;:14;3652:349;;;3707:42;3719:2;3723:3;3727:1;3723:6;;;;;;;;;;;;;;3731:14;3746:1;3731:17;;;;;;;;;;;;;;3707:11;:42::i;:::-;3872:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;3931:6;;-1:-1:-1;;;;;3872:25:11;;::::1;::::0;;3784:10:::1;::::0;3769:221:::1;::::0;3931:3;;3935:1;;3931:6;::::1;;;;;;;;;;;3971:7;:11;3979:2;3971:11;;;;;;;;;;;:18;;;3769:221;;;;;;;;;;;;;;;;;;;;;;;;3688:3;;3652:349;;;;3362:645:::0;;;:::o;4356:404:7:-;4472:19;4506:1;4494:9;:13;:51;;-1:-1:-1;;;;;4522:12:7;;;;;;:6;:12;;;;;:23;;;4494:51;;;4510:9;4494:51;4472:73;;4560:9;4555:157;4579:3;:10;4575:1;:14;4555:157;;;4624:77;4640:40;4652:4;4658:2;4662:3;4666:1;4662:6;;;;;;;;;;;;;;4670;4677:1;4670:9;;;;;;;;;;;;;;4640:11;:40::i;:::-;4624:77;;;;;;;;;;;;-1:-1:-1;;;4624:77:7;;;;:11;;:77;:15;:77::i;:::-;4610:91;-1:-1:-1;4591:3:7;;4555:157;;;;4721:32;4735:4;4741:11;4721:13;:32::i;:::-;4356:404;;;;;:::o;7455:558:8:-;7698:15;:2;-1:-1:-1;;;;;7698:13:8;;:15::i;:::-;7695:312;;;7856:52;;;-1:-1:-1;;;;;7754:154:8;;7771:2;-1:-1:-1;;;;;7754:43:8;;7798:8;7808:4;7814:3;7819:6;7827:4;7754:78;;;;;;;;;;;;;-1:-1:-1;;;;;7754:78:8;;;;;;-1:-1:-1;;;;;7754:78:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7754:78:8;-1:-1:-1;;;;;;7754:154:8;;7729:267;;;;-1:-1:-1;;;7729:267:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1979:93:12;2059:6;;-1:-1:-1;;;;;2059:6:12;2045:10;:20;;1979:93::o;3175:162:10:-;3251:4;3274:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3274:30:10;;;;:19;;:30;;;;;:42;;;;;;:56;;;3320:10;:8;:10::i;4251:1359:11:-;4670:23;4712:9;4707:120;4731:24;:31;4727:1;:35;4707:120;;;4800:24;4825:1;4800:27;;;;;;;;;;;;;;4781:46;;;;4764:3;;;;;4707:120;;;;4870:1;4846:14;:21;:25;:75;;;;-1:-1:-1;4875:46:11;4846:75;:119;;;;;4941:15;4960:5;4941:24;4846:119;:168;;;;;5009:5;4985:21;:29;4846:168;4838:214;;;;;-1:-1:-1;;;4838:214:11;;;;;;;;;;;;-1:-1:-1;;;4838:214:11;;;;;;;;;;;;;;;5063:11;;;;:7;:11;;;;;;;;:24;;;:39;;;5149:18;;5112:34;;;;:55;;;;5212:18;;;;-1:-1:-1;5177:32:11;;:53;5240:74;;;;;;;5277:15;5240:74;;5294:18;;;;5240:74;;;;:30;;;;:74;;5228:1;5240:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5324:11:11;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;5377:11:11;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;5450:11:11;;;;:7;:11;;;;;;:33;;;:57;;;;5517:21;;;;:33;;-1:-1:-1;;;;5517:33:11;-1:-1:-1;;;5517:33:11;;;;;;;;;;;-1:-1:-1;;;;;;5560:43:11;-1:-1:-1;;;;;5560:43:11;;;;;;;;;;-1:-1:-1;;;;4251:1359:11:o;4108:137::-;-1:-1:-1;;;;;4195:17:11;;4172:4;4195:17;;;:6;:17;;;;;:29;;;;:43;;;4228:10;:8;:10::i;5617:1165::-;6199:11;;;;:7;:11;;;;;:18;:23;:37;;;;;6235:1;6226:6;:10;6199:37;6191:67;;;;;-1:-1:-1;;;6191:67:11;;;;;;;;;;;;-1:-1:-1;;;6191:67:11;;;;;;;;;;;;;;;6290:6;6269:7;:11;6277:2;6269:11;;;;;;;;;;;:18;;:27;;;;6329:8;6306:7;:11;6314:2;6306:11;;;;;;;;;;;:20;;:31;;;;6393:4;6347:7;:11;6355:2;6347:11;;;;;;;;;;;:19;;:31;6367:10;-1:-1:-1;;;;;6347:31:11;-1:-1:-1;;;;;6347:31:11;;;;;;;;;;;;:43;;;:50;;;;;;;;;;;;;;;;;;6451:4;6407:7;:11;6415:2;6407:11;;;;;;;;;;;:19;;:30;6427:9;-1:-1:-1;;;;;6407:30:11;-1:-1:-1;;;;;6407:30:11;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;6466:262;6476:2;6498:12;6530:15;6565:14;6599:24;6643:21;6684:9;6713:14;6466:9;:262::i;:::-;6739:36;6753:9;6764:2;6768:6;6739:13;:36::i;:::-;5617:1165;;;;;;;;;;;:::o;1925:1325:7:-;2018:7;2129:11;;;:7;:11;;;;;:30;;:37;2018:7;;2089:15;;-1:-1:-1;;2129:41:7;2115:835;2200:19;2222:11;;;:7;:11;;;;;:30;;:33;;2253:1;;2222:33;;;;;;;;;;;;;;;;;;:36;;2272:12;2287:11;;;:7;:11;;;;;:30;;:33;;2222:36;;-1:-1:-1;2272:12:7;;2318:1;;2287:33;;;;;;;;;;;;;;;;2321:1;2287:36;;;;;;;;;2337:19;2375:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2375:28:7;;;;:19;;:28;;;;;:37;;;2287:36;;-1:-1:-1;2337:19:7;2375:52;-1:-1:-1;2371:569:7;;2477:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2477:28:7;;;;:19;;:28;;;;;:37;;;2461:66;;2521:5;;2462:53;;:10;;:14;:53::i;:::-;2461:59;;:66::i;:::-;2447:80;-1:-1:-1;2549:16:7;2545:37;;-1:-1:-1;2581:1:7;2545:37;2613:34;2641:5;2614:21;:11;2630:4;2614:15;:21::i;:::-;2613:27;;:34::i;:::-;2600:47;;;;2665:5;;;;;2371:569;2723:40;2757:5;2724:27;:10;2739:11;2724:14;:27::i;2723:40::-;2709:54;-1:-1:-1;2785:16:7;2781:37;;-1:-1:-1;2817:1:7;2781:37;2849:11;;-1:-1:-1;2849:11:7;;2891:34;2919:5;2892:21;:11;2908:4;2892:15;:21::i;2891:34::-;2878:47;;;;-1:-1:-1;;;;;2180:3:7;2115:835;;;-1:-1:-1;3007:11:7;;;;:7;:11;;;;;:20;;;2989:39;;:9;;3003:2;:24;2989:13;:39::i;:::-;3086:17;3117:11;;;:7;:11;;;;;:32;;;2977:51;;-1:-1:-1;3086:17:7;3106:56;;3156:5;;3107:43;;:5;;:9;:43::i;3106:56::-;3193:11;;;;:7;:11;;;;;:34;;;3086:76;;-1:-1:-1;3179:64:7;;3193:49;;3086:76;3193:38;:49::i;:::-;3179:9;;:13;:64::i;:::-;3172:71;1925:1325;-1:-1:-1;;;;;;;1925:1325:7:o;762:516:14:-;852:4;;868:382;892:37;888:1;:41;868:382;;;999:1;954:30;985:1;954:33;;;;;;;;;-1:-1:-1;;;;;954:33:14;:47;950:290;;1021:27;1065:30;1096:1;1065:33;;;;;;;;;1129:30;;;-1:-1:-1;;;1129:30:14;;-1:-1:-1;;;;;1129:30:14;;;;;;;;;1065:33;;;;-1:-1:-1;1121:51:14;;;;1065:33;;1129:21;;:30;;;;;;;;;;;;;;1065:33;1129:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1129:30:14;-1:-1:-1;;;;;1121:51:14;;1117:109;;;1203:4;1196:11;;;;;;1117:109;950:290;;931:3;;868:382;;;-1:-1:-1;1266:5:14;;762:516;-1:-1:-1;;;762:516:14:o;3992:306:7:-;4083:19;4117:1;4105:9;:13;:51;;-1:-1:-1;;;;;4133:12:7;;;;;;:6;:12;;;;;:23;;;4105:51;;;4121:9;4105:51;4083:73;;4180:69;4196:32;4208:4;4214:2;4218;4222:5;4196:11;:32::i;:::-;4180:69;;;;;;;;;;;;-1:-1:-1;;;4180:69:7;;;;:11;;:69;:15;:69::i;:::-;4166:83;;4259:32;4273:4;4279:11;4259:13;:32::i;6933:516:8:-;7151:15;:2;-1:-1:-1;;;;;7151:13:8;;:15::i;:::-;7148:295;;;7302:47;;;-1:-1:-1;;;;;7207:142:8;;7224:2;-1:-1:-1;;;;;7207:38:8;;7246:8;7256:4;7262:2;7266:5;7273:4;7207:71;;;;;;;;;;;;;-1:-1:-1;;;;;7207:71:8;;;;;;-1:-1:-1;;;;;7207:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7207:71:8;-1:-1:-1;;;;;;7207:142:8;;7182:250;;;;-1:-1:-1;;;7182:250:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:225:12;-1:-1:-1;;;;;1744:22:12;;1736:73;;;;-1:-1:-1;;;1736:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:6;;1824:38;;-1:-1:-1;;;;;1824:38:12;;;;1845:6;;1824:38;;1845:6;;1824:38;1872:6;:17;;-1:-1:-1;;;;;;1872:17:12;-1:-1:-1;;;;;1872:17:12;;;;;;;;;;1671:225::o;6788:766:11:-;6892:11;;;;:7;:11;;;;;:22;;:25;;6879:668;;6892:11;:25;;;;;;;;;;;;;;;;6970:11;;;:7;:11;;;;;;;:18;;6892:25;7011:20;;;6879:668;;;;;;;7114:34;;;;6879:668;;7173:32;;;;6879:668;;;;7230:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;6892:25:11;;;;6940:7;;6970:18;;7011:20;;7054:12;;6879:668;;;;;;7230:30;6892:25;7230:33;;;;;;;;;;;;;;7264:1;7230:36;;;;;;;;;6879:668;;7312:11;;;;:7;:11;;;;;;;;;:26;;6879:668;;;;;;;;;;;;;;;;;7312:26;;6879:668;;7312:26;6879:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6879:668:11;;;;;;;;;;;;;;;;-1:-1:-1;;;7361:11:11;;;;:7;:11;;;;;;;;;:36;;6879:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;7361:36:11;-1:-1:-1;6879:668:11;;7361:36;6879:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7420:11:11;;;;:7;:11;;;;;:33;;;;7476:21;;;;;7420:33;;-1:-1:-1;7476:21:11;-1:-1:-1;;;7476:21:11;;;;-1:-1:-1;;;;;;7520:26:11;6879:12;:668::i;:::-;6788:766;;;:::o;3256:683:7:-;3416:68;;;;;;;;;;;-1:-1:-1;;;3416:68:7;;;;;;;;3356:12;3416:11;;;:7;:11;;;;;-1:-1:-1;;;;;3416:25:7;;;;:19;;:25;;;;;;:33;:68;;3454:5;;3416:37;:68::i;:::-;3380:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3380:25:7;;;;:19;;:25;;;;;:104;3494:28;3508:2;3388;3516:5;3494:13;:28::i;:::-;3540:33;3557:4;3563:2;3567:5;3540:16;:33::i;:::-;3533:40;;3589:9;3584:327;3608:11;;;;:7;:11;;;;;:26;;:33;3604:37;;3584:327;;;3662:21;3686:11;;;:7;:11;;;;;:26;;:29;;3713:1;;3686:29;;;;;;;;;;;;;;;;;;3764:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;3686:29:7;;;;-1:-1:-1;3764:36:7;3801:1;;3764:39;;;;;;;;;;;;;;;;;-1:-1:-1;3853:47:7;3894:5;3854:34;:4;3764:39;3854:8;:34::i;3853:47::-;-1:-1:-1;;;;;3817:21:7;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;3643:3:7;3584:327;;;;3256:683;;;;;;:::o;1877:187:17:-;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:17;;;1877:187::o;4766:290:7:-;4857:1;4845:9;:13;:32;;;;;4876:1;4862:11;:15;4845:32;4841:209;;;-1:-1:-1;;;;;4917:12:7;;;;;;:6;:12;;;;;:23;;;:40;;4945:11;4917:27;:40::i;:::-;-1:-1:-1;;;;;4891:12:7;;;;;;:6;:12;;;;;:23;;:66;4841:209;;;4976:9;4972:78;;-1:-1:-1;;;;;5004:12:7;;;;;;;;:6;:12;;;;;:23;;:37;4766:290::o;590:797:16:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:16;;;1329:51;-1:-1:-1;;590:797:16:o;976:255:13:-;1082:11;;;;:7;:11;;;;;:21;;;-1:-1:-1;;;1082:21:13;;;;1081:22;;:67;;-1:-1:-1;1107:11:13;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1107:30:13;;;;:19;;:30;;;;;:41;;;;;;;;1081:67;1073:100;;;;;-1:-1:-1;;;1073:100:13;;;;;;;;;;;;-1:-1:-1;;;1073:100:13;;;;;;;;;;;;;;;1183:41;1203:9;1214:2;1218:5;1183:19;:41::i;1307:134:17:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;3218:130::-;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;2304:459::-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:17;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:176;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:17;;;;;;;;;;;;;;;;;;;;;;;;;;;879:1006:7;975:18;996:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;996:30:7;;;;:19;;:30;;;;;:38;:49;;1039:5;996:42;:49::i;:::-;1060:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1060:30:7;;;;:19;;:30;;;;;:38;975:70;;-1:-1:-1;1056:761:7;;1125:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1125:30:7;;;;:19;;:30;;;;;:39;;;;;;;;1120:225;;-1:-1:-1;;;;;1184:17:7;;;;;;:6;:17;;;;;;;;:24;;:33;;;;;;;;;;;;;;;;;;1235:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1235:38:7;;;;;1291:30;;;;:19;;;;:30;;1120:225;1359:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1359:30:7;;;;:19;;:30;;;;;1401:15;1359:39;;;;:57;1056:761;;;1527:20;1570:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1570:30:7;;;;:19;;:30;;;;;:39;;;1550:60;;:15;;:19;:60::i;:::-;1624:19;1647:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1647:30:7;;;;:19;;:30;;;;;:38;1527:83;;-1:-1:-1;1624:19:7;1646:74;;1709:10;;1647:56;;1527:83;1647:42;:56::i;1646:74::-;1735:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1735:30:7;;;;:19;;:30;;;;;1777:15;:29;;;;1735:39;;;;:71;-1:-1:-1;;1056:761:7;1827:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1827:30:7;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;879:1006:7:o;3969:338:17:-;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:17:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport './Maintenable.sol';\n\ncontract Privatizable is Maintenable {\n\n\n    /****************************\n    EXTERNAL FUNCTIONS\n    *****************************/\n\n\n    /**\n     * @dev Function to approve holder for a private token.\n     * @param id the token id\n     * @param holder The authorized address\n     */\n    function approveHolder(uint256 id, address holder) external onlyMaintener(id) {\n        _tokens[id].holders[holder].isApproved = true;\n    }\n\n\n    /**\n     * @dev Function to revoke holder for a private token.\n     * @param id the token id\n     * @param holder The authorized address\n     */\n    function revokeHolder(uint256 id, address holder) external onlyMaintener(id) {\n        _tokens[id].holders[holder].isApproved = false;\n    }\n\n\n    /****************************\n    INTERNAL FUNCTIONS\n    *****************************/\n\n\n    // override ChargeableTransfer._addToBalance()\n    function _addToBalance(address recipient, uint256 id, uint256 value) internal override {\n        require(!_tokens[id].isPrivate || _tokens[id].holders[recipient].isApproved, \"Address not approved\");\n        super._addToBalance(recipient, id, value);\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
    "exportedSymbols": {
      "Privatizable": [
        3183
      ]
    },
    "id": 3184,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3099,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:13"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
        "file": "./Maintenable.sol",
        "id": 3100,
        "nodeType": "ImportDirective",
        "scope": 3184,
        "sourceUnit": 2485,
        "src": "70:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3101,
              "name": "Maintenable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2484,
              "src": "124:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Maintenable_$2484",
                "typeString": "contract Maintenable"
              }
            },
            "id": 3102,
            "nodeType": "InheritanceSpecifier",
            "src": "124:11:13"
          }
        ],
        "contractDependencies": [
          259,
          321,
          344,
          1638,
          2095,
          2484,
          3005,
          3097,
          3274,
          3384
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3183,
        "linearizedBaseContracts": [
          3183,
          2484,
          3005,
          2095,
          3274,
          3097,
          344,
          1638,
          3384,
          259,
          321
        ],
        "name": "Privatizable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3123,
              "nodeType": "Block",
              "src": "466:62:13",
              "statements": [
                {
                  "expression": {
                    "id": 3121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3113,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3379,
                              "src": "476:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3334_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 3115,
                            "indexExpression": {
                              "id": 3114,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "484:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "476:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3334_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 3116,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3319,
                          "src": "476:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3297_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 3118,
                        "indexExpression": {
                          "id": 3117,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "496:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "476:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3297_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 3119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3296,
                      "src": "476:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "476:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3122,
                  "nodeType": "ExpressionStatement",
                  "src": "476:45:13"
                }
              ]
            },
            "documentation": {
              "id": 3103,
              "nodeType": "StructuredDocumentation",
              "src": "238:145:13",
              "text": " @dev Function to approve holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "5dd2b9a6",
            "id": 3124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3110,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3105,
                    "src": "462:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3111,
                "modifierName": {
                  "id": 3109,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2350,
                  "src": "448:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "448:17:13"
              }
            ],
            "name": "approveHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3105,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3124,
                  "src": "411:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3107,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3124,
                  "src": "423:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:28:13"
            },
            "returnParameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:13"
            },
            "scope": 3183,
            "src": "388:140:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3145,
              "nodeType": "Block",
              "src": "761:63:13",
              "statements": [
                {
                  "expression": {
                    "id": 3143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3135,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3379,
                              "src": "771:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3334_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 3137,
                            "indexExpression": {
                              "id": 3136,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3127,
                              "src": "779:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "771:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3334_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 3138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3319,
                          "src": "771:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3297_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 3140,
                        "indexExpression": {
                          "id": 3139,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3129,
                          "src": "791:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "771:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3297_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 3141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3296,
                      "src": "771:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "771:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3144,
                  "nodeType": "ExpressionStatement",
                  "src": "771:46:13"
                }
              ]
            },
            "documentation": {
              "id": 3125,
              "nodeType": "StructuredDocumentation",
              "src": "535:144:13",
              "text": " @dev Function to revoke holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "759c5214",
            "id": 3146,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3132,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3127,
                    "src": "757:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3133,
                "modifierName": {
                  "id": 3131,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2350,
                  "src": "743:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "743:17:13"
              }
            ],
            "name": "revokeHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3127,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3146,
                  "src": "706:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3129,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3146,
                  "src": "718:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:28:13"
            },
            "returnParameters": {
              "id": 3134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:13"
            },
            "scope": 3183,
            "src": "684:140:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1202
            ],
            "body": {
              "id": 3181,
              "nodeType": "Block",
              "src": "1063:168:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1081:22:13",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3157,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3379,
                                "src": "1082:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3334_storage_$",
                                  "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                                }
                              },
                              "id": 3159,
                              "indexExpression": {
                                "id": 3158,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3150,
                                "src": "1090:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1082:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$3334_storage",
                                "typeString": "struct StashBloxData.Token storage ref"
                              }
                            },
                            "id": 3160,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isPrivate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3313,
                            "src": "1082:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3162,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3379,
                                  "src": "1107:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3334_storage_$",
                                    "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                                  }
                                },
                                "id": 3164,
                                "indexExpression": {
                                  "id": 3163,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3150,
                                  "src": "1115:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1107:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$3334_storage",
                                  "typeString": "struct StashBloxData.Token storage ref"
                                }
                              },
                              "id": 3165,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3319,
                              "src": "1107:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3297_storage_$",
                                "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                              }
                            },
                            "id": 3167,
                            "indexExpression": {
                              "id": 3166,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3148,
                              "src": "1127:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1107:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$3297_storage",
                              "typeString": "struct StashBloxData.Holder storage ref"
                            }
                          },
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3296,
                          "src": "1107:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1081:67:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420617070726f766564",
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1150:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        },
                        "value": "Address not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        }
                      ],
                      "id": 3156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1073:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:100:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3172,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:100:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3176,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3148,
                        "src": "1203:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3177,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3150,
                        "src": "1214:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3178,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3152,
                        "src": "1218:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3173,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1183:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Privatizable_$3183",
                          "typeString": "contract super Privatizable"
                        }
                      },
                      "id": 3175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1202,
                      "src": "1183:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3180,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:41:13"
                }
              ]
            },
            "id": 3182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addToBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1054:8:13"
            },
            "parameters": {
              "id": 3153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3148,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3182,
                  "src": "999:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3150,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3182,
                  "src": "1018:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3152,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3182,
                  "src": "1030:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:46:13"
            },
            "returnParameters": {
              "id": 3155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:13"
            },
            "scope": 3183,
            "src": "976:255:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3184,
        "src": "99:1135:13"
      }
    ],
    "src": "45:1190:13"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
    "exportedSymbols": {
      "Privatizable": [
        3183
      ]
    },
    "id": 3184,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3099,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:13"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
        "file": "./Maintenable.sol",
        "id": 3100,
        "nodeType": "ImportDirective",
        "scope": 3184,
        "sourceUnit": 2485,
        "src": "70:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3101,
              "name": "Maintenable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2484,
              "src": "124:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Maintenable_$2484",
                "typeString": "contract Maintenable"
              }
            },
            "id": 3102,
            "nodeType": "InheritanceSpecifier",
            "src": "124:11:13"
          }
        ],
        "contractDependencies": [
          259,
          321,
          344,
          1638,
          2095,
          2484,
          3005,
          3097,
          3274,
          3384
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3183,
        "linearizedBaseContracts": [
          3183,
          2484,
          3005,
          2095,
          3274,
          3097,
          344,
          1638,
          3384,
          259,
          321
        ],
        "name": "Privatizable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3123,
              "nodeType": "Block",
              "src": "466:62:13",
              "statements": [
                {
                  "expression": {
                    "id": 3121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3113,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3379,
                              "src": "476:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3334_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 3115,
                            "indexExpression": {
                              "id": 3114,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "484:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "476:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3334_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 3116,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3319,
                          "src": "476:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3297_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 3118,
                        "indexExpression": {
                          "id": 3117,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "496:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "476:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3297_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 3119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3296,
                      "src": "476:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "476:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3122,
                  "nodeType": "ExpressionStatement",
                  "src": "476:45:13"
                }
              ]
            },
            "documentation": {
              "id": 3103,
              "nodeType": "StructuredDocumentation",
              "src": "238:145:13",
              "text": " @dev Function to approve holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "5dd2b9a6",
            "id": 3124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3110,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3105,
                    "src": "462:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3111,
                "modifierName": {
                  "id": 3109,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2350,
                  "src": "448:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "448:17:13"
              }
            ],
            "name": "approveHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3105,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3124,
                  "src": "411:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3107,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3124,
                  "src": "423:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:28:13"
            },
            "returnParameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:13"
            },
            "scope": 3183,
            "src": "388:140:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3145,
              "nodeType": "Block",
              "src": "761:63:13",
              "statements": [
                {
                  "expression": {
                    "id": 3143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3135,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3379,
                              "src": "771:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3334_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 3137,
                            "indexExpression": {
                              "id": 3136,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3127,
                              "src": "779:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "771:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3334_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 3138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3319,
                          "src": "771:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3297_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 3140,
                        "indexExpression": {
                          "id": 3139,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3129,
                          "src": "791:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "771:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3297_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 3141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3296,
                      "src": "771:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "771:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3144,
                  "nodeType": "ExpressionStatement",
                  "src": "771:46:13"
                }
              ]
            },
            "documentation": {
              "id": 3125,
              "nodeType": "StructuredDocumentation",
              "src": "535:144:13",
              "text": " @dev Function to revoke holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "759c5214",
            "id": 3146,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3132,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3127,
                    "src": "757:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3133,
                "modifierName": {
                  "id": 3131,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2350,
                  "src": "743:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "743:17:13"
              }
            ],
            "name": "revokeHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3127,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3146,
                  "src": "706:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3129,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3146,
                  "src": "718:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:28:13"
            },
            "returnParameters": {
              "id": 3134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:13"
            },
            "scope": 3183,
            "src": "684:140:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1202
            ],
            "body": {
              "id": 3181,
              "nodeType": "Block",
              "src": "1063:168:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1081:22:13",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3157,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3379,
                                "src": "1082:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3334_storage_$",
                                  "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                                }
                              },
                              "id": 3159,
                              "indexExpression": {
                                "id": 3158,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3150,
                                "src": "1090:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1082:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$3334_storage",
                                "typeString": "struct StashBloxData.Token storage ref"
                              }
                            },
                            "id": 3160,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isPrivate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3313,
                            "src": "1082:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3162,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3379,
                                  "src": "1107:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3334_storage_$",
                                    "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                                  }
                                },
                                "id": 3164,
                                "indexExpression": {
                                  "id": 3163,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3150,
                                  "src": "1115:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1107:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$3334_storage",
                                  "typeString": "struct StashBloxData.Token storage ref"
                                }
                              },
                              "id": 3165,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3319,
                              "src": "1107:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3297_storage_$",
                                "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                              }
                            },
                            "id": 3167,
                            "indexExpression": {
                              "id": 3166,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3148,
                              "src": "1127:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1107:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$3297_storage",
                              "typeString": "struct StashBloxData.Holder storage ref"
                            }
                          },
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3296,
                          "src": "1107:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1081:67:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420617070726f766564",
                        "id": 3170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1150:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        },
                        "value": "Address not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        }
                      ],
                      "id": 3156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1073:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:100:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3172,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:100:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3176,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3148,
                        "src": "1203:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3177,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3150,
                        "src": "1214:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3178,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3152,
                        "src": "1218:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3173,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1183:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Privatizable_$3183",
                          "typeString": "contract super Privatizable"
                        }
                      },
                      "id": 3175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1202,
                      "src": "1183:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3180,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:41:13"
                }
              ]
            },
            "id": 3182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addToBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1054:8:13"
            },
            "parameters": {
              "id": 3153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3148,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3182,
                  "src": "999:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3150,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3182,
                  "src": "1018:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3152,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3182,
                  "src": "1030:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:46:13"
            },
            "returnParameters": {
              "id": 3155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:13"
            },
            "scope": 3183,
            "src": "976:255:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3184,
        "src": "99:1135:13"
      }
    ],
    "src": "45:1190:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-20T21:56:14.910Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approveHolder(uint256,address)": {
        "details": "Function to approve holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "revokeHolder(uint256,address)": {
        "details": "Function to revoke holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to update a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be updated",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}