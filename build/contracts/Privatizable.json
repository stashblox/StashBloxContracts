{
  "contractName": "Privatizable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "averageAge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "approveHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "revokeHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"approveHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"averageAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"revokeHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approveHolder(uint256,address)\":{\"details\":\"Function to approve holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"averageAge(address,uint256)\":{\"details\":\"Function to get the average age of the token for the given address.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\"},\"returns\":{\"_0\":\"average age in seconds\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"revokeHolder(uint256,address)\":{\"details\":\"Function to revoke holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"},\"returns\":{\"_0\":\"transfer price\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to update a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be updated\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"uri(uint256)\":{\"params\":{\"id\":\"Token ID\"},\"returns\":{\"_0\":\"URI string\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":\"Privatizable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Metadata.sol\":{\"keccak256\":\"0x121c132f1a15fafd91c187380702cb32d60beab1a4054670efc987e36bc2b70f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://425182c1ecd27456fc2f1c3fd82444b17a13f2e4e503bb3f7b973e83d2ceb1bb\",\"dweb:/ipfs/QmU54fpZCpdGtjUAbQkr4cYikCzKKQqjS3LPNQpYpJXiA8\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0xd73f72cf3f4a2f4cde3e8f3950d60202e1aa89405e5aaedf971ced063261edd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e01873a56115a6f3f1f6ce5dee198bbc2023ed36178ad693099de8b24baf2074\",\"dweb:/ipfs/QmQ4B48S3idc1CQtZyzQV3HH5tYPLk3ncRtS2ovUWxFsqW\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0x8f4ed45a9b318d31a99444403e16f6ba77b422dc731fe6f61be39348f0267c43\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://00ebdd91b6f58a84d108bd518d0397c3077c3190ba69898b936191c1ced70cec\",\"dweb:/ipfs/QmUBzZRUZMsjTexHnLQcc95icDgfCu1gnqdG2nWtVHcJ1Z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol\":{\"keccak256\":\"0x49506ef2d8628e92f9c762088cbe5f8ce9f35bf20041eab9f4495399660858a5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://dc047263c6af45dd2b655b1a3bc9910fb6a752152625d8c082eda697f935448b\",\"dweb:/ipfs/QmYuntEdGTX2Gj5jFcEWPs6qgxSuDP1VYsT83y9C6bwE8m\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/GSNCapable.sol\":{\"keccak256\":\"0x9d2b49ab0fcef40fc062d2672f2f313b16c4d18474c40845c96bb609c23887db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e32a33579b880e60491a4d98d560912652ddd1c1bb871e6d5e501f7db8f575d0\",\"dweb:/ipfs/QmSGRU7bioBjq6RVnpvduuzYFsF9rrjhXUVEEQebZMkTcD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x995c62950584716d782295bdc47ec89a822d1e856955e626461e55f7a78058ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7bdbc7822173239170c192563023beb95d31aeb0102c0f66cc12cedb506e6f89\",\"dweb:/ipfs/Qmb7WJEDHnXxRqDQumCGcDkAur1h1uPEomcWrqC2TRkRDF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0xd5019a259ee94a211172c19d30424b28a912d02507ab220a096046ac4fdd2068\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://daa7dc075a17ef143feca5828e939af66e383b404cce31fb47fafde265f03305\",\"dweb:/ipfs/QmaGPAikYBr8GmJUbzKTzRRtWLfqXwvAHwkZYcogZA4SdD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/MultiToken.sol\":{\"keccak256\":\"0x5922c39f3d83a885d67924ba9c2416cd6429c7f775491586c4ab77f9444397a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f19db9460901c3ec860b56ff7f6b85c4018527e44200692b7fba0e92f8f5c1fa\",\"dweb:/ipfs/QmNW8wyDYtKX5rp5uF15JZD1swSDR5WGjEBif49Ax3mgBM\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0x62250370e6f9abd908205ec912cf68a142c6d26cbb30451ad57a372bf73fd920\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71b29e832882282fca8dd49265c2d2fb6beecfe8bbf908b48c279506d8b2e572\",\"dweb:/ipfs/QmRpobgioqEYq1Utzoy9kno77v59gGhR5FpovkXmQgxsCh\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":{\"keccak256\":\"0xd8b068c736d1b5ef364d6f73d6fef3788034d3250fb3cd9e8d44d099aaca7b52\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fae9426d967287250027a3fb45c6499614b3365ee98debed327affa09d254d08\",\"dweb:/ipfs/Qmf8ap2iGa8UK7wSzMTxMM2tp4MaTpm5WXZCwS41Uj9ZCg\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0x6e349cd9263193acda067d4b2fe7cebd1a0d169c7b4ab1fb38a664ecdb60065f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5eed5b309c557a2a496a87659ccbae4561ee0121326b30df10ea881fd71872bc\",\"dweb:/ipfs/QmeJRw3fSUAYb9roQpSh7KzpRwTpPcdW8bobg5qpFofFjF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x700249db0ed6aa2be4fc7675c9cdb5cdcc4e49abec52eefa58c2b02092784188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8babf975072c842269b5cb10aedfed77307629626cc6ab6173e68462eaebb\",\"dweb:/ipfs/QmVSAHYR99a4Q6jrrSqvRxMEnD2dhNAUPLyGA9KGJGTLDL\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "1942:67:9:-:0;99:1135:16;1942:67:9;;99:1135:16;1942:67:9;;;;;;;;;;;;;;:::i;:::-;;99:1135:16;;;;;;;;;-1:-1:-1;637:32:15;656:12;:10;:12::i;:::-;637:18;:32::i;:::-;99:1135:16;;845:556:10;907:19;961:2;942:8;:21;;;;:55;;-1:-1:-1;967:30:10;986:10;967:18;:30::i;:::-;938:457;;;-1:-1:-1;;;1303:14:10;1299:22;1286:36;1283:2;1279:44;1254:83;;;-1:-1:-1;1374:10:10;938:457;845:556;:::o;1679:239:15:-;-1:-1:-1;;;;;1752:22:15;;1744:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1853:13;;1832:45;;-1:-1:-1;;;;;1832:45:15;;;;1853:13;;1832:45;;1853:13;;1832:45;1887:13;:24;;-1:-1:-1;;;;;;1887:24:15;-1:-1:-1;;;;;1887:24:15;;;;;;;;;;1679:239::o;458:135:10:-;534:4;570:16;-1:-1:-1;;;;;570:16:10;;;557:29;;;;458:135::o;99:1135:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;99:1135:16;;;-1:-1:-1;99:1135:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "99:1135:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:234:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1687:234:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1092:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1092:255:14;-1:-1:-1;;;;;;1092:255:14;;:::i;:::-;;;;;;;;;;;;;;;;;;6733:141;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6733:141:14;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5881:778;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;-1:-1:-1;5881:778:14;;-1:-1:-1;5881:778:14;-1:-1:-1;5881:778:14;:::i;:::-;;2131:22:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2131:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2159:39:9;-1:-1:-1;;;;;2159:39:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2251:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:47:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2251:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;465:151:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:151:17;;-1:-1:-1;465:151:17;;-1:-1:-1;;;;465:151:17:i;1942:67:9:-;;;;;;;;;;;;;:::i;2253:823:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;2253:823:12;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;-1:-1:-1;;;;;2253:823:12;;:::i;2245:631:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2245:631:14;;;;;;;;-1:-1:-1;2245:631:14;;-1:-1:-1;;;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2245:631:14;;-1:-1:-1;2245:631:14;;-1:-1:-1;;;;;2245:631:14:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:135:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;458:135:10;-1:-1:-1;;;;;458:135:10;;:::i;949:161:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;949:161:8;;;;;;;;:::i;1414:132:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1414:132:12;;;;;;-1:-1:-1;;;;;1414:132:12;;:::i;388:140:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:140:16;;;;;;-1:-1:-1;;;;;388:140:16;;:::i;684:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;684:140:16;;;;;;-1:-1:-1;;;;;684:140:16;;:::i;631:119:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;631:119:13;-1:-1:-1;;;;;631:119:13;;:::i;420:31:10:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;420:31:10;;;;;;;;;;;;;;887:117:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;887:117:13;-1:-1:-1;;;;;887:117:13;;:::i;733:144:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;733:144:12;;;;;;-1:-1:-1;;;;;733:144:12;;:::i;1125:93:15:-;;;;;;;;;;;;;:::i;3354:308:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3354:308:14;;;;;;;;;;:::i;1150:116:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1150:116:13;-1:-1:-1;;;;;1150:116:13;;:::i;2105:1040::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;2105:1040:13;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;:::i;552:159:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;552:159:8;;;;;;;;;;;;;:::i;1046:142:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1046:142:12;;;;;;-1:-1:-1;;;;;1046:142:12;;:::i;3943:157:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3943:157:14;;;;;;;;;;:::i;2204:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2204:41:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2204:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;4654:638:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4654:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4654:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4654:638:14;;;;;;;;;;-1:-1:-1;4654:638:14;;-1:-1:-1;4654:638:14;-1:-1:-1;4654:638:14;:::i;1367:116:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1367:116:15;-1:-1:-1;;;;;1367:116:15;;:::i;3372:647:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13:i;1687:234:14:-;1765:7;-1:-1:-1;;;;;1792:21:14;;1784:77;;;;-1:-1:-1;;;1784:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1878:11:14;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1878:28:14;;;;:19;;:28;;;;;:36;1687:234;;;;;:::o;1092:255::-;1172:4;-1:-1:-1;;;;;;1190:42:14;;-1:-1:-1;;;1190:42:14;;:99;;-1:-1:-1;;;;;;;1246:43:14;;-1:-1:-1;;;1246:43:14;1190:99;1186:135;;;-1:-1:-1;1308:4:14;1301:11;;1186:135;-1:-1:-1;1335:5:14;1092:255;;;;:::o;6733:141::-;6833:15;6822:45;;;;;;6833:7;:15;6822:45;;;;;-1:-1:-1;;6822:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;6790:13;;6822:45;;;;6833:15;;6822:45;;6833:15;6822:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6850:16;6863:2;6850:12;:16::i;:::-;6822:10;:45::i;5881:778::-;6112:27;;;6104:86;;;;-1:-1:-1;;;6104:86:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6208:16:14;;6200:69;;;;-1:-1:-1;;;6200:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6308:12;:10;:12::i;:::-;-1:-1:-1;;;;;6300:20:14;:4;-1:-1:-1;;;;;6300:20:14;;:68;;;;6324:36;6341:4;6347:12;:10;:12::i;:::-;6324:16;:36::i;:::-;:44;;6364:4;6324:44;6300:68;6279:170;;;;-1:-1:-1;;;6279:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6460:37;6475:4;6481:2;6485:3;;6460:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:37:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6490:6:14;;-1:-1:-1;6490:6:14;;;;6460:37;;;6490:6;;6460:37;6490:6;6460:37;;;;;;;;;-1:-1:-1;6460:14:14;;-1:-1:-1;;;6460:37:14:i;:::-;6547:2;-1:-1:-1;;;;;6513:50:14;6541:4;-1:-1:-1;;;;;6513:50:14;6527:12;:10;:12::i;:::-;-1:-1:-1;;;;;6513:50:14;;6551:3;;6556:6;;6513:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6513:50:14;;;;;;;;;;;;;;;;;-1:-1:-1;6513:50:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6513:50:14;;;;;;;;-1:-1:-1;6513:50:14;;-1:-1:-1;;;;;;;6513:50:14;6574:78;6610:12;:10;:12::i;:::-;6624:4;6630:2;6634:3;;6574:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6574:78:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6639:6:14;;-1:-1:-1;6639:6:14;;;;6574:78;;;6639:6;;6574:78;6639:6;6574:78;;;;;;;;;-1:-1:-1;;6574:78:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6647:4:14;;-1:-1:-1;6647:4:14;;;;6574:78;;6647:4;;;;6574:78;;;;;;;;;-1:-1:-1;6574:35:14;;-1:-1:-1;;;6574:78:14:i;:::-;5881:778;;;;;;;;:::o;2131:22:9:-;;;;;;;;;;;;;;;;;-1:-1:-1;;2131:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2131:22:9;;;;;;;-1:-1:-1;;;;;;;2131:22:9;;:::o;2159:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2251:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2251:47:9;;;;-1:-1:-1;;;2251:47:9;;;;;-1:-1:-1;;;2251:47:9;;;;;-1:-1:-1;;;2251:47:9;;;;;-1:-1:-1;;;2251:47:9;;;;;-1:-1:-1;;;2251:47:9;;;;;:::o;465:151:17:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;562:47:17::1;:30:::0;595:14;562:47:::1;;:::i;:::-;;465:151:::0;:::o;1942:67:9:-;;;;;;;;;;;;;;;-1:-1:-1;;1942:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2253:823:12:-;2688:2;427:30;440:2;444:12;:10;:12::i;:::-;427;:30::i;:::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;;;;2731:1:::1;2710:11:::0;;;:7:::1;:11;::::0;;;;:18;2702:48:::1;;;::::0;;-1:-1:-1;;;2702:48:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2702:48:12;;;;;;;;;;;;;::::1;;2761:262;2771:2;2793:12;2825:15;2860:14;2894:24;2938:21;2979:9;3008:14;2761:9;:262::i;:::-;3039:30;::::0;;;;;;;3052:2;;3039:30:::1;::::0;;;;;::::1;::::0;;::::1;2253:823:::0;;;;;;;;;:::o;2245:631:14:-;2394:16;2453:3;:10;2434:8;:15;:29;2426:90;;;;-1:-1:-1;;;2426:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:30;2574:8;:15;2560:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2560:30:14;;2527:63;;2606:9;2601:238;2625:8;:15;2621:1;:19;2601:238;;;2692:1;-1:-1:-1;;;;;2669:25:14;:8;2678:1;2669:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2669:25:14;;;2661:90;;;;-1:-1:-1;;;2661:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:7;:15;2792:3;2796:1;2792:6;;;;;;;;;;;;;;2784:15;;;;;;;;;;;:23;;:36;2808:8;2817:1;2808:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2784:36:14;-1:-1:-1;;;;;2784:36:14;;;;;;;;;;;;:44;;;2765:13;2779:1;2765:16;;;;;;;;;;;;;;;;;:63;2642:3;;2601:238;;;-1:-1:-1;2856:13:14;2245:631;-1:-1:-1;;;2245:631:14:o;458:135:10:-;534:4;570:16;-1:-1:-1;;;;;570:16:10;;;557:29;;;;458:135::o;949:161:8:-;1019:7;1065:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1065:28:8;;;;:19;;:28;;;;;:37;;;1045:58;;:15;;:19;:58::i;:::-;1038:65;949:161;-1:-1:-1;;;949:161:8:o;1414:132:12:-;1489:4;1512:27;1525:2;1529:9;1512:12;:27::i;388:140:16:-;462:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;;;;-1:-1:-1;476:11:16::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;476:27:16;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:45:::0;;-1:-1:-1;;476:45:16::1;::::0;::::1;::::0;;388:140::o;684:::-;757:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;;;;-1:-1:-1;812:5:16::1;771:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;771:27:16;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:46:::0;;-1:-1:-1;;771:46:16::1;::::0;;684:140::o;631:119:13:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;707:17:13::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;707:36:13::1;739:4;707:36;::::0;;631:119::o;420:31:10:-;;;-1:-1:-1;;;;;420:31:10;;:::o;887:117:13:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:17:13::1;992:5;960:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;960:37:13::1;::::0;;887:117::o;733:144:12:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;821:11:12::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;821:30:12;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;821:49:12::1;866:4;821:49;::::0;;733:144::o;1125:93:15:-;1198:13;;-1:-1:-1;;;;;1198:13:15;1125:93;;:::o;3354:308:14:-;3466:8;-1:-1:-1;;;;;3450:24:14;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3450:24:14;;;3442:81;;;;-1:-1:-1;;;3442:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3584:8;3533:6;:20;3540:12;:10;:12::i;:::-;-1:-1:-1;;;;;3533:20:14;;;;;;;;;;;;;;;;;-1:-1:-1;3533:20:14;;;:48;;;;;;:38;;;;:48;;;;;:59;;-1:-1:-1;;3533:59:14;;;;;;;;;;;3622:12;:10;:12::i;:::-;-1:-1:-1;;;;;3607:48:14;;3646:8;3607:48;;;;;;;;;;;;;;;;;;;;3354:308;;:::o;1150:116:13:-;1213:4;1236:23;1249:9;1236:12;:23::i;2105:1040::-;331:26;344:12;:10;:12::i;:::-;331;:26::i;:::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;;;;2682:378:::1;2695:9;2727:2;2752:6;2781:8;2812:12;2847:15;2885:14;2922:24;2969:21;3013:9;3045:14;2682:12;:378::i;:::-;-1:-1:-1::0;;;;;3075:63:13;::::1;3112:1;3090:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;3075:63:13::1;;3127:2;3131:6;3075:63;;;;;;;;;;;;;;;;;;;;;;;;2105:1040:::0;;;;;;;;;;;:::o;552:159:8:-;642:7;668:36;685:7;694:2;698:5;668:16;:36::i;:::-;661:43;552:159;-1:-1:-1;;;;552:159:8:o;1046:142:12:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;1176:5:12::1;1131:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1131:30:12;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1131:50:12::1;::::0;;1046:142::o;3943:157:14:-;4034:4;4057:36;4075:7;4084:8;4057:17;:36::i;2204:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2204:41:9;;;;-1:-1:-1;;;2204:41:9;;;;;-1:-1:-1;;;2204:41:9;;;;:::o;4654:638:14:-;-1:-1:-1;;;;;4856:16:14;;4848:69;;;;-1:-1:-1;;;4848:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4956:12;:10;:12::i;:::-;-1:-1:-1;;;;;4948:20:14;:4;-1:-1:-1;;;;;4948:20:14;;:68;;;;4972:36;4989:4;4995:12;:10;:12::i;4972:36::-;:44;;5012:4;4972:44;4948:68;4927:170;;;;-1:-1:-1;;;4927:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5108:30;5118:4;5124:2;5128;5132:5;5108:9;:30::i;:::-;5189:2;-1:-1:-1;;;;;5154:49:14;5183:4;-1:-1:-1;;;;;5154:49:14;5169:12;:10;:12::i;:::-;-1:-1:-1;;;;;5154:49:14;;5193:2;5197:5;5154:49;;;;;;;;;;;;;;;;;;;;;;;;5214:71;5245:12;:10;:12::i;:::-;5259:4;5265:2;5269;5273:5;5280:4;;5214:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5214:30:14;;-1:-1:-1;;;5214:71:14:i;:::-;4654:638;;;;;;:::o;1367:116:15:-;889:10;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;1448:28:::1;1467:8;1448:18;:28::i;:::-;1367:116:::0;:::o;3372:647:13:-;331:26;344:12;:10;:12::i;331:26::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;;;;3573:1:::1;3552:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;3608:14;:21;3594:3;:10;:35;3552:77;3544:107;;;::::0;;-1:-1:-1;;;3544:107:13;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3544:107:13;;;;;;;;;;;;;::::1;;3667:9;3662:351;3686:3;:10;3682:1;:14;3662:351;;;3717:42;3729:2;3733:3;3737:1;3733:6;;;;;;;;;;;;;;3741:14;3756:1;3741:17;;;;;;;;;;;;;;3717:11;:42::i;:::-;3884:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3884:25:13::1;::::0;3794:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;3779:223:13::1;;3943:3;3947:1;3943:6;;;;;;;;;;;;;;3983:7;:11;3991:2;3983:11;;;;;;;;;;;:18;;;3779:223;;;;;;;;;;;;;;;;;;;;;;;;3698:3;;3662:351;;;;3372:647:::0;;;:::o;933:419:21:-;986:13;1011:10;1044:1;1055:68;1062:6;;1055:68;;1084:7;;;;;;1110:2;1105:7;;1055:68;;;1132:16;1161:5;1151:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16:21;;1132:35;;1182:6;1177:141;1194:5;1192:1;:7;1177:141;;;1228:2;1224:1;:6;1220:10;;1265:21;1283:1;1265:11;:21::i;:::-;1244:3;1260:1;1256;1248:5;:9;:13;1244:18;;;;;;;;;;;:42;-1:-1:-1;;;;;1244:42:21;;;;;;;;-1:-1:-1;1305:2:21;1300:7;;;-1:-1:-1;1201:3:21;;1177:141;;;-1:-1:-1;1341:3:21;933:419;-1:-1:-1;;;;933:419:21:o;86:515::-;305:10;;292;;163:13;;213:1;;250;;163:13;;292:23;281:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:35:21;-1:-1:-1;262:54:21;-1:-1:-1;262:54:21;365:6;;405:76;421:3;:10;417:1;:14;405:76;;;464:3;468:1;464:6;;;;;;;;;;;;;;;;452:4;457:3;;;;;;452:9;;;;;;;;;;;:18;-1:-1:-1;;;;;452:18:21;;;;;;;;-1:-1:-1;433:3:21;;405:76;;;-1:-1:-1;499:1:21;490:76;506:3;:10;502:1;:14;490:76;;;549:3;553:1;549:6;;;;;;;;;;;;;;;;537:4;542:3;;;;;;537:9;;;;;;;;;;;:18;-1:-1:-1;;;;;537:18:21;;;;;;;;-1:-1:-1;518:3:21;;490:76;;;-1:-1:-1;589:4:21;;86:515;-1:-1:-1;;;;;;;86:515:21:o;845:556:10:-;907:19;961:2;942:8;:21;;;;:55;;;967:30;986:10;967:18;:30::i;:::-;938:457;;;-1:-1:-1;;;1303:14:10;1299:22;1286:36;1283:2;1279:44;1254:83;;;-1:-1:-1;1374:10:10;1367:17;;4766:404:8;4882:19;4916:1;4904:9;:13;:51;;-1:-1:-1;;;;;4932:12:8;;;;;;:6;:12;;;;;:23;;;4904:51;;;4920:9;4904:51;4882:73;;4970:9;4965:157;4989:3;:10;4985:1;:14;4965:157;;;5034:77;5050:40;5062:4;5068:2;5072:3;5076:1;5072:6;;;;;;;;;;;;;;5080;5087:1;5080:9;;;;;;;;;;;;;;5050:11;:40::i;:::-;5034:77;;;;;;;;;;;;-1:-1:-1;;;5034:77:8;;;;:11;;:77;:15;:77::i;:::-;5020:91;-1:-1:-1;5001:3:8;;4965:157;;;;5131:32;5145:4;5151:11;5131:13;:32::i;:::-;4766:404;;;;;:::o;7497:558:14:-;7740:15;:2;-1:-1:-1;;;;;7740:13:14;;:15::i;:::-;7737:312;;;7898:52;;;-1:-1:-1;;;;;7796:154:14;;7813:2;-1:-1:-1;;;;;7796:43:14;;7840:8;7850:4;7856:3;7861:6;7869:4;7796:78;;;;;;;;;;;;;-1:-1:-1;;;;;7796:78:14;;;;;;-1:-1:-1;;;;;7796:78:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7796:78:14;-1:-1:-1;;;;;;7796:154:14;;7771:267;;;;-1:-1:-1;;;7771:267:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2001:102:15;2083:13;;2044:4;;-1:-1:-1;;;;;2083:13:15;2067:12;:10;:12::i;:::-;-1:-1:-1;;;;;2067:29:15;;2060:36;;2001:102;:::o;3177:162:12:-;3253:4;3276:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3276:30:12;;;;:19;;:30;;;;;:42;;;;;;:56;;;3322:10;:8;:10::i;4263:1359:13:-;4682:23;4724:9;4719:120;4743:24;:31;4739:1;:35;4719:120;;;4812:24;4837:1;4812:27;;;;;;;;;;;;;;4793:46;;;;4776:3;;;;;4719:120;;;;4882:1;4858:14;:21;:25;:75;;;;-1:-1:-1;4887:46:13;4858:75;:119;;;;;4953:15;4972:5;4953:24;4858:119;:168;;;;;5021:5;4997:21;:29;4858:168;4850:214;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;;;;5075:11;;;;:7;:11;;;;;;;;:24;;;:39;;;5161:18;;5124:34;;;;:55;;;;5224:18;;;;-1:-1:-1;5189:32:13;;:53;5252:74;;;;;;;5289:15;5252:74;;5306:18;;;;5252:74;;;;:30;;;;:74;;5240:1;5252:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5336:11:13;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;5389:11:13;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;5462:11:13;;;;:7;:11;;;;;;:33;;;:57;;;;5529:21;;;;:33;;-1:-1:-1;;;;5529:33:13;-1:-1:-1;;;5529:33:13;;;;;;;;;;;-1:-1:-1;;;;;;5572:43:13;-1:-1:-1;;;;;5572:43:13;;;;;;;;;;-1:-1:-1;;;;4263:1359:13:o;1307:134:20:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;4120:137:13:-;-1:-1:-1;;;;;4207:17:13;;4184:4;4207:17;;;:6;:17;;;;;:29;;;;:43;;;4240:10;:8;:10::i;5629:1167::-;6211:11;;;;:7;:11;;;;;:18;:23;:37;;;;;6247:1;6238:6;:10;6211:37;6203:67;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;;;;6281:11;;;;:7;:11;;;;;:27;;;6318:20;;;;:31;;;:20;6359:19;;;;;6379:12;:10;:12::i;:::-;-1:-1:-1;;;;;6359:33:13;-1:-1:-1;;;;;6359:33:13;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6465:4;6421:7;:11;6429:2;6421:11;;;;;;;;;;;:19;;:30;6441:9;-1:-1:-1;;;;;6421:30:13;-1:-1:-1;;;;;6421:30:13;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;6480:262;6490:2;6512:12;6544:15;6579:14;6613:24;6657:21;6698:9;6727:14;6480:9;:262::i;:::-;6753:36;6767:9;6778:2;6782:6;6753:13;:36::i;:::-;5629:1167;;;;;;;;;;;:::o;2343:1317:8:-;2436:7;2547:11;;;:7;:11;;;;;:30;;:37;2436:7;;2507:15;;-1:-1:-1;;2547:41:8;2533:835;2618:19;2640:11;;;:7;:11;;;;;:30;;:33;;2671:1;;2640:33;;;;;;;;;;;;;;;;;;:36;;2690:12;2705:11;;;:7;:11;;;;;:30;;:33;;2640:36;;-1:-1:-1;2690:12:8;;2736:1;;2705:33;;;;;;;;;;;;;;;;2739:1;2705:36;;;;;;;;;2755:19;2793:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2793:28:8;;;;:19;;:28;;;;;:37;;;2705:36;;-1:-1:-1;2755:19:8;2793:52;-1:-1:-1;2789:569:8;;2895:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2895:28:8;;;;:19;;:28;;;;;:37;;;2879:66;;2939:5;;2880:53;;:10;;:14;:53::i;:::-;2879:59;;:66::i;:::-;2865:80;-1:-1:-1;2967:16:8;2963:37;;-1:-1:-1;2999:1:8;2963:37;3031:34;3059:5;3032:21;:11;3048:4;3032:15;:21::i;:::-;3031:27;;:34::i;:::-;3018:47;;;;3083:5;;;;;2789:569;3141:40;3175:5;3142:27;:10;3157:11;3142:14;:27::i;3141:40::-;3127:54;-1:-1:-1;3203:16:8;3199:37;;-1:-1:-1;3235:1:8;3199:37;3267:11;;-1:-1:-1;3267:11:8;;3309:34;3337:5;3310:21;:11;3326:4;3310:15;:21::i;3309:34::-;3296:47;;;;-1:-1:-1;;;;;2598:3:8;2533:835;;;-1:-1:-1;3425:11:8;;;;:7;:11;;;;;:20;;;3407:39;;:9;;3421:2;:24;3407:13;:39::i;:::-;3496:17;3527:11;;;:7;:11;;;;;:32;;;3395:51;;-1:-1:-1;3496:17:8;3516:56;;3566:5;;3517:43;;:5;;:9;:43::i;3516:56::-;3603:11;;;;:7;:11;;;;;:34;;;3496:76;;-1:-1:-1;3589:64:8;;3603:49;;3496:76;3603:38;:49::i;:::-;3589:9;;:13;:64::i;:::-;3582:71;2343:1317;-1:-1:-1;;;;;;;2343:1317:8:o;1239:203:17:-;1324:4;1347:41;1370:7;1379:8;1347:22;:41::i;:::-;:88;;;-1:-1:-1;;;;;;;1392:15:17;;;;;;;:6;:15;;;;;;;;:43;;;;;;:33;;;;:43;;;;;;;;1239:203::o;4402:306:8:-;4493:19;4527:1;4515:9;:13;:51;;-1:-1:-1;;;;;4543:12:8;;;;;;:6;:12;;;;;:23;;;4515:51;;;4531:9;4515:51;4493:73;;4590:69;4606:32;4618:4;4624:2;4628;4632:5;4606:11;:32::i;:::-;4590:69;;;;;;;;;;;;-1:-1:-1;;;4590:69:8;;;;:11;;:69;:15;:69::i;:::-;4576:83;;4669:32;4683:4;4689:11;4669:13;:32::i;6975:516:14:-;7193:15;:2;-1:-1:-1;;;;;7193:13:14;;:15::i;:::-;7190:295;;;7344:47;;;-1:-1:-1;;;;;7249:142:14;;7266:2;-1:-1:-1;;;;;7249:38:14;;7288:8;7298:4;7304:2;7308:5;7315:4;7249:71;;;;;;;;;;;;;-1:-1:-1;;;;;7249:71:14;;;;;;-1:-1:-1;;;;;7249:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7249:71:14;-1:-1:-1;;;;;;7249:142:14;;7224:250;;;;-1:-1:-1;;;7224:250:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:239:15;-1:-1:-1;;;;;1752:22:15;;1744:73;;;;-1:-1:-1;;;1744:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1853:13;;1832:45;;-1:-1:-1;;;;;1832:45:15;;;;1853:13;;1832:45;;1853:13;;1832:45;1887:13;:24;;-1:-1:-1;;;;;;1887:24:15;-1:-1:-1;;;;;1887:24:15;;;;;;;;;;1679:239::o;6802:766:13:-;6906:11;;;;:7;:11;;;;;:22;;:25;;6893:668;;6906:11;:25;;;;;;;;;;;;;;;;6984:11;;;:7;:11;;;;;;;:18;;6906:25;7025:20;;;6893:668;;;;;;;7128:34;;;;6893:668;;7187:32;;;;6893:668;;;;7244:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;6906:25:13;;;;6954:7;;6984:18;;7025:20;;7068:12;;6893:668;;;;;;7244:30;6906:25;7244:33;;;;;;;;;;;;;;7278:1;7244:36;;;;;;;;;6893:668;;7326:11;;;;:7;:11;;;;;;;;;:26;;6893:668;;;;;;;;;;;;;;;;;7326:26;;6893:668;;7326:26;6893:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6893:668:13;;;;;;;;;;;;;;;;-1:-1:-1;;;7375:11:13;;;;:7;:11;;;;;;;;;:36;;6893:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;7375:36:13;-1:-1:-1;6893:668:13;;7375:36;6893:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7434:11:13;;;;:7;:11;;;;;:33;;;;7490:21;;;;;7434:33;;-1:-1:-1;7490:21:13;-1:-1:-1;;;7490:21:13;;;;-1:-1:-1;;;;;;7534:26:13;6893:12;:668::i;:::-;6802:766;;;:::o;607:320:21:-;660:4;695:1;690;:6;;;676:187;;-1:-1:-1;724:16:21;:20;;:16;719:26;712:33;;676:187;778:1;766:14;;:2;:14;;:32;;;;;796:2;790:1;784:14;;;;766:32;762:101;;;-1:-1:-1;826:25:21;;;:16;821:31;814:38;;3666:683:8;3826:68;;;;;;;;;;;-1:-1:-1;;;3826:68:8;;;;;;;;3766:12;3826:11;;;:7;:11;;;;;-1:-1:-1;;;;;3826:25:8;;;;:19;;:25;;;;;;:33;:68;;3864:5;;3826:37;:68::i;:::-;3790:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3790:25:8;;;;:19;;:25;;;;;:104;3904:28;3918:2;3798;3926:5;3904:13;:28::i;:::-;3950:33;3967:4;3973:2;3977:5;3950:16;:33::i;:::-;3943:40;;3999:9;3994:327;4018:11;;;;:7;:11;;;;;:26;;:33;4014:37;;3994:327;;;4072:21;4096:11;;;:7;:11;;;;;:26;;:29;;4123:1;;4096:29;;;;;;;;;;;;;;;;;;4174:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;4096:29:8;;;;-1:-1:-1;4174:36:8;4211:1;;4174:39;;;;;;;;;;;;;;;;;-1:-1:-1;4263:47:8;4304:5;4264:34;:4;4174:39;4264:8;:34::i;4263:47::-;-1:-1:-1;;;;;4227:21:8;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;4053:3:8;3994:327;;1877:187:20;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:20;;;1877:187::o;5176:290:8:-;5267:1;5255:9;:13;:32;;;;;5286:1;5272:11;:15;5255:32;5251:209;;;-1:-1:-1;;;;;5327:12:8;;;;;;:6;:12;;;;;:23;;;:40;;5355:11;5327:27;:40::i;:::-;-1:-1:-1;;;;;5301:12:8;;;;;;:6;:12;;;;;:23;;:66;5251:209;;;5386:9;5382:78;;-1:-1:-1;;;;;5414:12:8;;;;;;;;:6;:12;;;;;:23;;:37;5176:290::o;590:797:19:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:19;;;1329:51;-1:-1:-1;;590:797:19:o;976:255:16:-;1082:11;;;;:7;:11;;;;;:21;;;-1:-1:-1;;;1082:21:16;;;;1081:22;;:67;;-1:-1:-1;1107:11:16;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1107:30:16;;;;:19;;:30;;;;;:41;;;;;;;;1081:67;1073:100;;;;;-1:-1:-1;;;1073:100:16;;;;;;;;;;;;-1:-1:-1;;;1073:100:16;;;;;;;;;;;;;;;1183:41;1203:9;1214:2;1218:5;1183:19;:41::i;3218:130:20:-;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;2304:459::-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:20;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:176;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:20;;;;;;;;;;;;;;;;;;;;;;;;;;;717:516:17;807:4;;823:382;847:37;843:1;:41;823:382;;;954:1;909:30;940:1;909:33;;;;;;;;;-1:-1:-1;;;;;909:33:17;:47;905:290;;976:27;1020:30;1051:1;1020:33;;;;;;;;;1084:30;;;-1:-1:-1;;;1084:30:17;;-1:-1:-1;;;;;1084:30:17;;;;;;;;;1020:33;;;;-1:-1:-1;1076:51:17;;;;1020:33;;1084:21;;:30;;;;;;;;;;;;;;1020:33;1084:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1084:30:17;-1:-1:-1;;;;;1076:51:17;;1072:109;;;1158:4;1151:11;;;;;;1072:109;905:290;;886:3;;823:382;;;-1:-1:-1;1221:5:17;;717:516;-1:-1:-1;;;717:516:17:o;1290:1013:8:-;1386:18;1407:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1407:30:8;;;;:19;;:30;;;;;:38;:49;;1450:5;1407:42;:49::i;:::-;1471:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1471:30:8;;;;:19;;:30;;;;;:38;1386:70;;-1:-1:-1;1467:768:8;;1536:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1536:30:8;;;;:19;;:30;;;;;:39;;;;;;;;1531:232;;-1:-1:-1;;;;;1595:17:8;;;;;;:6;:17;;;;;;;;:24;;;;:33;;;;;;;;;;;;;;;;;;1646:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1646:38:8;;;;;1702:30;;;:19;;;;:30;;;;;:39;:46;;-1:-1:-1;;1702:46:8;1646:38;1702:46;;;1531:232;1777:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1777:30:8;;;;:19;;:30;;;;;1819:15;1777:39;;;;:57;1467:768;;;1945:20;1988:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1988:30:8;;;;:19;;:30;;;;;:39;;;1968:60;;:15;;:19;:60::i;:::-;2042:19;2065:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2065:30:8;;;;:19;;:30;;;;;:38;1945:83;;-1:-1:-1;2042:19:8;2064:74;;2127:10;;2065:56;;1945:83;2065:42;:56::i;2064:74::-;2153:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2153:30:8;;;;:19;;:30;;;;;2195:15;:29;;;;2153:39;;;;:71;-1:-1:-1;;1467:768:8;2245:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2245:30:8;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;1290:1013:8:o;3969:338:20:-;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:20:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport './Maintenable.sol';\n\ncontract Privatizable is Maintenable {\n\n\n    /****************************\n    EXTERNAL FUNCTIONS\n    *****************************/\n\n\n    /**\n     * @dev Function to approve holder for a private token.\n     * @param id the token id\n     * @param holder The authorized address\n     */\n    function approveHolder(uint256 id, address holder) external onlyMaintener(id) {\n        _tokens[id].holders[holder].isApproved = true;\n    }\n\n\n    /**\n     * @dev Function to revoke holder for a private token.\n     * @param id the token id\n     * @param holder The authorized address\n     */\n    function revokeHolder(uint256 id, address holder) external onlyMaintener(id) {\n        _tokens[id].holders[holder].isApproved = false;\n    }\n\n\n    /****************************\n    INTERNAL FUNCTIONS\n    *****************************/\n\n\n    // override ChargeableTransfer._addToBalance()\n    function _addToBalance(address recipient, uint256 id, uint256 value) internal override {\n        require(!_tokens[id].isPrivate || _tokens[id].holders[recipient].isApproved, \"Address not approved\");\n        super._addToBalance(recipient, id, value);\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
    "exportedSymbols": {
      "Privatizable": [
        3341
      ]
    },
    "id": 3342,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3257,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:16"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
        "file": "./Maintenable.sol",
        "id": 3258,
        "nodeType": "ImportDirective",
        "scope": 3342,
        "sourceUnit": 2173,
        "src": "70:27:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3259,
              "name": "Maintenable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2172,
              "src": "124:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Maintenable_$2172",
                "typeString": "contract Maintenable"
              }
            },
            "id": 3260,
            "nodeType": "InheritanceSpecifier",
            "src": "124:11:16"
          }
        ],
        "contractDependencies": [
          149,
          161,
          211,
          234,
          263,
          1582,
          1711,
          1783,
          2172,
          2693,
          3157,
          3255,
          3451,
          4106
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3341,
        "linearizedBaseContracts": [
          3341,
          2172,
          2693,
          3157,
          3451,
          3255,
          1582,
          1711,
          1783,
          263,
          234,
          4106,
          161,
          149,
          211
        ],
        "name": "Privatizable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3281,
              "nodeType": "Block",
              "src": "466:62:16",
              "statements": [
                {
                  "expression": {
                    "id": 3279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3271,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1706,
                              "src": "476:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1649_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 3273,
                            "indexExpression": {
                              "id": 3272,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3263,
                              "src": "484:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "476:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1649_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "476:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1612_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 3276,
                        "indexExpression": {
                          "id": 3275,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3265,
                          "src": "496:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "476:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1612_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 3277,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1611,
                      "src": "476:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "476:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3280,
                  "nodeType": "ExpressionStatement",
                  "src": "476:45:16"
                }
              ]
            },
            "documentation": {
              "id": 3261,
              "nodeType": "StructuredDocumentation",
              "src": "238:145:16",
              "text": " @dev Function to approve holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "5dd2b9a6",
            "id": 3282,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3268,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3263,
                    "src": "462:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3269,
                "modifierName": {
                  "id": 3267,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2038,
                  "src": "448:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "448:17:16"
              }
            ],
            "name": "approveHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3263,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "411:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3265,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "423:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:28:16"
            },
            "returnParameters": {
              "id": 3270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:16"
            },
            "scope": 3341,
            "src": "388:140:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3303,
              "nodeType": "Block",
              "src": "761:63:16",
              "statements": [
                {
                  "expression": {
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3293,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1706,
                              "src": "771:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1649_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 3295,
                            "indexExpression": {
                              "id": 3294,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3285,
                              "src": "779:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "771:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1649_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 3296,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "771:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1612_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 3298,
                        "indexExpression": {
                          "id": 3297,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3287,
                          "src": "791:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "771:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1612_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 3299,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1611,
                      "src": "771:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "771:46:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3302,
                  "nodeType": "ExpressionStatement",
                  "src": "771:46:16"
                }
              ]
            },
            "documentation": {
              "id": 3283,
              "nodeType": "StructuredDocumentation",
              "src": "535:144:16",
              "text": " @dev Function to revoke holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "759c5214",
            "id": 3304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3290,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3285,
                    "src": "757:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3291,
                "modifierName": {
                  "id": 3289,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2038,
                  "src": "743:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "743:17:16"
              }
            ],
            "name": "revokeHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3285,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3304,
                  "src": "706:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3287,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3304,
                  "src": "718:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:28:16"
            },
            "returnParameters": {
              "id": 3292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:16"
            },
            "scope": 3341,
            "src": "684:140:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1146
            ],
            "body": {
              "id": 3339,
              "nodeType": "Block",
              "src": "1063:168:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1081:22:16",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3315,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1706,
                                "src": "1082:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1649_storage_$",
                                  "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                                }
                              },
                              "id": 3317,
                              "indexExpression": {
                                "id": 3316,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3308,
                                "src": "1090:2:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1082:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1649_storage",
                                "typeString": "struct Data.Token storage ref"
                              }
                            },
                            "id": 3318,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isPrivate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1628,
                            "src": "1082:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3320,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1706,
                                  "src": "1107:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1649_storage_$",
                                    "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                                  }
                                },
                                "id": 3322,
                                "indexExpression": {
                                  "id": 3321,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3308,
                                  "src": "1115:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1107:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$1649_storage",
                                  "typeString": "struct Data.Token storage ref"
                                }
                              },
                              "id": 3323,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1634,
                              "src": "1107:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1612_storage_$",
                                "typeString": "mapping(address => struct Data.Holder storage ref)"
                              }
                            },
                            "id": 3325,
                            "indexExpression": {
                              "id": 3324,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3306,
                              "src": "1127:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1107:30:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1612_storage",
                              "typeString": "struct Data.Holder storage ref"
                            }
                          },
                          "id": 3326,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1611,
                          "src": "1107:41:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1081:67:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420617070726f766564",
                        "id": 3328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1150:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        },
                        "value": "Address not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        }
                      ],
                      "id": 3314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1073:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3330,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:100:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3334,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3306,
                        "src": "1203:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3335,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3308,
                        "src": "1214:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3336,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3310,
                        "src": "1218:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3331,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1183:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Privatizable_$3341",
                          "typeString": "contract super Privatizable"
                        }
                      },
                      "id": 3333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1146,
                      "src": "1183:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3338,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:41:16"
                }
              ]
            },
            "id": 3340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addToBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3312,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1054:8:16"
            },
            "parameters": {
              "id": 3311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3306,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3340,
                  "src": "999:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3308,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3340,
                  "src": "1018:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3310,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3340,
                  "src": "1030:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:46:16"
            },
            "returnParameters": {
              "id": 3313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:16"
            },
            "scope": 3341,
            "src": "976:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3342,
        "src": "99:1135:16"
      }
    ],
    "src": "45:1190:16"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
    "exportedSymbols": {
      "Privatizable": [
        3341
      ]
    },
    "id": 3342,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3257,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:16"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
        "file": "./Maintenable.sol",
        "id": 3258,
        "nodeType": "ImportDirective",
        "scope": 3342,
        "sourceUnit": 2173,
        "src": "70:27:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3259,
              "name": "Maintenable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2172,
              "src": "124:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Maintenable_$2172",
                "typeString": "contract Maintenable"
              }
            },
            "id": 3260,
            "nodeType": "InheritanceSpecifier",
            "src": "124:11:16"
          }
        ],
        "contractDependencies": [
          149,
          161,
          211,
          234,
          263,
          1582,
          1711,
          1783,
          2172,
          2693,
          3157,
          3255,
          3451,
          4106
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3341,
        "linearizedBaseContracts": [
          3341,
          2172,
          2693,
          3157,
          3451,
          3255,
          1582,
          1711,
          1783,
          263,
          234,
          4106,
          161,
          149,
          211
        ],
        "name": "Privatizable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3281,
              "nodeType": "Block",
              "src": "466:62:16",
              "statements": [
                {
                  "expression": {
                    "id": 3279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3271,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1706,
                              "src": "476:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1649_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 3273,
                            "indexExpression": {
                              "id": 3272,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3263,
                              "src": "484:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "476:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1649_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "476:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1612_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 3276,
                        "indexExpression": {
                          "id": 3275,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3265,
                          "src": "496:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "476:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1612_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 3277,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1611,
                      "src": "476:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "476:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3280,
                  "nodeType": "ExpressionStatement",
                  "src": "476:45:16"
                }
              ]
            },
            "documentation": {
              "id": 3261,
              "nodeType": "StructuredDocumentation",
              "src": "238:145:16",
              "text": " @dev Function to approve holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "5dd2b9a6",
            "id": 3282,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3268,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3263,
                    "src": "462:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3269,
                "modifierName": {
                  "id": 3267,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2038,
                  "src": "448:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "448:17:16"
              }
            ],
            "name": "approveHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3263,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "411:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3265,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "423:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:28:16"
            },
            "returnParameters": {
              "id": 3270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:16"
            },
            "scope": 3341,
            "src": "388:140:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3303,
              "nodeType": "Block",
              "src": "761:63:16",
              "statements": [
                {
                  "expression": {
                    "id": 3301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3293,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1706,
                              "src": "771:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1649_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 3295,
                            "indexExpression": {
                              "id": 3294,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3285,
                              "src": "779:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "771:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1649_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 3296,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1634,
                          "src": "771:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1612_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 3298,
                        "indexExpression": {
                          "id": 3297,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3287,
                          "src": "791:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "771:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1612_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 3299,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1611,
                      "src": "771:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "771:46:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3302,
                  "nodeType": "ExpressionStatement",
                  "src": "771:46:16"
                }
              ]
            },
            "documentation": {
              "id": 3283,
              "nodeType": "StructuredDocumentation",
              "src": "535:144:16",
              "text": " @dev Function to revoke holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "759c5214",
            "id": 3304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3290,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3285,
                    "src": "757:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3291,
                "modifierName": {
                  "id": 3289,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2038,
                  "src": "743:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "743:17:16"
              }
            ],
            "name": "revokeHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3285,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3304,
                  "src": "706:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3287,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3304,
                  "src": "718:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:28:16"
            },
            "returnParameters": {
              "id": 3292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:16"
            },
            "scope": 3341,
            "src": "684:140:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1146
            ],
            "body": {
              "id": 3339,
              "nodeType": "Block",
              "src": "1063:168:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1081:22:16",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3315,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1706,
                                "src": "1082:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1649_storage_$",
                                  "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                                }
                              },
                              "id": 3317,
                              "indexExpression": {
                                "id": 3316,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3308,
                                "src": "1090:2:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1082:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1649_storage",
                                "typeString": "struct Data.Token storage ref"
                              }
                            },
                            "id": 3318,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isPrivate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1628,
                            "src": "1082:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3320,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1706,
                                  "src": "1107:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1649_storage_$",
                                    "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                                  }
                                },
                                "id": 3322,
                                "indexExpression": {
                                  "id": 3321,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3308,
                                  "src": "1115:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1107:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$1649_storage",
                                  "typeString": "struct Data.Token storage ref"
                                }
                              },
                              "id": 3323,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1634,
                              "src": "1107:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1612_storage_$",
                                "typeString": "mapping(address => struct Data.Holder storage ref)"
                              }
                            },
                            "id": 3325,
                            "indexExpression": {
                              "id": 3324,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3306,
                              "src": "1127:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1107:30:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1612_storage",
                              "typeString": "struct Data.Holder storage ref"
                            }
                          },
                          "id": 3326,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1611,
                          "src": "1107:41:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1081:67:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420617070726f766564",
                        "id": 3328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1150:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        },
                        "value": "Address not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        }
                      ],
                      "id": 3314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1073:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3330,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:100:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3334,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3306,
                        "src": "1203:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3335,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3308,
                        "src": "1214:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3336,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3310,
                        "src": "1218:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3331,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1183:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Privatizable_$3341",
                          "typeString": "contract super Privatizable"
                        }
                      },
                      "id": 3333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1146,
                      "src": "1183:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3338,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:41:16"
                }
              ]
            },
            "id": 3340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addToBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3312,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1054:8:16"
            },
            "parameters": {
              "id": 3311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3306,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3340,
                  "src": "999:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3308,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3340,
                  "src": "1018:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3310,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3340,
                  "src": "1030:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:46:16"
            },
            "returnParameters": {
              "id": 3313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:16"
            },
            "scope": 3341,
            "src": "976:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3342,
        "src": "99:1135:16"
      }
    ],
    "src": "45:1190:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-22T09:28:25.286Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approveHolder(uint256,address)": {
        "details": "Function to approve holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "averageAge(address,uint256)": {
        "details": "Function to get the average age of the token for the given address.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID"
        },
        "returns": {
          "_0": "average age in seconds"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "revokeHolder(uint256,address)": {
        "details": "Function to revoke holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        },
        "returns": {
          "_0": "transfer price"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to update a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be updated",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "uri(uint256)": {
        "params": {
          "id": "Token ID"
        },
        "returns": {
          "_0": "URI string"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "isTrustedForwarder(address)": {
        "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}