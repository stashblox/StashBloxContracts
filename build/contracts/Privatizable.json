{
  "contractName": "Privatizable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "versionRecipient",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "GSNTrustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "averageAge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "approveHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "revokeHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"versionRecipient\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"GSNTrustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"approveHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"averageAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"revokeHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approveHolder(uint256,address)\":{\"details\":\"Function to approve holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"averageAge(address,uint256)\":{\"details\":\"Function to get the average age of the token for the given address.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\"},\"returns\":{\"_0\":\"average age in seconds\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"revokeHolder(uint256,address)\":{\"details\":\"Function to revoke holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"},\"returns\":{\"_0\":\"transfer price\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to update a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be updated\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"uri(uint256)\":{\"params\":{\"id\":\"Token ID\"},\"returns\":{\"_0\":\"URI string\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":\"Privatizable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Metadata.sol\":{\"keccak256\":\"0x121c132f1a15fafd91c187380702cb32d60beab1a4054670efc987e36bc2b70f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://425182c1ecd27456fc2f1c3fd82444b17a13f2e4e503bb3f7b973e83d2ceb1bb\",\"dweb:/ipfs/QmU54fpZCpdGtjUAbQkr4cYikCzKKQqjS3LPNQpYpJXiA8\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0xd73f72cf3f4a2f4cde3e8f3950d60202e1aa89405e5aaedf971ced063261edd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e01873a56115a6f3f1f6ce5dee198bbc2023ed36178ad693099de8b24baf2074\",\"dweb:/ipfs/QmQ4B48S3idc1CQtZyzQV3HH5tYPLk3ncRtS2ovUWxFsqW\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0xcdcde4ba36ac03653ff34931b8e89a657f6f156f15d9bf376cf5925c7611ed62\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://00cbe945c44ff218abbc143095cf9286f5fc5f3a24467049d7c3cbdc61bec29f\",\"dweb:/ipfs/QmRAWFt5KTo6THg45BcmZbPJYhHcqgCJ8tuexsjQcY1LYu\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol\":{\"keccak256\":\"0x10f1e7da4efe2807b1c3d578056f69a7ace572672879c108a38de55675031047\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0d35b3517652d7d4a0c6a44aee81fef110526d728656aa1706745795bdf7041d\",\"dweb:/ipfs/QmRTSSAKFivUyRyNYpZJCmcZRgwvy9jH4bRDnGyCwgNuiG\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/GSNCapable.sol\":{\"keccak256\":\"0xe62044b6d2130c6f00fc99898edf8605ca1cf1b0825ab13e2f5b78d7a0a5906c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://512c10b024ae37f020cc05fc2fa909793d8762eb210d894ead5e27bb1be55ebc\",\"dweb:/ipfs/QmNxYnbQELq18PKYvgRLj1QEpKiY1UpWGCQwSA2ezcnUGQ\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x995c62950584716d782295bdc47ec89a822d1e856955e626461e55f7a78058ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7bdbc7822173239170c192563023beb95d31aeb0102c0f66cc12cedb506e6f89\",\"dweb:/ipfs/Qmb7WJEDHnXxRqDQumCGcDkAur1h1uPEomcWrqC2TRkRDF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0xd5019a259ee94a211172c19d30424b28a912d02507ab220a096046ac4fdd2068\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://daa7dc075a17ef143feca5828e939af66e383b404cce31fb47fafde265f03305\",\"dweb:/ipfs/QmaGPAikYBr8GmJUbzKTzRRtWLfqXwvAHwkZYcogZA4SdD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/MultiToken.sol\":{\"keccak256\":\"0x5922c39f3d83a885d67924ba9c2416cd6429c7f775491586c4ab77f9444397a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f19db9460901c3ec860b56ff7f6b85c4018527e44200692b7fba0e92f8f5c1fa\",\"dweb:/ipfs/QmNW8wyDYtKX5rp5uF15JZD1swSDR5WGjEBif49Ax3mgBM\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0x8779572989fe688bfa3e374845056f5798d1db5a9533e3ce4375713fd352f979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c90a1f8d3d2e62b615c5e807578a030ce04eb3d21c506a7f79522dc87d9870\",\"dweb:/ipfs/QmRYy1iTAha4CZPX2T8gU2Eh9FnjwdKKgRFpAWTiHM3KyP\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":{\"keccak256\":\"0xd8b068c736d1b5ef364d6f73d6fef3788034d3250fb3cd9e8d44d099aaca7b52\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fae9426d967287250027a3fb45c6499614b3365ee98debed327affa09d254d08\",\"dweb:/ipfs/Qmf8ap2iGa8UK7wSzMTxMM2tp4MaTpm5WXZCwS41Uj9ZCg\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0x6e349cd9263193acda067d4b2fe7cebd1a0d169c7b4ab1fb38a664ecdb60065f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5eed5b309c557a2a496a87659ccbae4561ee0121326b30df10ea881fd71872bc\",\"dweb:/ipfs/QmeJRw3fSUAYb9roQpSh7KzpRwTpPcdW8bobg5qpFofFjF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x700249db0ed6aa2be4fc7675c9cdb5cdcc4e49abec52eefa58c2b02092784188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8babf975072c842269b5cb10aedfed77307629626cc6ab6173e68462eaebb\",\"dweb:/ipfs/QmVSAHYR99a4Q6jrrSqvRxMEnD2dhNAUPLyGA9KGJGTLDL\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5062000026620000206200002c565b62000062565b62000133565b60006018361080159062000046575062000046336200011f565b156200005c575060131936013560601c6200005f565b50335b90565b6001600160a01b038116620000c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062003ed26026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b0390811691161490565b613d8f80620001436000396000f3fe6080604052600436106101cc5760003560e01c8063759c5214116100f7578063c40b87ae11610095578063ed70554d11610064578063ed70554d14610e48578063f242432a14610ec6578063f2fde38b14610f59578063f8a5a07c14610f8c576101cc565b8063c40b87ae14610bf8578063d1660e1814610d95578063d41d0aa314610dd4578063e985e9c514610e0d576101cc565b80638aeba37e116100d15780638aeba37e14610b205780638da5cb5b14610b59578063a22cb46514610b8a578063c02f303c14610bc5576101cc565b8063759c521414610a815780637627b73214610aba5780638870147b14610aed576101cc565b80634392e5771161016f578063572b6c051161013e578063572b6c05146109a3578063585941d5146109d65780635dafec1b14610a0f5780635dd2b9a614610a48576101cc565b80634392e5771461062b578063486ff0cd1461068c5780634ab0d253146106a15780634e1273f414610823576101cc565b80632eb2c2d6116101ab5780632eb2c2d6146103035780632ed42bf71461042c5780633cacd7d614610546578063414ed0ce14610599576101cc565b8062fdd58e146101d157806301ffc9a71461021c5780630e89341c14610264575b600080fd5b3480156101dd57600080fd5b5061020a600480360360408110156101f457600080fd5b506001600160a01b0381351690602001356110c3565b60408051918252519081900360200190f35b34801561022857600080fd5b506102506004803603602081101561023f57600080fd5b50356001600160e01b031916611138565b604080519115158252519081900360200190f35b34801561027057600080fd5b5061028e6004803603602081101561028757600080fd5b503561117f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102c85781810151838201526020016102b0565b50505050905090810190601f1680156102f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61042a600480360360a081101561031957600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561034c57600080fd5b82018360208201111561035e57600080fd5b803590602001918460208302840111600160201b8311171561037f57600080fd5b919390929091602081019035600160201b81111561039c57600080fd5b8201836020820111156103ae57600080fd5b803590602001918460208302840111600160201b831117156103cf57600080fd5b919390929091602081019035600160201b8111156103ec57600080fd5b8201836020820111156103fe57600080fd5b803590602001918460018302840111600160201b8311171561041f57600080fd5b509092509050611220565b005b34801561043857600080fd5b506104416114f3565b604051808681526020018060200180602001856001600160a01b03168152602001846001600160a01b03168152602001838103835287818151815260200191508051906020019080838360005b838110156104a657818101518382015260200161048e565b50505050905090810190601f1680156104d35780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b838110156105065781810151838201526020016104ee565b50505050905090810190601f1680156105335780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b34801561055257600080fd5b506105796004803603602081101561056957600080fd5b50356001600160a01b0316611634565b604080519315158452911515602084015282820152519081900360600190f35b3480156105a557600080fd5b506105c3600480360360208110156105bc57600080fd5b503561165a565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561063757600080fd5b5061042a600480360361014081101561064f57600080fd5b81019080806101400190600a806020026040519081016040528092919082600a602002808284376000920191909152509194506116cd9350505050565b34801561069857600080fd5b5061028e611725565b3480156106ad57600080fd5b5061042a60048036036101408110156106c557600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b81111561071a57600080fd5b82018360208201111561072c57600080fd5b803590602001918460208302840111600160201b8311171561074d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561079c57600080fd5b8201836020820111156107ae57600080fd5b803590602001918460208302840111600160201b831117156107cf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166117b9565b34801561082f57600080fd5b506109536004803603604081101561084657600080fd5b810190602081018135600160201b81111561086057600080fd5b82018360208201111561087257600080fd5b803590602001918460208302840111600160201b8311171561089357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156108e257600080fd5b8201836020820111156108f457600080fd5b803590602001918460208302840111600160201b8311171561091557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506118b7945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561098f578181015183820152602001610977565b505050509050019250505060405180910390f35b3480156109af57600080fd5b50610250600480360360208110156109c657600080fd5b50356001600160a01b0316611a3b565b3480156109e257600080fd5b5061020a600480360360408110156109f957600080fd5b506001600160a01b038135169060200135611a4f565b348015610a1b57600080fd5b5061025060048036036040811015610a3257600080fd5b50803590602001356001600160a01b0316611a8a565b348015610a5457600080fd5b5061042a60048036036040811015610a6b57600080fd5b50803590602001356001600160a01b0316611a96565b348015610a8d57600080fd5b5061042a60048036036040811015610aa457600080fd5b50803590602001356001600160a01b0316611b2a565b348015610ac657600080fd5b5061042a60048036036020811015610add57600080fd5b50356001600160a01b0316611bb9565b348015610af957600080fd5b5061042a60048036036020811015610b1057600080fd5b50356001600160a01b0316611c24565b348015610b2c57600080fd5b5061042a60048036036040811015610b4357600080fd5b50803590602001356001600160a01b0316611c8c565b348015610b6557600080fd5b50610b6e611d0a565b604080516001600160a01b039092168252519081900360200190f35b348015610b9657600080fd5b5061042a60048036036040811015610bad57600080fd5b506001600160a01b0381351690602001351515611d19565b348015610bd157600080fd5b5061025060048036036020811015610be857600080fd5b50356001600160a01b0316611e0c565b348015610c0457600080fd5b5061042a60048036036101a0811015610c1c57600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610c8c57600080fd5b820183602082011115610c9e57600080fd5b803590602001918460208302840111600160201b83111715610cbf57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610d0e57600080fd5b820183602082011115610d2057600080fd5b803590602001918460208302840111600160201b83111715610d4157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611e17565b348015610da157600080fd5b5061020a60048036036060811015610db857600080fd5b506001600160a01b038135169060208101359060400135611eee565b348015610de057600080fd5b5061042a60048036036040811015610df757600080fd5b50803590602001356001600160a01b0316611f03565b348015610e1957600080fd5b5061025060048036036040811015610e3057600080fd5b506001600160a01b0381358116916020013516611f7e565b348015610e5457600080fd5b50610e7260048036036020811015610e6b57600080fd5b5035611f8a565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b61042a600480360360a0811015610edc57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610f1b57600080fd5b820183602082011115610f2d57600080fd5b803590602001918460018302840111600160201b83111715610f4e57600080fd5b509092509050611fe6565b348015610f6557600080fd5b5061042a60048036036020811015610f7c57600080fd5b50356001600160a01b031661215d565b348015610f9857600080fd5b5061042a60048036036060811015610faf57600080fd5b81359190810190604081016020820135600160201b811115610fd057600080fd5b820183602082011115610fe257600080fd5b803590602001918460208302840111600160201b8311171561100357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561105257600080fd5b82018360208201111561106457600080fd5b803590602001918460208302840111600160201b8311171561108557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506121b0945050505050565b60006001600160a01b03831661110a5760405162461bcd60e51b815260040180806020018281038252602b815260200180613b44602b913960400191505060405180910390fd5b5060008181526010602090815260408083206001600160a01b03861684526007019091529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b148061116957506001600160e01b03198216636cdb3d1360e11b145b156111765750600161117a565b5060005b919050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152606093611132939192909183018282801561120d5780601f106111e25761010080835404028352916020019161120d565b820191906000526020600020905b8154815290600101906020018083116111f057829003601f168201915b505050505061121b8461235e565b61241a565b84831461125e5760405162461bcd60e51b815260040180806020018281038252602e815260200180613cfb602e913960400191505060405180910390fd5b6001600160a01b0387166112a35760405162461bcd60e51b8152600401808060200182810382526028815260200180613b956028913960400191505060405180910390fd5b6112ab612524565b6001600160a01b0316886001600160a01b031614806112dc57506112d6886112d1612524565b611f7e565b15156001145b6113175760405162461bcd60e51b8152600401808060200182810382526037815260200180613cc46037913960400191505060405180910390fd5b611386888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a91829185019084908082843760009201919091525061255692505050565b866001600160a01b0316886001600160a01b03166113a2612524565b6001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a46114e9611449612524565b898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061261092505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152939493929183018282801561157f5780601f106115545761010080835404028352916020019161157f565b820191906000526020600020905b81548152906001019060200180831161156257829003601f168201915b50505060028085018054604080516020601f60001961010060018716150201909416959095049283018590048502810185019091528181529596959450909250908301828280156116115780601f106115e657610100808354040283529160200191611611565b820191906000526020600020905b8154815290600101906020018083116115f457829003601f168201915b50505050600383015460049093015491926001600160a01b039081169216905085565b600f602052600090815260409020805460019091015460ff808316926101009004169083565b60116020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b6116d5612801565b611714576040805162461bcd60e51b81526020600482018190526024820152600080516020613ca4833981519152604482015290519081900360640190fd5b611721600582600a6139ef565b5050565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156117ae5780601f10611783576101008083540402835291602001916117ae565b820191906000526020600020905b81548152906001019060200180831161179157829003601f168201915b505050505090505b90565b876117cb816117c6612524565b612827565b611816576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b600089815260106020526040902054611866576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b6118768989898989898989612861565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b606081518351146118f95760405162461bcd60e51b8152600401808060200182810382526030815260200180613be96030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561191357600080fd5b5060405190808252806020026020018201604052801561193d578160200160208202803683370190505b50905060005b8451811015611a335760006001600160a01b031685828151811061196357fe5b60200260200101516001600160a01b031614156119b15760405162461bcd60e51b8152600401808060200182810382526034815260200180613c4f6034913960400191505060405180910390fd5b601060008583815181106119c157fe5b6020026020010151815260200190815260200160002060070160008683815181106119e857fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000154828281518110611a2057fe5b6020908102919091010152600101611943565b509392505050565b6004546001600160a01b0390811691161490565b60008181526010602090815260408083206001600160a01b0386168452600701909152812060010154611a83904290612a05565b9392505050565b6000611a838383612827565b81611aa3816117c6612524565b611aee576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b5060009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805462ff0000191662010000179055565b81611b37816117c6612524565b611b82576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b5060009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805462ff000019169055565b611bc1612801565b611c00576040805162461bcd60e51b81526020600482018190526024820152600080516020613ca4833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805460ff19166001179055565b611c2c612801565b611c6b576040805162461bcd60e51b81526020600482018190526024820152600080516020613ca4833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805460ff19169055565b611c94612801565b611cd3576040805162461bcd60e51b81526020600482018190526024820152600080516020613ca4833981519152604482015290519081900360640190fd5b60009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b6003546001600160a01b031690565b816001600160a01b0316611d2b612524565b6001600160a01b03161415611d715760405162461bcd60e51b815260040180806020018281038252602c815260200180613bbd602c913960400191505060405180910390fd5b80600f6000611d7e612524565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825260039092019093529120805460ff191692151592909217909155611dc6612524565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b600061113282612a47565b611e27611e22612524565b612a47565b611e72576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b611e858b8b8b8b8b8b8b8b8b8b8b612a71565b6001600160a01b038b166000611e99612524565b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628d8d604051808381526020018281526020019250505060405180910390a45050505050505050505050565b6000611efb848484612bb1565b949350505050565b611f0b612801565b611f4a576040805162461bcd60e51b81526020600482018190526024820152600080516020613ca4833981519152604482015290519081900360640190fd5b60009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b6000611a838383612d99565b601060205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b03851661202b5760405162461bcd60e51b8152600401808060200182810382526028815260200180613b956028913960400191505060405180910390fd5b612033612524565b6001600160a01b0316866001600160a01b0316148061205f5750612059866112d1612524565b15156001145b61209a5760405162461bcd60e51b8152600401808060200182810382526037815260200180613cc46037913960400191505060405180910390fd5b6120a686868686612dde565b846001600160a01b0316866001600160a01b03166120c2612524565b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4612155612115612524565b8787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612e5692505050565b505050505050565b612165612801565b6121a4576040805162461bcd60e51b81526020600482018190526024820152600080516020613ca4833981519152604482015290519081900360640190fd5b6121ad81612fcb565b50565b6121bb611e22612524565b612206576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b60008381526010602052604090205415801590612224575080518251145b612269576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015612358576122a68484838151811061228557fe5b602002602001015184848151811061229957fe5b602002602001015161306c565b600084815260106020526040812060080180549091906122c257fe5b60009182526020822001546001600160a01b0316906122df612524565b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6286858151811061231557fe5b6020026020010151601060008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a460010161226c565b50505050565b60606000825b801561237a576001919091019060109004612364565b60608267ffffffffffffffff8111801561239357600080fd5b506040519080825280601f01601f1916602001820160405280156123be576020820181803683370190505b50905060005b83811015612411576010860692506123db8361320e565b82600183870303815181106123ec57fe5b60200101906001600160f81b031916908160001a9053506010860495506001016123c4565b50949350505050565b805182516060918491849184910167ffffffffffffffff8111801561243e57600080fd5b506040519080825280601f01601f191660200182016040528015612469576020820181803683370190505b509050806000805b85518110156124c25785818151811061248657fe5b602001015160f81c60f81b8383806001019450815181106124a357fe5b60200101906001600160f81b031916908160001a905350600101612471565b5060005b8451811015612517578481815181106124db57fe5b602001015160f81c60f81b8383806001019450815181106124f857fe5b60200101906001600160f81b031916908160001a9053506001016124c6565b5090979650505050505050565b60006018361080159061253b575061253b33611a3b565b1561254f575060131936013560601c6117b6565b50336117b6565b6000803411612580576001600160a01b0385166000908152600f6020526040902060010154612582565b345b905060005b83518110156125fe576125f46125c587878785815181106125a457fe5b60200260200101518786815181106125b857fe5b6020026020010151613252565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528491906133a6565b9150600101612587565b50612609858261343d565b5050505050565b612622846001600160a01b03166134be565b156121555763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156126c25781810151838201526020016126aa565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156127015781810151838201526020016126e9565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561273d578181015183820152602001612725565b50505050905090810190601f16801561276a5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561278f57600080fd5b505af11580156127a3573d6000803e3d6000fd5b505050506040513d60208110156127b957600080fd5b50516001600160e01b031916146121555760405162461bcd60e51b8152600401808060200182810382526036815260200180613c196036913960400191505060405180910390fd5b6003546000906001600160a01b0316612818612524565b6001600160a01b031614905090565b60008281526010602090815260408083206001600160a01b038516845260070190915281206002015460ff1680611a835750611a83612801565b6000805b85518110156128915785818151811061287a57fe5b602002602001015182019150806001019050612865565b50600086511180156128a1575060015b80156128ae575080612710145b80156128bb575061271084105b612900576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152601060209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b909101805460018101825590855292909320612960939283020191613a47565b506000898152601060209081526040909120875161298692600990920191890190613a81565b50600089815260106020908152604090912086516129ac92600a90920191880190613ad5565b505060009788526010602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b6000611a8383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506133a6565b6001600160a01b0381166000908152600f602052604081205460ff16806111325750611132612801565b60008a815260106020526040902054158015612a8d5750600089115b612ad2576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60008a81526010602052604081208a815560018082018b905591600790910190612afa612524565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001601060008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff021916908315150217905550612b998a88888888888888612861565b612ba48b8b8b6134f5565b5050505050505050505050565b6000828152601060205260408120600b015481904290600019015b6000868152601060205260408120600b01805483908110612be957fe5b60009182526020822060029091020101546000888152601060205260408120600b018054929350909184908110612c1c57fe5b9060005260206000209060020201600160028110612c3657fe5b015460008981526010602090815260408083206001600160a01b038e168452600701909152812060010154919250908311612cd95760008981526010602090815260408083206001600160a01b038e168452600701909152902060010154612cae906201518090612ca8908890612a05565b9061359e565b905080612cb9575060015b612ccd88612cc783856135e0565b906135e0565b86019550505050612d18565b612cea62015180612ca88786612a05565b905080612cf5575060015b9193508391612d0888612cc783856135e0565b9095019450505060001901612bcc565b50600085815260106020526040902060010154612d39908390600a0a61359e565b60008681526010602052604081206003015491935090612d64906305f5e10090612ca89088906135e0565b600087815260106020526040902060020154909150612d8e90612d879083613639565b8490613639565b979650505050505050565b6000612da58383613693565b80611a835750506001600160a01b039182166000908152600f602090815260408083209390941682526003909201909152205460ff1690565b6000803411612e08576001600160a01b0385166000908152600f6020526040902060010154612e0a565b345b9050612e4a612e1b86868686613252565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528391906133a6565b9050612609858261343d565b612e68846001600160a01b03166134be565b156121555763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612f09578181015183820152602001612ef1565b50505050905090810190601f168015612f365780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015612f5957600080fd5b505af1158015612f6d573d6000803e3d6000fd5b505050506040513d6020811015612f8357600080fd5b50516001600160e01b031916146121555760405162461bcd60e51b8152600401808060200182810382526031815260200180613d296031913960400191505060405180910390fd5b6001600160a01b0381166130105760405162461bcd60e51b8152600401808060200182810382526026815260200180613b6f6026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b60008381526010602052604081206008018054613209929061308a57fe5b600091825260208083209091015486835260108083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a9490939084019291906130f457fe5b906000526020600020906002020160016002811061310e57fe5b0154905260008a8152601060209081526040918290206009018054835181840281018401909452808452909183018282801561317357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613155575b50505060008d815260106020908152604091829020600a01805483518184028101840190945280845292945092508301828280156131d057602002820191906000526020600020905b8154815260200190600101908083116131bc575b50505060008e8152601060205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b0316612a71565b505050565b600060098260ff161161322857506030810160f81b61117a565b8160ff16600a111580156132405750600f8260ff1611155b156101cc57506057810160f81b61117a565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152601082528381206001600160a01b0389168252600701909152918220546132ad9184906133a6565b60008481526010602090815260408083206001600160a01b038a1684526007019091529020556132de8484846134f5565b6132e9858484612bb1565b905060005b60008481526010602052604090206009015481101561241157600084815260106020526040812060090180548390811061332457fe5b6000918252602080832090910154878352601090915260408220600a0180546001600160a01b039092169350908490811061335b57fe5b6000918252602090912001549050613379612710612ca886846135e0565b6001600160a01b039092166000908152600f602052604090206001908101805490930190925550016132ee565b600081848411156134355760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156133fa5781810151838201526020016133e2565b50505050905090810190601f1680156134275780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60003411801561344d5750600081115b15613499576001600160a01b0382166000908152600f60205260409020600101546134789082613639565b6001600160a01b0383166000908152600f6020526040902060010155611721565b34611721576001600160a01b03919091166000908152600f6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611efb5750141592915050565b600082815260106020526040902060060154600160a01b900460ff16158061354b575060008281526010602090815260408083206001600160a01b038716845260070190915290206002015462010000900460ff165b613593576040805162461bcd60e51b81526020600482015260146024820152731059191c995cdcc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b61320983838361377a565b6000611a8383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061398a565b6000826135ef57506000611132565b828202828482816135fc57fe5b0414611a835760405162461bcd60e51b8152600401808060200182810382526021815260200180613c836021913960400191505060405180910390fd5b600082820183811015611a83576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000805b600a811015613770576000600582600a81106136af57fe5b01546001600160a01b031614613768576000600582600a81106136ce57fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b15801561372057600080fd5b505afa158015613734573d6000803e3d6000fd5b505050506040513d602081101561374a57600080fd5b50516001600160a01b0316141561376657600192505050611132565b505b600101613697565b5060009392505050565b60008281526010602090815260408083206001600160a01b03871684526007019091528120546137aa9083613639565b60008481526010602090815260408083206001600160a01b03891684526007019091529020549091506138b95760008381526010602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16613888576001600160a01b0384166000818152600f60209081526040808320600290810180546001818101835591865284862001899055888552601084528285206008810180549283018155865284862090910180546001600160a01b031916871790559484526007909401909152902001805461ff0019166101001790555b60008381526010602090815260408083206001600160a01b038816845260070190915290204260019091015561395a565b60008381526010602090815260408083206001600160a01b03881684526007019091528120600101546138ed904290612a05565b60008581526010602090815260408083206001600160a01b038a16845260070190915281205491925090613927908490612ca890856135e0565b60008681526010602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b60009283526010602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b600081836139d95760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156133fa5781810151838201526020016133e2565b5060008385816139e557fe5b0495945050505050565b82600a8101928215613a37579160200282015b82811115613a3757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613a02565b50613a43929150613b0f565b5090565b8260028101928215613a75579160200282015b82811115613a75578251825591602001919060010190613a5a565b50613a43929150613b2e565b828054828255906000526020600020908101928215613a375791602002820182811115613a3757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613a02565b828054828255906000526020600020908101928215613a755791602002820182811115613a75578251825591602001919060010190613a5a565b5b80821115613a435780546001600160a01b0319168155600101613b10565b5b80821115613a435760008155600101613b2f56fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a2646970667358221220f9942bba1490b926fc216d2423714c3aa93f8f60f4bd213c8f5dcd7cab82360864736f6c634300070100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "99:1135:16:-:0;;;;;;;;;;;;-1:-1:-1;649:32:15;668:12;:10;:12::i;:::-;649:18;:32::i;:::-;99:1135:16;;782:556:10;844:19;898:2;879:8;:21;;;;:55;;-1:-1:-1;904:30:10;923:10;904:18;:30::i;:::-;875:457;;;-1:-1:-1;;;1240:14:10;1236:22;1223:36;1220:2;1216:44;1191:83;;;-1:-1:-1;1311:10:10;875:457;782:556;:::o;1691:239:15:-;-1:-1:-1;;;;;1764:22:15;;1756:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:13;;1844:45;;-1:-1:-1;;;;;1844:45:15;;;;1865:13;;1844:45;;1865:7;;1844:45;1899:13;:24;;-1:-1:-1;;;;;;1899:24:15;-1:-1:-1;;;;;1899:24:15;;;;;;;;;;1691:239::o;384:146:10:-;496:27;;-1:-1:-1;;;;;496:27:10;;;483:40;;;;384:146::o;99:1135:16:-;;;;;;;",
  "deployedSourceMap": "99:1135:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:234:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1687:234:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1092:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1092:255:14;-1:-1:-1;;;;;;1092:255:14;;:::i;:::-;;;;;;;;;;;;;;;;;;6733:141;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6733:141:14;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5881:778;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;-1:-1:-1;5881:778:14;;-1:-1:-1;5881:778:14;-1:-1:-1;5881:778:14;:::i;:::-;;2085:22:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2085:22:9;;;;;;-1:-1:-1;;;;;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2113:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2113:39:9;-1:-1:-1;;;;;2113:39:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2205:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2205:47:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2205:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;465:151:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:151:17;;-1:-1:-1;465:151:17;;-1:-1:-1;;;;465:151:17:i;2552:167:10:-;;;;;;;;;;;;;:::i;2253:823:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;2253:823:12;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;-1:-1:-1;;;;;2253:823:12;;:::i;2245:631:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2245:631:14;;;;;;;;-1:-1:-1;2245:631:14;;-1:-1:-1;;;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2245:631:14;;-1:-1:-1;2245:631:14;;-1:-1:-1;;;;;2245:631:14:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:146:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;384:146:10;-1:-1:-1;;;;;384:146:10;;:::i;961:161:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;961:161:8;;;;;;;;:::i;1414:132:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1414:132:12;;;;;;-1:-1:-1;;;;;1414:132:12;;:::i;388:140:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:140:16;;;;;;-1:-1:-1;;;;;388:140:16;;:::i;684:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;684:140:16;;;;;;-1:-1:-1;;;;;684:140:16;;:::i;631:119:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;631:119:13;-1:-1:-1;;;;;631:119:13;;:::i;887:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;887:117:13;-1:-1:-1;;;;;887:117:13;;:::i;733:144:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;733:144:12;;;;;;-1:-1:-1;;;;;733:144:12;;:::i;1137:93:15:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1137:93:15;;;;;;;;;;;;;;3354:308:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3354:308:14;;;;;;;;;;:::i;1150:116:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1150:116:13;-1:-1:-1;;;;;1150:116:13;;:::i;2105:1040::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;2105:1040:13;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;:::i;564:159:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;564:159:8;;;;;;;;;;;;;:::i;1046:142:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1046:142:12;;;;;;-1:-1:-1;;;;;1046:142:12;;:::i;3943:157:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3943:157:14;;;;;;;;;;:::i;2158:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2158:41:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2158:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;4654:638:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4654:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4654:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4654:638:14;;;;;;;;;;-1:-1:-1;4654:638:14;;-1:-1:-1;4654:638:14;-1:-1:-1;4654:638:14;:::i;1379:116:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1379:116:15;-1:-1:-1;;;;;1379:116:15;;:::i;3372:647:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13:i;1687:234:14:-;1765:7;-1:-1:-1;;;;;1792:21:14;;1784:77;;;;-1:-1:-1;;;1784:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1878:11:14;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1878:28:14;;;;:19;;:28;;;;;:36;1687:234;;;;;:::o;1092:255::-;1172:4;-1:-1:-1;;;;;;1190:42:14;;-1:-1:-1;;;1190:42:14;;:99;;-1:-1:-1;;;;;;;1246:43:14;;-1:-1:-1;;;1246:43:14;1190:99;1186:135;;;-1:-1:-1;1308:4:14;1301:11;;1186:135;-1:-1:-1;1335:5:14;1092:255;;;;:::o;6733:141::-;6833:15;6822:45;;;;;;;;;;;;;-1:-1:-1;;6822:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;6790:13;;6822:45;;;;6833:15;;6822:45;;6833:15;6822:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6850:16;6863:2;6850:12;:16::i;:::-;6822:10;:45::i;5881:778::-;6112:27;;;6104:86;;;;-1:-1:-1;;;6104:86:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6208:16:14;;6200:69;;;;-1:-1:-1;;;6200:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6308:12;:10;:12::i;:::-;-1:-1:-1;;;;;6300:20:14;:4;-1:-1:-1;;;;;6300:20:14;;:68;;;;6324:36;6341:4;6347:12;:10;:12::i;:::-;6324:16;:36::i;:::-;:44;;6364:4;6324:44;6300:68;6279:170;;;;-1:-1:-1;;;6279:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6460:37;6475:4;6481:2;6485:3;;6460:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:37:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6490:6:14;;-1:-1:-1;6490:6:14;;;;6460:37;;;6490:6;;6460:37;6490:6;6460:37;;;;;;;;;-1:-1:-1;6460:14:14;;-1:-1:-1;;;6460:37:14:i;:::-;6547:2;-1:-1:-1;;;;;6513:50:14;6541:4;-1:-1:-1;;;;;6513:50:14;6527:12;:10;:12::i;:::-;-1:-1:-1;;;;;6513:50:14;;6551:3;;6556:6;;6513:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6513:50:14;;;;;;;;;;;;;;;;;-1:-1:-1;6513:50:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6513:50:14;;;;;;;;-1:-1:-1;6513:50:14;;-1:-1:-1;;;;;;;6513:50:14;6574:78;6610:12;:10;:12::i;:::-;6624:4;6630:2;6634:3;;6574:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6574:78:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6639:6:14;;-1:-1:-1;6639:6:14;;;;6574:78;;;6639:6;;6574:78;6639:6;6574:78;;;;;;;;;-1:-1:-1;;6574:78:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6647:4:14;;-1:-1:-1;6647:4:14;;;;6574:78;;6647:4;;;;6574:78;;;;;;;;;-1:-1:-1;6574:35:14;;-1:-1:-1;;;6574:78:14:i;:::-;5881:778;;;;;;;;:::o;2085:22:9:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2085:22:9;;;;;;;;;;;-1:-1:-1;;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2085:22:9;;-1:-1:-1;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2085:22:9;;;;;;;;;;;-1:-1:-1;;;;;2085:22:9;;;;;;-1:-1:-1;2085:22:9;:::o;2113:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2205:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2205:47:9;;;;-1:-1:-1;;;2205:47:9;;;;;-1:-1:-1;;;2205:47:9;;;;;-1:-1:-1;;;2205:47:9;;;;;-1:-1:-1;;;2205:47:9;;;;;-1:-1:-1;;;2205:47:9;;;;;:::o;465:151:17:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;562:47:17::1;:30;595:14:::0;562:47:::1;;:::i;:::-;;465:151:::0;:::o;2552:167:10:-;2688:24;2681:31;;;;;;;-1:-1:-1;;2681:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2612:13;;2681:31;;2688:24;;2681:31;;2688:24;2681:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:167;;:::o;2253:823:12:-;2688:2;427:30;440:2;444:12;:10;:12::i;:::-;427;:30::i;:::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;;;;2731:1:::1;2710:11:::0;;;:7:::1;:11;::::0;;;;:18;2702:48:::1;;;::::0;;-1:-1:-1;;;2702:48:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2702:48:12;;;;;;;;;;;;;::::1;;2761:262;2771:2;2793:12;2825:15;2860:14;2894:24;2938:21;2979:9;3008:14;2761:9;:262::i;:::-;3039:30;::::0;;;;;;;3052:2;;3039:30:::1;::::0;;;;;::::1;::::0;;::::1;2253:823:::0;;;;;;;;;:::o;2245:631:14:-;2394:16;2453:3;:10;2434:8;:15;:29;2426:90;;;;-1:-1:-1;;;2426:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:30;2574:8;:15;2560:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2560:30:14;;2527:63;;2606:9;2601:238;2625:8;:15;2621:1;:19;2601:238;;;2692:1;-1:-1:-1;;;;;2669:25:14;:8;2678:1;2669:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2669:25:14;;;2661:90;;;;-1:-1:-1;;;2661:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:7;:15;2792:3;2796:1;2792:6;;;;;;;;;;;;;;2784:15;;;;;;;;;;;:23;;:36;2808:8;2817:1;2808:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2784:36:14;-1:-1:-1;;;;;2784:36:14;;;;;;;;;;;;:44;;;2765:13;2779:1;2765:16;;;;;;;;;;;;;;;;;:63;2642:3;;2601:238;;;-1:-1:-1;2856:13:14;2245:631;-1:-1:-1;;;2245:631:14:o;384:146:10:-;496:27;;-1:-1:-1;;;;;496:27:10;;;483:40;;;;384:146::o;961:161:8:-;1031:7;1077:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1077:28:8;;;;:19;;:28;;;;;:37;;;1057:58;;:15;;:19;:58::i;:::-;1050:65;961:161;-1:-1:-1;;;961:161:8:o;1414:132:12:-;1489:4;1512:27;1525:2;1529:9;1512:12;:27::i;388:140:16:-;462:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;;;;-1:-1:-1;476:11:16::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;476:27:16;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:45:::0;;-1:-1:-1;;476:45:16::1;::::0;::::1;::::0;;388:140::o;684:::-;757:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;;;;-1:-1:-1;812:5:16::1;771:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;771:27:16;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:46:::0;;-1:-1:-1;;771:46:16::1;::::0;;684:140::o;631:119:13:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;707:17:13::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;707:36:13::1;739:4;707:36;::::0;;631:119::o;887:117::-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:17:13::1;992:5;960:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;960:37:13::1;::::0;;887:117::o;733:144:12:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;821:11:12::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;821:30:12;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;821:49:12::1;866:4;821:49;::::0;;733:144::o;1137:93:15:-;1210:13;;-1:-1:-1;;;;;1210:13:15;1137:93;:::o;3354:308:14:-;3466:8;-1:-1:-1;;;;;3450:24:14;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3450:24:14;;;3442:81;;;;-1:-1:-1;;;3442:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3584:8;3533:6;:20;3540:12;:10;:12::i;:::-;-1:-1:-1;;;;;3533:20:14;;;;;;;;;;;;;;;;;-1:-1:-1;3533:20:14;;;:48;;;;;;:38;;;;:48;;;;;:59;;-1:-1:-1;;3533:59:14;;;;;;;;;;;3622:12;:10;:12::i;:::-;-1:-1:-1;;;;;3607:48:14;;3646:8;3607:48;;;;;;;;;;;;;;;;;;;;3354:308;;:::o;1150:116:13:-;1213:4;1236:23;1249:9;1236:12;:23::i;2105:1040::-;331:26;344:12;:10;:12::i;:::-;331;:26::i;:::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;;;;2682:378:::1;2695:9;2727:2;2752:6;2781:8;2812:12;2847:15;2885:14;2922:24;2969:21;3013:9;3045:14;2682:12;:378::i;:::-;-1:-1:-1::0;;;;;3075:63:13;::::1;3112:1;3090:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;3075:63:13::1;;3127:2;3131:6;3075:63;;;;;;;;;;;;;;;;;;;;;;;;2105:1040:::0;;;;;;;;;;;:::o;564:159:8:-;654:7;680:36;697:7;706:2;710:5;680:16;:36::i;:::-;673:43;564:159;-1:-1:-1;;;;564:159:8:o;1046:142:12:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;1176:5:12::1;1131:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1131:30:12;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1131:50:12::1;::::0;;1046:142::o;3943:157:14:-;4034:4;4057:36;4075:7;4084:8;4057:17;:36::i;2158:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2158:41:9;;;;-1:-1:-1;;;2158:41:9;;;;;-1:-1:-1;;;2158:41:9;;;;:::o;4654:638:14:-;-1:-1:-1;;;;;4856:16:14;;4848:69;;;;-1:-1:-1;;;4848:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4956:12;:10;:12::i;:::-;-1:-1:-1;;;;;4948:20:14;:4;-1:-1:-1;;;;;4948:20:14;;:68;;;;4972:36;4989:4;4995:12;:10;:12::i;4972:36::-;:44;;5012:4;4972:44;4948:68;4927:170;;;;-1:-1:-1;;;4927:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5108:30;5118:4;5124:2;5128;5132:5;5108:9;:30::i;:::-;5189:2;-1:-1:-1;;;;;5154:49:14;5183:4;-1:-1:-1;;;;;5154:49:14;5169:12;:10;:12::i;:::-;-1:-1:-1;;;;;5154:49:14;;5193:2;5197:5;5154:49;;;;;;;;;;;;;;;;;;;;;;;;5214:71;5245:12;:10;:12::i;:::-;5259:4;5265:2;5269;5273:5;5280:4;;5214:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5214:30:14;;-1:-1:-1;;;5214:71:14:i;:::-;4654:638;;;;;;:::o;1379:116:15:-;901:10;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;1460:28:::1;1479:8;1460:18;:28::i;:::-;1379:116:::0;:::o;3372:647:13:-;331:26;344:12;:10;:12::i;331:26::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;;;;3573:1:::1;3552:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;3608:14;:21;3594:3;:10;:35;3552:77;3544:107;;;::::0;;-1:-1:-1;;;3544:107:13;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3544:107:13;;;;;;;;;;;;;::::1;;3667:9;3662:351;3686:3;:10;3682:1;:14;3662:351;;;3717:42;3729:2;3733:3;3737:1;3733:6;;;;;;;;;;;;;;3741:14;3756:1;3741:17;;;;;;;;;;;;;;3717:11;:42::i;:::-;3884:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3884:25:13::1;::::0;3794:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;3779:223:13::1;;3943:3;3947:1;3943:6;;;;;;;;;;;;;;3983:7;:11;3991:2;3983:11;;;;;;;;;;;:18;;;3779:223;;;;;;;;;;;;;;;;;;;;;;;;3698:3;;3662:351;;;;3372:647:::0;;;:::o;933:419:21:-;986:13;1011:10;1044:1;1055:68;1062:6;;1055:68;;1084:7;;;;;;1110:2;1105:7;;1055:68;;;1132:16;1161:5;1151:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16:21;;1132:35;;1182:6;1177:141;1194:5;1192:1;:7;1177:141;;;1228:2;1224:1;:6;1220:10;;1265:21;1283:1;1265:11;:21::i;:::-;1244:3;1260:1;1256;1248:5;:9;:13;1244:18;;;;;;;;;;;:42;-1:-1:-1;;;;;1244:42:21;;;;;;;;-1:-1:-1;1305:2:21;1300:7;;;-1:-1:-1;1201:3:21;;1177:141;;;-1:-1:-1;1341:3:21;933:419;-1:-1:-1;;;;933:419:21:o;86:515::-;305:10;;292;;163:13;;213:1;;250;;163:13;;292:23;281:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:35:21;-1:-1:-1;262:54:21;-1:-1:-1;262:54:21;365:6;;405:76;421:3;:10;417:1;:14;405:76;;;464:3;468:1;464:6;;;;;;;;;;;;;;;;452:4;457:3;;;;;;452:9;;;;;;;;;;;:18;-1:-1:-1;;;;;452:18:21;;;;;;;;-1:-1:-1;433:3:21;;405:76;;;-1:-1:-1;499:1:21;490:76;506:3;:10;502:1;:14;490:76;;;549:3;553:1;549:6;;;;;;;;;;;;;;;;537:4;542:3;;;;;;537:9;;;;;;;;;;;:18;-1:-1:-1;;;;;537:18:21;;;;;;;;-1:-1:-1;518:3:21;;490:76;;;-1:-1:-1;589:4:21;;86:515;-1:-1:-1;;;;;;;86:515:21:o;782:556:10:-;844:19;898:2;879:8;:21;;;;:55;;;904:30;923:10;904:18;:30::i;:::-;875:457;;;-1:-1:-1;;;1240:14:10;1236:22;1223:36;1220:2;1216:44;1191:83;;;-1:-1:-1;1311:10:10;1304:17;;4778:404:8;4894:19;4928:1;4916:9;:13;:51;;-1:-1:-1;;;;;4944:12:8;;;;;;:6;:12;;;;;:23;;;4916:51;;;4932:9;4916:51;4894:73;;4982:9;4977:157;5001:3;:10;4997:1;:14;4977:157;;;5046:77;5062:40;5074:4;5080:2;5084:3;5088:1;5084:6;;;;;;;;;;;;;;5092;5099:1;5092:9;;;;;;;;;;;;;;5062:11;:40::i;:::-;5046:77;;;;;;;;;;;;-1:-1:-1;;;5046:77:8;;;;:11;;:77;:15;:77::i;:::-;5032:91;-1:-1:-1;5013:3:8;;4977:157;;;;5143:32;5157:4;5163:11;5143:13;:32::i;:::-;4778:404;;;;;:::o;7497:558:14:-;7740:15;:2;-1:-1:-1;;;;;7740:13:14;;:15::i;:::-;7737:312;;;7898:52;;;-1:-1:-1;;;;;7796:154:14;;7813:2;-1:-1:-1;;;;;7796:43:14;;7840:8;7850:4;7856:3;7861:6;7869:4;7796:78;;;;;;;;;;;;;-1:-1:-1;;;;;7796:78:14;;;;;;-1:-1:-1;;;;;7796:78:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7796:78:14;-1:-1:-1;;;;;;7796:154:14;;7771:267;;;;-1:-1:-1;;;7771:267:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:102:15;2095:13;;2056:4;;-1:-1:-1;;;;;2095:13:15;2079:12;:10;:12::i;:::-;-1:-1:-1;;;;;2079:29:15;;2072:36;;2013:102;:::o;3177:162:12:-;3253:4;3276:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3276:30:12;;;;:19;;:30;;;;;:42;;;;;;:56;;;3322:10;:8;:10::i;4263:1359:13:-;4682:23;4724:9;4719:120;4743:24;:31;4739:1;:35;4719:120;;;4812:24;4837:1;4812:27;;;;;;;;;;;;;;4793:46;;;;4776:3;;;;;4719:120;;;;4882:1;4858:14;:21;:25;:75;;;;-1:-1:-1;4887:46:13;4858:75;:119;;;;;4953:15;4972:5;4953:24;4858:119;:168;;;;;5021:5;4997:21;:29;4858:168;4850:214;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;;;;5075:11;;;;:7;:11;;;;;;;;:24;;;:39;;;5161:18;;5124:34;;;;:55;;;;5224:18;;;;-1:-1:-1;5189:32:13;;:53;5252:74;;;;;;;5289:15;5252:74;;5306:18;;;;5252:74;;;;:30;;;;:74;;5240:1;5252:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5336:11:13;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;5389:11:13;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;5462:11:13;;;;:7;:11;;;;;;:33;;;:57;;;;5529:21;;;;:33;;-1:-1:-1;;;;5529:33:13;-1:-1:-1;;;5529:33:13;;;;;;;;;;;-1:-1:-1;;;;;;5572:43:13;-1:-1:-1;;;;;5572:43:13;;;;;;;;;;-1:-1:-1;;;;4263:1359:13:o;1307:134:20:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;4120:137:13:-;-1:-1:-1;;;;;4207:17:13;;4184:4;4207:17;;;:6;:17;;;;;:29;;;;:43;;;4240:10;:8;:10::i;5629:1167::-;6211:11;;;;:7;:11;;;;;:18;:23;:37;;;;;6247:1;6238:6;:10;6211:37;6203:67;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;;;;6281:11;;;;:7;:11;;;;;:27;;;6318:20;;;;:31;;;:20;6359:19;;;;;6379:12;:10;:12::i;:::-;-1:-1:-1;;;;;6359:33:13;-1:-1:-1;;;;;6359:33:13;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6465:4;6421:7;:11;6429:2;6421:11;;;;;;;;;;;:19;;:30;6441:9;-1:-1:-1;;;;;6421:30:13;-1:-1:-1;;;;;6421:30:13;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;6480:262;6490:2;6512:12;6544:15;6579:14;6613:24;6657:21;6698:9;6727:14;6480:9;:262::i;:::-;6753:36;6767:9;6778:2;6782:6;6753:13;:36::i;:::-;5629:1167;;;;;;;;;;;:::o;2355:1317:8:-;2448:7;2559:11;;;:7;:11;;;;;:30;;:37;2448:7;;2519:15;;-1:-1:-1;;2559:41:8;2545:835;2630:19;2652:11;;;:7;:11;;;;;:30;;:33;;2683:1;;2652:33;;;;;;;;;;;;;;;;;;:36;;2702:12;2717:11;;;:7;:11;;;;;:30;;:33;;2652:36;;-1:-1:-1;2702:12:8;;2748:1;;2717:33;;;;;;;;;;;;;;;;2751:1;2717:36;;;;;;;;;2767:19;2805:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2805:28:8;;;;:19;;:28;;;;;:37;;;2717:36;;-1:-1:-1;2767:19:8;2805:52;-1:-1:-1;2801:569:8;;2907:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2907:28:8;;;;:19;;:28;;;;;:37;;;2891:66;;2951:5;;2892:53;;:10;;:14;:53::i;:::-;2891:59;;:66::i;:::-;2877:80;-1:-1:-1;2979:16:8;2975:37;;-1:-1:-1;3011:1:8;2975:37;3043:34;3071:5;3044:21;:11;3060:4;3044:15;:21::i;:::-;3043:27;;:34::i;:::-;3030:47;;;;3095:5;;;;;2801:569;3153:40;3187:5;3154:27;:10;3169:11;3154:14;:27::i;3153:40::-;3139:54;-1:-1:-1;3215:16:8;3211:37;;-1:-1:-1;3247:1:8;3211:37;3279:11;;-1:-1:-1;3279:11:8;;3321:34;3349:5;3322:21;:11;3338:4;3322:15;:21::i;3321:34::-;3308:47;;;;-1:-1:-1;;;;;2610:3:8;2545:835;;;-1:-1:-1;3437:11:8;;;;:7;:11;;;;;:20;;;3419:39;;:9;;3433:2;:24;3419:13;:39::i;:::-;3508:17;3539:11;;;:7;:11;;;;;:32;;;3407:51;;-1:-1:-1;3508:17:8;3528:56;;3578:5;;3529:43;;:5;;:9;:43::i;3528:56::-;3615:11;;;;:7;:11;;;;;:34;;;3508:76;;-1:-1:-1;3601:64:8;;3615:49;;3508:76;3615:38;:49::i;:::-;3601:9;;:13;:64::i;:::-;3594:71;2355:1317;-1:-1:-1;;;;;;;2355:1317:8:o;1239:203:17:-;1324:4;1347:41;1370:7;1379:8;1347:22;:41::i;:::-;:88;;;-1:-1:-1;;;;;;;1392:15:17;;;;;;;:6;:15;;;;;;;;:43;;;;;;:33;;;;:43;;;;;;;;1239:203::o;4414:306:8:-;4505:19;4539:1;4527:9;:13;:51;;-1:-1:-1;;;;;4555:12:8;;;;;;:6;:12;;;;;:23;;;4527:51;;;4543:9;4527:51;4505:73;;4602:69;4618:32;4630:4;4636:2;4640;4644:5;4618:11;:32::i;:::-;4602:69;;;;;;;;;;;;-1:-1:-1;;;4602:69:8;;;;:11;;:69;:15;:69::i;:::-;4588:83;;4681:32;4695:4;4701:11;4681:13;:32::i;6975:516:14:-;7193:15;:2;-1:-1:-1;;;;;7193:13:14;;:15::i;:::-;7190:295;;;7344:47;;;-1:-1:-1;;;;;7249:142:14;;7266:2;-1:-1:-1;;;;;7249:38:14;;7288:8;7298:4;7304:2;7308:5;7315:4;7249:71;;;;;;;;;;;;;-1:-1:-1;;;;;7249:71:14;;;;;;-1:-1:-1;;;;;7249:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7249:71:14;-1:-1:-1;;;;;;7249:142:14;;7224:250;;;;-1:-1:-1;;;7224:250:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1691:239:15;-1:-1:-1;;;;;1764:22:15;;1756:73;;;;-1:-1:-1;;;1756:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:13;;1844:45;;-1:-1:-1;;;;;1844:45:15;;;;1865:13;;1844:45;;1865:7;;1844:45;1899:13;:24;;-1:-1:-1;;;;;;1899:24:15;-1:-1:-1;;;;;1899:24:15;;;;;;;;;;1691:239::o;6802:766:13:-;6906:11;;;;:7;:11;;;;;:22;;:25;;6893:668;;6906:11;:25;;;;;;;;;;;;;;;;6984:11;;;:7;:11;;;;;;;:18;;6906:25;7025:20;;;6893:668;;;;;;;7128:34;;;;6893:668;;7187:32;;;;6893:668;;;;7244:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;6906:25:13;;;;6954:7;;6984:18;;7025:20;;7068:12;;6893:668;;;;;;7244:30;6906:25;7244:33;;;;;;;;;;;;;;7278:1;7244:36;;;;;;;;;6893:668;;7326:11;;;;:7;:11;;;;;;;;;:26;;6893:668;;;;;;;;;;;;;;;;;7326:26;;6893:668;;7326:26;6893:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6893:668:13;;;;;;;;;;;;;;;;-1:-1:-1;;;7375:11:13;;;;:7;:11;;;;;;;;;:36;;6893:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;7375:36:13;-1:-1:-1;6893:668:13;;7375:36;6893:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7434:11:13;;;;:7;:11;;;;;:33;;;;7490:21;;;;;7434:33;;-1:-1:-1;7490:21:13;-1:-1:-1;;;7490:21:13;;;;-1:-1:-1;;;;;;7534:26:13;6893:12;:668::i;:::-;6802:766;;;:::o;607:320:21:-;660:4;695:1;690;:6;;;676:187;;-1:-1:-1;724:16:21;:20;;:16;719:26;712:33;;676:187;778:1;766:14;;:2;:14;;:32;;;;;796:2;790:1;784:14;;;;766:32;762:101;;;-1:-1:-1;826:25:21;;;:16;821:31;814:38;;3678:683:8;3838:68;;;;;;;;;;;-1:-1:-1;;;3838:68:8;;;;;;;;3778:12;3838:11;;;:7;:11;;;;;-1:-1:-1;;;;;3838:25:8;;;;:19;;:25;;;;;;:33;:68;;3876:5;;3838:37;:68::i;:::-;3802:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3802:25:8;;;;:19;;:25;;;;;:104;3916:28;3930:2;3810;3938:5;3916:13;:28::i;:::-;3962:33;3979:4;3985:2;3989:5;3962:16;:33::i;:::-;3955:40;;4011:9;4006:327;4030:11;;;;:7;:11;;;;;:26;;:33;4026:37;;4006:327;;;4084:21;4108:11;;;:7;:11;;;;;:26;;:29;;4135:1;;4108:29;;;;;;;;;;;;;;;;;;4186:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;4108:29:8;;;;-1:-1:-1;4186:36:8;4223:1;;4186:39;;;;;;;;;;;;;;;;;-1:-1:-1;4275:47:8;4316:5;4276:34;:4;4186:39;4276:8;:34::i;4275:47::-;-1:-1:-1;;;;;4239:21:8;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;4065:3:8;4006:327;;1877:187:20;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:20;;;1877:187::o;5188:290:8:-;5279:1;5267:9;:13;:32;;;;;5298:1;5284:11;:15;5267:32;5263:209;;;-1:-1:-1;;;;;5339:12:8;;;;;;:6;:12;;;;;:23;;;:40;;5367:11;5339:27;:40::i;:::-;-1:-1:-1;;;;;5313:12:8;;;;;;:6;:12;;;;;:23;;:66;5263:209;;;5398:9;5394:78;;-1:-1:-1;;;;;5426:12:8;;;;;;;;:6;:12;;;;;:23;;:37;5188:290::o;590:797:19:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:19;;;1329:51;-1:-1:-1;;590:797:19:o;976:255:16:-;1082:11;;;;:7;:11;;;;;:21;;;-1:-1:-1;;;1082:21:16;;;;1081:22;;:67;;-1:-1:-1;1107:11:16;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1107:30:16;;;;:19;;:30;;;;;:41;;;;;;;;1081:67;1073:100;;;;;-1:-1:-1;;;1073:100:16;;;;;;;;;;;;-1:-1:-1;;;1073:100:16;;;;;;;;;;;;;;;1183:41;1203:9;1214:2;1218:5;1183:19;:41::i;3218:130:20:-;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;2304:459::-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:20;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:176;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:20;;;;;;;;;;;;;;;;;;;;;;;;;;;717:516:17;807:4;;823:382;847:37;843:1;:41;823:382;;;954:1;909:30;940:1;909:33;;;;;;;;;-1:-1:-1;;;;;909:33:17;:47;905:290;;976:27;1020:30;1051:1;1020:33;;;;;;;;;1084:30;;;-1:-1:-1;;;1084:30:17;;-1:-1:-1;;;;;1084:30:17;;;;;;;;;1020:33;;;;-1:-1:-1;1076:51:17;;;;1020:33;;1084:21;;:30;;;;;;;;;;;;;;1020:33;1084:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1084:30:17;-1:-1:-1;;;;;1076:51:17;;1072:109;;;1158:4;1151:11;;;;;;1072:109;905:290;;886:3;;823:382;;;-1:-1:-1;1221:5:17;;717:516;-1:-1:-1;;;717:516:17:o;1302:1013:8:-;1398:18;1419:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1419:30:8;;;;:19;;:30;;;;;:38;:49;;1462:5;1419:42;:49::i;:::-;1483:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1483:30:8;;;;:19;;:30;;;;;:38;1398:70;;-1:-1:-1;1479:768:8;;1548:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1548:30:8;;;;:19;;:30;;;;;:39;;;;;;;;1543:232;;-1:-1:-1;;;;;1607:17:8;;;;;;:6;:17;;;;;;;;:24;;;;:33;;;;;;;;;;;;;;;;;;1658:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1658:38:8;;;;;1714:30;;;:19;;;;:30;;;;;:39;:46;;-1:-1:-1;;1714:46:8;1658:38;1714:46;;;1543:232;1789:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1789:30:8;;;;:19;;:30;;;;;1831:15;1789:39;;;;:57;1479:768;;;1957:20;2000:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2000:30:8;;;;:19;;:30;;;;;:39;;;1980:60;;:15;;:19;:60::i;:::-;2054:19;2077:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2077:30:8;;;;:19;;:30;;;;;:38;1957:83;;-1:-1:-1;2054:19:8;2076:74;;2139:10;;2077:56;;1957:83;2077:42;:56::i;2076:74::-;2165:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2165:30:8;;;;:19;;:30;;;;;2207:15;:29;;;;2165:39;;;;:71;-1:-1:-1;;1479:768:8;2257:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2257:30:8;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;1302:1013:8:o;3969:338:20:-;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:20:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport './Maintenable.sol';\n\ncontract Privatizable is Maintenable {\n\n\n    /****************************\n    EXTERNAL FUNCTIONS\n    *****************************/\n\n\n    /**\n     * @dev Function to approve holder for a private token.\n     * @param id the token id\n     * @param holder The authorized address\n     */\n    function approveHolder(uint256 id, address holder) external onlyMaintener(id) {\n        _tokens[id].holders[holder].isApproved = true;\n    }\n\n\n    /**\n     * @dev Function to revoke holder for a private token.\n     * @param id the token id\n     * @param holder The authorized address\n     */\n    function revokeHolder(uint256 id, address holder) external onlyMaintener(id) {\n        _tokens[id].holders[holder].isApproved = false;\n    }\n\n\n    /****************************\n    INTERNAL FUNCTIONS\n    *****************************/\n\n\n    // override ChargeableTransfer._addToBalance()\n    function _addToBalance(address recipient, uint256 id, uint256 value) internal override {\n        require(!_tokens[id].isPrivate || _tokens[id].holders[recipient].isApproved, \"Address not approved\");\n        super._addToBalance(recipient, id, value);\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
    "exportedSymbols": {
      "Privatizable": [
        3356
      ]
    },
    "id": 3357,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3272,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:16"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
        "file": "./Maintenable.sol",
        "id": 3273,
        "nodeType": "ImportDirective",
        "scope": 3357,
        "sourceUnit": 2188,
        "src": "70:27:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3274,
              "name": "Maintenable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2187,
              "src": "124:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Maintenable_$2187",
                "typeString": "contract Maintenable"
              }
            },
            "id": 3275,
            "nodeType": "InheritanceSpecifier",
            "src": "124:11:16"
          }
        ],
        "contractDependencies": [
          155,
          167,
          217,
          240,
          269,
          1588,
          1714,
          1798,
          2187,
          2708,
          3172,
          3270,
          3466,
          4121
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3356,
        "linearizedBaseContracts": [
          3356,
          2187,
          2708,
          3172,
          3466,
          3270,
          1588,
          1798,
          1714,
          269,
          240,
          4121,
          167,
          155,
          217
        ],
        "name": "Privatizable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3296,
              "nodeType": "Block",
              "src": "466:62:16",
              "statements": [
                {
                  "expression": {
                    "id": 3294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3286,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "476:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1667_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 3288,
                            "indexExpression": {
                              "id": 3287,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3278,
                              "src": "484:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "476:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1667_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 3289,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1652,
                          "src": "476:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1630_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 3291,
                        "indexExpression": {
                          "id": 3290,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3280,
                          "src": "496:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "476:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1630_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 3292,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1629,
                      "src": "476:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "476:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3295,
                  "nodeType": "ExpressionStatement",
                  "src": "476:45:16"
                }
              ]
            },
            "documentation": {
              "id": 3276,
              "nodeType": "StructuredDocumentation",
              "src": "238:145:16",
              "text": " @dev Function to approve holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "5dd2b9a6",
            "id": 3297,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3283,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3278,
                    "src": "462:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3284,
                "modifierName": {
                  "id": 3282,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2053,
                  "src": "448:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "448:17:16"
              }
            ],
            "name": "approveHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3278,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3297,
                  "src": "411:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3280,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3297,
                  "src": "423:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:28:16"
            },
            "returnParameters": {
              "id": 3285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:16"
            },
            "scope": 3356,
            "src": "388:140:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3318,
              "nodeType": "Block",
              "src": "761:63:16",
              "statements": [
                {
                  "expression": {
                    "id": 3316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3308,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "771:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1667_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 3310,
                            "indexExpression": {
                              "id": 3309,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3300,
                              "src": "779:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "771:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1667_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 3311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1652,
                          "src": "771:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1630_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 3313,
                        "indexExpression": {
                          "id": 3312,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3302,
                          "src": "791:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "771:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1630_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 3314,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1629,
                      "src": "771:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "771:46:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3317,
                  "nodeType": "ExpressionStatement",
                  "src": "771:46:16"
                }
              ]
            },
            "documentation": {
              "id": 3298,
              "nodeType": "StructuredDocumentation",
              "src": "535:144:16",
              "text": " @dev Function to revoke holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "759c5214",
            "id": 3319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3305,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3300,
                    "src": "757:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3306,
                "modifierName": {
                  "id": 3304,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2053,
                  "src": "743:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "743:17:16"
              }
            ],
            "name": "revokeHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3300,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3319,
                  "src": "706:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3302,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3319,
                  "src": "718:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:28:16"
            },
            "returnParameters": {
              "id": 3307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:16"
            },
            "scope": 3356,
            "src": "684:140:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1152
            ],
            "body": {
              "id": 3354,
              "nodeType": "Block",
              "src": "1063:168:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1081:22:16",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3330,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1709,
                                "src": "1082:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1667_storage_$",
                                  "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                                }
                              },
                              "id": 3332,
                              "indexExpression": {
                                "id": 3331,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3323,
                                "src": "1090:2:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1082:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1667_storage",
                                "typeString": "struct Data.Token storage ref"
                              }
                            },
                            "id": 3333,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isPrivate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1646,
                            "src": "1082:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3335,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "1107:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1667_storage_$",
                                    "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                                  }
                                },
                                "id": 3337,
                                "indexExpression": {
                                  "id": 3336,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3323,
                                  "src": "1115:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1107:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$1667_storage",
                                  "typeString": "struct Data.Token storage ref"
                                }
                              },
                              "id": 3338,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1652,
                              "src": "1107:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1630_storage_$",
                                "typeString": "mapping(address => struct Data.Holder storage ref)"
                              }
                            },
                            "id": 3340,
                            "indexExpression": {
                              "id": 3339,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3321,
                              "src": "1127:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1107:30:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1630_storage",
                              "typeString": "struct Data.Holder storage ref"
                            }
                          },
                          "id": 3341,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1629,
                          "src": "1107:41:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1081:67:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420617070726f766564",
                        "id": 3343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1150:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        },
                        "value": "Address not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        }
                      ],
                      "id": 3329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1073:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3345,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:100:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3349,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3321,
                        "src": "1203:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3350,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3323,
                        "src": "1214:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3351,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3325,
                        "src": "1218:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3346,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1183:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Privatizable_$3356",
                          "typeString": "contract super Privatizable"
                        }
                      },
                      "id": 3348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "1183:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3353,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:41:16"
                }
              ]
            },
            "id": 3355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addToBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1054:8:16"
            },
            "parameters": {
              "id": 3326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3321,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "999:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3323,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1018:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3325,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1030:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:46:16"
            },
            "returnParameters": {
              "id": 3328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:16"
            },
            "scope": 3356,
            "src": "976:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3357,
        "src": "99:1135:16"
      }
    ],
    "src": "45:1190:16"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
    "exportedSymbols": {
      "Privatizable": [
        3356
      ]
    },
    "id": 3357,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3272,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:16"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
        "file": "./Maintenable.sol",
        "id": 3273,
        "nodeType": "ImportDirective",
        "scope": 3357,
        "sourceUnit": 2188,
        "src": "70:27:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3274,
              "name": "Maintenable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2187,
              "src": "124:11:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Maintenable_$2187",
                "typeString": "contract Maintenable"
              }
            },
            "id": 3275,
            "nodeType": "InheritanceSpecifier",
            "src": "124:11:16"
          }
        ],
        "contractDependencies": [
          155,
          167,
          217,
          240,
          269,
          1588,
          1714,
          1798,
          2187,
          2708,
          3172,
          3270,
          3466,
          4121
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3356,
        "linearizedBaseContracts": [
          3356,
          2187,
          2708,
          3172,
          3466,
          3270,
          1588,
          1798,
          1714,
          269,
          240,
          4121,
          167,
          155,
          217
        ],
        "name": "Privatizable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3296,
              "nodeType": "Block",
              "src": "466:62:16",
              "statements": [
                {
                  "expression": {
                    "id": 3294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3286,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "476:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1667_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 3288,
                            "indexExpression": {
                              "id": 3287,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3278,
                              "src": "484:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "476:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1667_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 3289,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1652,
                          "src": "476:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1630_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 3291,
                        "indexExpression": {
                          "id": 3290,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3280,
                          "src": "496:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "476:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1630_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 3292,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1629,
                      "src": "476:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:4:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "476:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3295,
                  "nodeType": "ExpressionStatement",
                  "src": "476:45:16"
                }
              ]
            },
            "documentation": {
              "id": 3276,
              "nodeType": "StructuredDocumentation",
              "src": "238:145:16",
              "text": " @dev Function to approve holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "5dd2b9a6",
            "id": 3297,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3283,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3278,
                    "src": "462:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3284,
                "modifierName": {
                  "id": 3282,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2053,
                  "src": "448:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "448:17:16"
              }
            ],
            "name": "approveHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3278,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3297,
                  "src": "411:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3280,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3297,
                  "src": "423:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:28:16"
            },
            "returnParameters": {
              "id": 3285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:16"
            },
            "scope": 3356,
            "src": "388:140:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3318,
              "nodeType": "Block",
              "src": "761:63:16",
              "statements": [
                {
                  "expression": {
                    "id": 3316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3308,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "771:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1667_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 3310,
                            "indexExpression": {
                              "id": 3309,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3300,
                              "src": "779:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "771:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1667_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 3311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1652,
                          "src": "771:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1630_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 3313,
                        "indexExpression": {
                          "id": 3312,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3302,
                          "src": "791:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "771:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1630_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 3314,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1629,
                      "src": "771:38:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "771:46:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3317,
                  "nodeType": "ExpressionStatement",
                  "src": "771:46:16"
                }
              ]
            },
            "documentation": {
              "id": 3298,
              "nodeType": "StructuredDocumentation",
              "src": "535:144:16",
              "text": " @dev Function to revoke holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "759c5214",
            "id": 3319,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3305,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3300,
                    "src": "757:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3306,
                "modifierName": {
                  "id": 3304,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2053,
                  "src": "743:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "743:17:16"
              }
            ],
            "name": "revokeHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3300,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3319,
                  "src": "706:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3302,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3319,
                  "src": "718:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:28:16"
            },
            "returnParameters": {
              "id": 3307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:16"
            },
            "scope": 3356,
            "src": "684:140:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1152
            ],
            "body": {
              "id": 3354,
              "nodeType": "Block",
              "src": "1063:168:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1081:22:16",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3330,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1709,
                                "src": "1082:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1667_storage_$",
                                  "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                                }
                              },
                              "id": 3332,
                              "indexExpression": {
                                "id": 3331,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3323,
                                "src": "1090:2:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1082:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$1667_storage",
                                "typeString": "struct Data.Token storage ref"
                              }
                            },
                            "id": 3333,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isPrivate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1646,
                            "src": "1082:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3335,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "1107:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1667_storage_$",
                                    "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                                  }
                                },
                                "id": 3337,
                                "indexExpression": {
                                  "id": 3336,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3323,
                                  "src": "1115:2:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1107:11:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$1667_storage",
                                  "typeString": "struct Data.Token storage ref"
                                }
                              },
                              "id": 3338,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1652,
                              "src": "1107:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1630_storage_$",
                                "typeString": "mapping(address => struct Data.Holder storage ref)"
                              }
                            },
                            "id": 3340,
                            "indexExpression": {
                              "id": 3339,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3321,
                              "src": "1127:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1107:30:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1630_storage",
                              "typeString": "struct Data.Holder storage ref"
                            }
                          },
                          "id": 3341,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1629,
                          "src": "1107:41:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1081:67:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420617070726f766564",
                        "id": 3343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1150:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        },
                        "value": "Address not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        }
                      ],
                      "id": 3329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1073:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:100:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3345,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:100:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3349,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3321,
                        "src": "1203:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3350,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3323,
                        "src": "1214:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3351,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3325,
                        "src": "1218:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3346,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1183:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Privatizable_$3356",
                          "typeString": "contract super Privatizable"
                        }
                      },
                      "id": 3348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "1183:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3353,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:41:16"
                }
              ]
            },
            "id": 3355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addToBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1054:8:16"
            },
            "parameters": {
              "id": 3326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3321,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "999:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3323,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1018:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3325,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1030:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:46:16"
            },
            "returnParameters": {
              "id": 3328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:16"
            },
            "scope": 3356,
            "src": "976:255:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3357,
        "src": "99:1135:16"
      }
    ],
    "src": "45:1190:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-22T09:44:00.963Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approveHolder(uint256,address)": {
        "details": "Function to approve holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "averageAge(address,uint256)": {
        "details": "Function to get the average age of the token for the given address.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID"
        },
        "returns": {
          "_0": "average age in seconds"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "revokeHolder(uint256,address)": {
        "details": "Function to revoke holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        },
        "returns": {
          "_0": "transfer price"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to update a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be updated",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "uri(uint256)": {
        "params": {
          "id": "Token ID"
        },
        "returns": {
          "_0": "URI string"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "isTrustedForwarder(address)": {
        "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}