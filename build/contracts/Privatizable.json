{
  "contractName": "Privatizable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "averageAge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "approveHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "revokeHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"approveHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"averageAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"revokeHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approveHolder(uint256,address)\":{\"details\":\"Function to approve holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"averageAge(address,uint256)\":{\"details\":\"Function to get the average age of the token for the given address.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\"},\"returns\":{\"_0\":\"average age in seconds\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"revokeHolder(uint256,address)\":{\"details\":\"Function to revoke holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"},\"returns\":{\"_0\":\"transfer price\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to update a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be updated\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":\"Privatizable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0x372dcc5b4887c0aa8feb6cd17e7fb66fcad22dced7aac3837625a42f91153e38\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d0ffddca0ef536a40e97686f3a3d1e37358c24c0aa3ea36f3ef4e56b0d94b3c6\",\"dweb:/ipfs/QmQLWyqVhrb9b1sawafjQ3xHE7ZsPzUGk1d4DCEvGE26tv\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ERC1155.sol\":{\"keccak256\":\"0xfe1d170a333d04f58fc4eca8acf200ea2f82b05013d88d9649c4d38b23bd5a61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0422e00699801c6c1ef14cc10825d676f29a957905aa5e3fbecfa57fd66e06c3\",\"dweb:/ipfs/QmVt5uDMPSEbCpRZ4wY7XTbtcB1HuuvQyA35UYJ4c6z1aN\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x89f566b2b45db160adbfb2fe8da9a65f2385cbbcf904f03c199dbc3d625c03fd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://261c4652ae1ca909a88839c2455653b486aae8cc248a2b4da6aa0f301d2fb398\",\"dweb:/ipfs/QmfRj76anEn31QfmBFAJmEEdx5YRa2ZWPY714ehNXe4pmD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0x4d612c86404655accc4cc5b718bdd3de1bd0a5cca37de80e1da9abae99c99ae7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a9c117e797c48721addb3996a94e9346388a011ba3d4c08f38918192027c0946\",\"dweb:/ipfs/QmZAFQrxzzardakgXzm6LBmRcCBtKeyXL8iZmpoV4MhsH3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0x8ef51f6bbfa3946cba8e32247da6e71bb27a5e8eac54ec1514534c3b8a699dcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://992aa29af51e7c31371068bf212629fcf121a65d3f331c1406ced06576490761\",\"dweb:/ipfs/QmZbtTucQZsK5CHQ56xggw1NMSrzyxpx5xzBQRS8dzAT5M\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":{\"keccak256\":\"0xd8b068c736d1b5ef364d6f73d6fef3788034d3250fb3cd9e8d44d099aaca7b52\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fae9426d967287250027a3fb45c6499614b3365ee98debed327affa09d254d08\",\"dweb:/ipfs/Qmf8ap2iGa8UK7wSzMTxMM2tp4MaTpm5WXZCwS41Uj9ZCg\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0x6e349cd9263193acda067d4b2fe7cebd1a0d169c7b4ab1fb38a664ecdb60065f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5eed5b309c557a2a496a87659ccbae4561ee0121326b30df10ea881fd71872bc\",\"dweb:/ipfs/QmeJRw3fSUAYb9roQpSh7KzpRwTpPcdW8bobg5qpFofFjF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/StashBloxData.sol\":{\"keccak256\":\"0xe12c7c7b2ea0c3bea220d9e096e98460086264205e80b768a59d01edcf61cb2b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6448e0483991290a1cf811bcf260869678fe69d47b357f491f2d7a60f357d5d5\",\"dweb:/ipfs/QmXjfaZ9amveMkoCkFpFKoqyJfzrCRNqUZun9uZYxbQeNq\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200001d3362000023565b620000e0565b6001600160a01b03811662000084576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806200382f6026913960400191505060405180910390fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b61373f80620000f06000396000f3fe60806040526004361061019b5760003560e01c80637627b732116100ec578063d1660e181161008a578063ed70554d11610064578063ed70554d14610cba578063f242432a14610d38578063f2fde38b14610dcb578063f8a5a07c14610dfe5761019b565b8063d1660e1814610c07578063d41d0aa314610c46578063e985e9c514610c7f5761019b565b80638da5cb5b116100c65780638da5cb5b146109cb578063a22cb465146109fc578063c02f303c14610a37578063c40b87ae14610a6a5761019b565b80637627b7321461092c5780638870147b1461095f5780638aeba37e146109925761019b565b80634392e57711610159578063585941d511610133578063585941d5146108485780635dafec1b146108815780635dd2b9a6146108ba578063759c5214146108f35761019b565b80634392e577146104e55780634ab0d253146105465780634e1273f4146106c85761019b565b8062fdd58e146101a057806301ffc9a7146101eb5780632eb2c2d6146102335780632ed42bf71461035c5780633cacd7d614610400578063414ed0ce14610453575b600080fd5b3480156101ac57600080fd5b506101d9600480360360408110156101c357600080fd5b506001600160a01b038135169060200135610f35565b60408051918252519081900360200190f35b3480156101f757600080fd5b5061021f6004803603602081101561020e57600080fd5b50356001600160e01b031916610faa565b604080519115158252519081900360200190f35b61035a600480360360a081101561024957600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561027c57600080fd5b82018360208201111561028e57600080fd5b803590602001918460208302840111600160201b831117156102af57600080fd5b919390929091602081019035600160201b8111156102cc57600080fd5b8201836020820111156102de57600080fd5b803590602001918460208302840111600160201b831117156102ff57600080fd5b919390929091602081019035600160201b81111561031c57600080fd5b82018360208201111561032e57600080fd5b803590602001918460018302840111600160201b8311171561034f57600080fd5b509092509050610ff1565b005b34801561036857600080fd5b5061037161129f565b6040518084815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b838110156103c35781810151838201526020016103ab565b50505050905090810190601f1680156103f05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561040c57600080fd5b506104336004803603602081101561042357600080fd5b50356001600160a01b0316611344565b604080519315158452911515602084015282820152519081900360600190f35b34801561045f57600080fd5b5061047d6004803603602081101561047657600080fd5b503561136a565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b3480156104f157600080fd5b5061035a600480360361014081101561050957600080fd5b81019080806101400190600a806020026040519081016040528092919082600a602002808284376000920191909152509194506113dd9350505050565b34801561055257600080fd5b5061035a600480360361014081101561056a57600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b8111156105bf57600080fd5b8201836020820111156105d157600080fd5b803590602001918460208302840111600160201b831117156105f257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561064157600080fd5b82018360208201111561065357600080fd5b803590602001918460208302840111600160201b8311171561067457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611435565b3480156106d457600080fd5b506107f8600480360360408110156106eb57600080fd5b810190602081018135600160201b81111561070557600080fd5b82018360208201111561071757600080fd5b803590602001918460208302840111600160201b8311171561073857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561078757600080fd5b82018360208201111561079957600080fd5b803590602001918460208302840111600160201b831117156107ba57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061152c945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561083457818101518382015260200161081c565b505050509050019250505060405180910390f35b34801561085457600080fd5b506101d96004803603604081101561086b57600080fd5b506001600160a01b0381351690602001356116b0565b34801561088d57600080fd5b5061021f600480360360408110156108a457600080fd5b50803590602001356001600160a01b03166116eb565b3480156108c657600080fd5b5061035a600480360360408110156108dd57600080fd5b50803590602001356001600160a01b03166116f7565b3480156108ff57600080fd5b5061035a6004803603604081101561091657600080fd5b50803590602001356001600160a01b0316611789565b34801561093857600080fd5b5061035a6004803603602081101561094f57600080fd5b50356001600160a01b0316611816565b34801561096b57600080fd5b5061035a6004803603602081101561098257600080fd5b50356001600160a01b0316611881565b34801561099e57600080fd5b5061035a600480360360408110156109b557600080fd5b50803590602001356001600160a01b03166118e9565b3480156109d757600080fd5b506109e0611967565b604080516001600160a01b039092168252519081900360200190f35b348015610a0857600080fd5b5061035a60048036036040811015610a1f57600080fd5b506001600160a01b0381351690602001351515611976565b348015610a4357600080fd5b5061021f60048036036020811015610a5a57600080fd5b50356001600160a01b0316611a30565b348015610a7657600080fd5b5061035a60048036036101a0811015610a8e57600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610afe57600080fd5b820183602082011115610b1057600080fd5b803590602001918460208302840111600160201b83111715610b3157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610b8057600080fd5b820183602082011115610b9257600080fd5b803590602001918460208302840111600160201b83111715610bb357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611a3b565b348015610c1357600080fd5b506101d960048036036060811015610c2a57600080fd5b506001600160a01b038135169060208101359060400135611afa565b348015610c5257600080fd5b5061035a60048036036040811015610c6957600080fd5b50803590602001356001600160a01b0316611b0f565b348015610c8b57600080fd5b5061021f60048036036040811015610ca257600080fd5b506001600160a01b0381358116916020013516611b8a565b348015610cc657600080fd5b50610ce460048036036020811015610cdd57600080fd5b5035611b96565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b61035a600480360360a0811015610d4e57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610d8d57600080fd5b820183602082011115610d9f57600080fd5b803590602001918460018302840111600160201b83111715610dc057600080fd5b509092509050611bf2565b348015610dd757600080fd5b5061035a60048036036020811015610dee57600080fd5b50356001600160a01b0316611d49565b348015610e0a57600080fd5b5061035a60048036036060811015610e2157600080fd5b81359190810190604081016020820135600160201b811115610e4257600080fd5b820183602082011115610e5457600080fd5b803590602001918460208302840111600160201b83111715610e7557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610ec457600080fd5b820183602082011115610ed657600080fd5b803590602001918460208302840111600160201b83111715610ef757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d9c945050505050565b60006001600160a01b038316610f7c5760405162461bcd60e51b815260040180806020018281038252602b8152602001806134f4602b913960400191505060405180910390fd5b506000818152600e602090815260408083206001600160a01b03861684526007019091529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b1480610fdb57506001600160e01b03198216636cdb3d1360e11b145b15610fe857506001610fec565b5060005b919050565b84831461102f5760405162461bcd60e51b815260040180806020018281038252602e8152602001806136ab602e913960400191505060405180910390fd5b6001600160a01b0387166110745760405162461bcd60e51b81526004018080602001828103825260288152602001806135456028913960400191505060405180910390fd5b6001600160a01b03881633148061109657506110908833611b8a565b15156001145b6110d15760405162461bcd60e51b81526004018080602001828103825260378152602001806136746037913960400191505060405180910390fd5b611140888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092019190915250611f3f92505050565b866001600160a01b0316886001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a461129533898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a9150899081908401838280828437600092019190915250611ff992505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152939493929183018282801561132b5780601f106113005761010080835404028352916020019161132b565b820191906000526020600020905b81548152906001019060200180831161130e57829003601f168201915b505050600c90930154919250506001600160a01b031683565b600d602052600090815260409020805460019091015460ff808316926101009004169083565b600f6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b6113e56121ea565b611424576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b611431600282600a61339f565b5050565b8761144081336121fb565b61148b576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000898152600e60205260409020546114db576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b6114eb8989898989898989612235565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b6060815183511461156e5760405162461bcd60e51b81526004018080602001828103825260308152602001806135996030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561158857600080fd5b506040519080825280602002602001820160405280156115b2578160200160208202803683370190505b50905060005b84518110156116a85760006001600160a01b03168582815181106115d857fe5b60200260200101516001600160a01b031614156116265760405162461bcd60e51b81526004018080602001828103825260348152602001806135ff6034913960400191505060405180910390fd5b600e600085838151811061163657fe5b60200260200101518152602001908152602001600020600701600086838151811061165d57fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061169557fe5b60209081029190910101526001016115b8565b509392505050565b6000818152600e602090815260408083206001600160a01b03861684526007019091528120600101546116e49042906123d9565b9392505050565b60006116e483836121fb565b8161170281336121fb565b61174d576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b506000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805462ff0000191662010000179055565b8161179481336121fb565b6117df576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b506000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805462ff000019169055565b61181e6121ea565b61185d576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b6118896121ea565b6118c8576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b6118f16121ea565b611930576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600c546001600160a01b031690565b336001600160a01b03831614156119be5760405162461bcd60e51b815260040180806020018281038252602c81526020018061356d602c913960400191505060405180910390fd5b336000818152600d602090815260408083206001600160a01b0387168085526003909101835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610fa48261241b565b611a443361241b565b611a8f576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b611aa28b8b8b8b8b8b8b8b8b8b8b612445565b604080518b8152602081018b905281516001600160a01b038e169260009233927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62929181900390910190a45050505050505050505050565b6000611b078484846125ae565b949350505050565b611b176121ea565b611b56576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b60006116e48383612796565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516611c375760405162461bcd60e51b81526004018080602001828103825260288152602001806135456028913960400191505060405180910390fd5b6001600160a01b038616331480611c595750611c538633611b8a565b15156001145b611c945760405162461bcd60e51b81526004018080602001828103825260378152602001806136746037913960400191505060405180910390fd5b611ca0868686866127db565b846001600160a01b0316866001600160a01b0316336001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611d41338787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061285392505050565b505050505050565b611d516121ea565b611d90576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b611d99816129c8565b50565b611da53361241b565b611df0576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000838152600e602052604090205415801590611e0e575080518251145b611e53576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015611f3957611e9084848381518110611e6f57fe5b6020026020010151848481518110611e8357fe5b6020026020010151612a69565b6000848152600e602052604081206008018054909190611eac57fe5b600091825260208220015484516001600160a01b03909116919033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290879086908110611ef657fe5b6020026020010151600e60008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a4600101611e56565b50505050565b6000803411611f69576001600160a01b0385166000908152600d6020526040902060010154611f6b565b345b905060005b8351811015611fe757611fdd611fae8787878581518110611f8d57fe5b6020026020010151878681518110611fa157fe5b6020026020010151612c0b565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152849190612d68565b9150600101611f70565b50611ff28582612dff565b5050505050565b61200b846001600160a01b0316612e80565b15611d415763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156120ab578181015183820152602001612093565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156120ea5781810151838201526020016120d2565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561212657818101518382015260200161210e565b50505050905090810190601f1680156121535780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561217857600080fd5b505af115801561218c573d6000803e3d6000fd5b505050506040513d60208110156121a257600080fd5b50516001600160e01b03191614611d415760405162461bcd60e51b81526004018080602001828103825260368152602001806135c96036913960400191505060405180910390fd5b600c546001600160a01b0316331490565b6000828152600e602090815260408083206001600160a01b038516845260070190915281206002015460ff16806116e457506116e46121ea565b6000805b85518110156122655785818151811061224e57fe5b602002602001015182019150806001019050612239565b5060008651118015612275575060015b8015612282575080612710145b801561228f575061271084105b6122d4576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600e60209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b9091018054600181018255908552929093206123349392830201916133f7565b506000898152600e60209081526040909120875161235a92600990920191890190613431565b506000898152600e60209081526040909120865161238092600a90920191880190613485565b50506000978852600e602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b60006116e483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d68565b6001600160a01b0381166000908152600d602052604081205460ff1680610fa45750610fa46121ea565b60008a8152600e60205260409020541580156124615750600089115b6124a6576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b88600e60008c81526020019081526020016000206000018190555087600e60008c8152602001908152602001600020600101819055506001600e60008c81526020019081526020016000206007016000336001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600e60008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506125968a88888888888888612235565b6125a18b8b8b612eb7565b5050505050505050505050565b6000828152600e60205260408120600b015481904290600019015b6000868152600e60205260408120600b018054839081106125e657fe5b60009182526020822060029091020101546000888152600e60205260408120600b01805492935090918490811061261957fe5b906000526020600020906002020160016002811061263357fe5b01546000898152600e602090815260408083206001600160a01b038e1684526007019091528120600101549192509083116126d6576000898152600e602090815260408083206001600160a01b038e1684526007019091529020600101546126ab9062015180906126a59088906123d9565b90612f60565b9050806126b6575060015b6126ca886126c48385612fa2565b90612fa2565b86019550505050612715565b6126e7620151806126a587866123d9565b9050806126f2575060015b9193508391612705886126c48385612fa2565b90950194505050600019016125c9565b506000858152600e6020526040902060010154612736908390600a0a612f60565b6000868152600e602052604081206003015491935090612761906305f5e100906126a5908890612fa2565b6000878152600e602052604090206002015490915061278b906127849083612ffb565b8490612ffb565b979650505050505050565b60006127a28383613055565b806116e45750506001600160a01b039182166000908152600d602090815260408083209390941682526003909201909152205460ff1690565b6000803411612805576001600160a01b0385166000908152600d6020526040902060010154612807565b345b905061284761281886868686612c0b565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152839190612d68565b9050611ff28582612dff565b612865846001600160a01b0316612e80565b15611d415763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156129065781810151838201526020016128ee565b50505050905090810190601f1680156129335780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561295657600080fd5b505af115801561296a573d6000803e3d6000fd5b505050506040513d602081101561298057600080fd5b50516001600160e01b03191614611d415760405162461bcd60e51b81526004018080602001828103825260318152602001806136d96031913960400191505060405180910390fd5b6001600160a01b038116612a0d5760405162461bcd60e51b815260040180806020018281038252602681526020018061351f6026913960400191505060405180910390fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000838152600e602052604081206008018054612c069290612a8757fe5b6000918252602080832090910154868352600e8083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a949093908401929190612af157fe5b9060005260206000209060020201600160028110612b0b57fe5b0154905260008a8152600e602090815260409182902060090180548351818402810184019094528084529091830182828015612b7057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612b52575b50505060008d8152600e6020908152604091829020600a0180548351818402810184019094528084529294509250830182828015612bcd57602002820191906000526020600020905b815481526020019060010190808311612bb9575b50505060008e8152600e60205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b0316612445565b505050565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152600e82528381206001600160a01b038916825260070190915291822054612c66918490612d68565b6000848152600e602090815260408083206001600160a01b038a168452600701909152902055612c97848484612eb7565b612ca28584846125ae565b905060005b6000848152600e6020526040902060090154811015612d5f576000848152600e60205260408120600901805483908110612cdd57fe5b6000918252602080832090910154878352600e90915260408220600a0180546001600160a01b0390921693509084908110612d1457fe5b6000918252602090912001549050612d326127106126a58684612fa2565b6001600160a01b039092166000908152600d60205260409020600190810180549093019092555001612ca7565b50949350505050565b60008184841115612df75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612dbc578181015183820152602001612da4565b50505050905090810190601f168015612de95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600034118015612e0f5750600081115b15612e5b576001600160a01b0382166000908152600d6020526040902060010154612e3a9082612ffb565b6001600160a01b0383166000908152600d6020526040902060010155611431565b34611431576001600160a01b03919091166000908152600d6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611b075750141592915050565b6000828152600e6020526040902060060154600160a01b900460ff161580612f0d57506000828152600e602090815260408083206001600160a01b038716845260070190915290206002015462010000900460ff165b612f55576040805162461bcd60e51b81526020600482015260146024820152731059191c995cdcc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b612c0683838361313c565b60006116e483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061333a565b600082612fb157506000610fa4565b82820282848281612fbe57fe5b04146116e45760405162461bcd60e51b81526004018080602001828103825260218152602001806136336021913960400191505060405180910390fd5b6000828201838110156116e4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000805b600a811015613132576000600282600a811061307157fe5b01546001600160a01b03161461312a576000600282600a811061309057fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b1580156130e257600080fd5b505afa1580156130f6573d6000803e3d6000fd5b505050506040513d602081101561310c57600080fd5b50516001600160a01b0316141561312857600192505050610fa4565b505b600101613059565b5060009392505050565b6000828152600e602090815260408083206001600160a01b038716845260070190915281205461316c9083612ffb565b6000848152600e602090815260408083206001600160a01b0389168452600701909152902054909150613269576000838152600e602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16613238576001600160a01b0384166000818152600d6020908152604080832060020180546001818101835591855283852001889055878452600e83529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b6000838152600e602090815260408083206001600160a01b038816845260070190915290204260019091015561330a565b6000838152600e602090815260408083206001600160a01b038816845260070190915281206001015461329d9042906123d9565b6000858152600e602090815260408083206001600160a01b038a168452600701909152812054919250906132d79084906126a59085612fa2565b6000868152600e602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b6000928352600e602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b600081836133895760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612dbc578181015183820152602001612da4565b50600083858161339557fe5b0495945050505050565b82600a81019282156133e7579160200282015b828111156133e757825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906133b2565b506133f39291506134bf565b5090565b8260028101928215613425579160200282015b8281111561342557825182559160200191906001019061340a565b506133f39291506134de565b8280548282559060005260206000209081019282156133e757916020028201828111156133e757825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906133b2565b828054828255906000526020600020908101928215613425579160200282018281111561342557825182559160200191906001019061340a565b5b808211156133f35780546001600160a01b03191681556001016134c0565b5b808211156133f357600081556001016134df56fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a2646970667358221220c78e20b2589b09a9b47d6438822ea8e2e99785d0967430473e54c1908765679764736f6c634300070100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x60806040526004361061019b5760003560e01c80637627b732116100ec578063d1660e181161008a578063ed70554d11610064578063ed70554d14610cba578063f242432a14610d38578063f2fde38b14610dcb578063f8a5a07c14610dfe5761019b565b8063d1660e1814610c07578063d41d0aa314610c46578063e985e9c514610c7f5761019b565b80638da5cb5b116100c65780638da5cb5b146109cb578063a22cb465146109fc578063c02f303c14610a37578063c40b87ae14610a6a5761019b565b80637627b7321461092c5780638870147b1461095f5780638aeba37e146109925761019b565b80634392e57711610159578063585941d511610133578063585941d5146108485780635dafec1b146108815780635dd2b9a6146108ba578063759c5214146108f35761019b565b80634392e577146104e55780634ab0d253146105465780634e1273f4146106c85761019b565b8062fdd58e146101a057806301ffc9a7146101eb5780632eb2c2d6146102335780632ed42bf71461035c5780633cacd7d614610400578063414ed0ce14610453575b600080fd5b3480156101ac57600080fd5b506101d9600480360360408110156101c357600080fd5b506001600160a01b038135169060200135610f35565b60408051918252519081900360200190f35b3480156101f757600080fd5b5061021f6004803603602081101561020e57600080fd5b50356001600160e01b031916610faa565b604080519115158252519081900360200190f35b61035a600480360360a081101561024957600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561027c57600080fd5b82018360208201111561028e57600080fd5b803590602001918460208302840111600160201b831117156102af57600080fd5b919390929091602081019035600160201b8111156102cc57600080fd5b8201836020820111156102de57600080fd5b803590602001918460208302840111600160201b831117156102ff57600080fd5b919390929091602081019035600160201b81111561031c57600080fd5b82018360208201111561032e57600080fd5b803590602001918460018302840111600160201b8311171561034f57600080fd5b509092509050610ff1565b005b34801561036857600080fd5b5061037161129f565b6040518084815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b838110156103c35781810151838201526020016103ab565b50505050905090810190601f1680156103f05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561040c57600080fd5b506104336004803603602081101561042357600080fd5b50356001600160a01b0316611344565b604080519315158452911515602084015282820152519081900360600190f35b34801561045f57600080fd5b5061047d6004803603602081101561047657600080fd5b503561136a565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b3480156104f157600080fd5b5061035a600480360361014081101561050957600080fd5b81019080806101400190600a806020026040519081016040528092919082600a602002808284376000920191909152509194506113dd9350505050565b34801561055257600080fd5b5061035a600480360361014081101561056a57600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b8111156105bf57600080fd5b8201836020820111156105d157600080fd5b803590602001918460208302840111600160201b831117156105f257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561064157600080fd5b82018360208201111561065357600080fd5b803590602001918460208302840111600160201b8311171561067457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611435565b3480156106d457600080fd5b506107f8600480360360408110156106eb57600080fd5b810190602081018135600160201b81111561070557600080fd5b82018360208201111561071757600080fd5b803590602001918460208302840111600160201b8311171561073857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561078757600080fd5b82018360208201111561079957600080fd5b803590602001918460208302840111600160201b831117156107ba57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061152c945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561083457818101518382015260200161081c565b505050509050019250505060405180910390f35b34801561085457600080fd5b506101d96004803603604081101561086b57600080fd5b506001600160a01b0381351690602001356116b0565b34801561088d57600080fd5b5061021f600480360360408110156108a457600080fd5b50803590602001356001600160a01b03166116eb565b3480156108c657600080fd5b5061035a600480360360408110156108dd57600080fd5b50803590602001356001600160a01b03166116f7565b3480156108ff57600080fd5b5061035a6004803603604081101561091657600080fd5b50803590602001356001600160a01b0316611789565b34801561093857600080fd5b5061035a6004803603602081101561094f57600080fd5b50356001600160a01b0316611816565b34801561096b57600080fd5b5061035a6004803603602081101561098257600080fd5b50356001600160a01b0316611881565b34801561099e57600080fd5b5061035a600480360360408110156109b557600080fd5b50803590602001356001600160a01b03166118e9565b3480156109d757600080fd5b506109e0611967565b604080516001600160a01b039092168252519081900360200190f35b348015610a0857600080fd5b5061035a60048036036040811015610a1f57600080fd5b506001600160a01b0381351690602001351515611976565b348015610a4357600080fd5b5061021f60048036036020811015610a5a57600080fd5b50356001600160a01b0316611a30565b348015610a7657600080fd5b5061035a60048036036101a0811015610a8e57600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610afe57600080fd5b820183602082011115610b1057600080fd5b803590602001918460208302840111600160201b83111715610b3157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610b8057600080fd5b820183602082011115610b9257600080fd5b803590602001918460208302840111600160201b83111715610bb357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611a3b565b348015610c1357600080fd5b506101d960048036036060811015610c2a57600080fd5b506001600160a01b038135169060208101359060400135611afa565b348015610c5257600080fd5b5061035a60048036036040811015610c6957600080fd5b50803590602001356001600160a01b0316611b0f565b348015610c8b57600080fd5b5061021f60048036036040811015610ca257600080fd5b506001600160a01b0381358116916020013516611b8a565b348015610cc657600080fd5b50610ce460048036036020811015610cdd57600080fd5b5035611b96565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b61035a600480360360a0811015610d4e57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610d8d57600080fd5b820183602082011115610d9f57600080fd5b803590602001918460018302840111600160201b83111715610dc057600080fd5b509092509050611bf2565b348015610dd757600080fd5b5061035a60048036036020811015610dee57600080fd5b50356001600160a01b0316611d49565b348015610e0a57600080fd5b5061035a60048036036060811015610e2157600080fd5b81359190810190604081016020820135600160201b811115610e4257600080fd5b820183602082011115610e5457600080fd5b803590602001918460208302840111600160201b83111715610e7557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610ec457600080fd5b820183602082011115610ed657600080fd5b803590602001918460208302840111600160201b83111715610ef757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d9c945050505050565b60006001600160a01b038316610f7c5760405162461bcd60e51b815260040180806020018281038252602b8152602001806134f4602b913960400191505060405180910390fd5b506000818152600e602090815260408083206001600160a01b03861684526007019091529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b1480610fdb57506001600160e01b03198216636cdb3d1360e11b145b15610fe857506001610fec565b5060005b919050565b84831461102f5760405162461bcd60e51b815260040180806020018281038252602e8152602001806136ab602e913960400191505060405180910390fd5b6001600160a01b0387166110745760405162461bcd60e51b81526004018080602001828103825260288152602001806135456028913960400191505060405180910390fd5b6001600160a01b03881633148061109657506110908833611b8a565b15156001145b6110d15760405162461bcd60e51b81526004018080602001828103825260378152602001806136746037913960400191505060405180910390fd5b611140888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092019190915250611f3f92505050565b866001600160a01b0316886001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a461129533898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a9150899081908401838280828437600092019190915250611ff992505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152939493929183018282801561132b5780601f106113005761010080835404028352916020019161132b565b820191906000526020600020905b81548152906001019060200180831161130e57829003601f168201915b505050600c90930154919250506001600160a01b031683565b600d602052600090815260409020805460019091015460ff808316926101009004169083565b600f6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b6113e56121ea565b611424576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b611431600282600a61339f565b5050565b8761144081336121fb565b61148b576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000898152600e60205260409020546114db576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b6114eb8989898989898989612235565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b6060815183511461156e5760405162461bcd60e51b81526004018080602001828103825260308152602001806135996030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561158857600080fd5b506040519080825280602002602001820160405280156115b2578160200160208202803683370190505b50905060005b84518110156116a85760006001600160a01b03168582815181106115d857fe5b60200260200101516001600160a01b031614156116265760405162461bcd60e51b81526004018080602001828103825260348152602001806135ff6034913960400191505060405180910390fd5b600e600085838151811061163657fe5b60200260200101518152602001908152602001600020600701600086838151811061165d57fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061169557fe5b60209081029190910101526001016115b8565b509392505050565b6000818152600e602090815260408083206001600160a01b03861684526007019091528120600101546116e49042906123d9565b9392505050565b60006116e483836121fb565b8161170281336121fb565b61174d576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b506000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805462ff0000191662010000179055565b8161179481336121fb565b6117df576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b506000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805462ff000019169055565b61181e6121ea565b61185d576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b6118896121ea565b6118c8576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b6118f16121ea565b611930576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600c546001600160a01b031690565b336001600160a01b03831614156119be5760405162461bcd60e51b815260040180806020018281038252602c81526020018061356d602c913960400191505060405180910390fd5b336000818152600d602090815260408083206001600160a01b0387168085526003909101835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610fa48261241b565b611a443361241b565b611a8f576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b611aa28b8b8b8b8b8b8b8b8b8b8b612445565b604080518b8152602081018b905281516001600160a01b038e169260009233927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62929181900390910190a45050505050505050505050565b6000611b078484846125ae565b949350505050565b611b176121ea565b611b56576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b60006116e48383612796565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516611c375760405162461bcd60e51b81526004018080602001828103825260288152602001806135456028913960400191505060405180910390fd5b6001600160a01b038616331480611c595750611c538633611b8a565b15156001145b611c945760405162461bcd60e51b81526004018080602001828103825260378152602001806136746037913960400191505060405180910390fd5b611ca0868686866127db565b846001600160a01b0316866001600160a01b0316336001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611d41338787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061285392505050565b505050505050565b611d516121ea565b611d90576040805162461bcd60e51b81526020600482018190526024820152600080516020613654833981519152604482015290519081900360640190fd5b611d99816129c8565b50565b611da53361241b565b611df0576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000838152600e602052604090205415801590611e0e575080518251145b611e53576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015611f3957611e9084848381518110611e6f57fe5b6020026020010151848481518110611e8357fe5b6020026020010151612a69565b6000848152600e602052604081206008018054909190611eac57fe5b600091825260208220015484516001600160a01b03909116919033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290879086908110611ef657fe5b6020026020010151600e60008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a4600101611e56565b50505050565b6000803411611f69576001600160a01b0385166000908152600d6020526040902060010154611f6b565b345b905060005b8351811015611fe757611fdd611fae8787878581518110611f8d57fe5b6020026020010151878681518110611fa157fe5b6020026020010151612c0b565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152849190612d68565b9150600101611f70565b50611ff28582612dff565b5050505050565b61200b846001600160a01b0316612e80565b15611d415763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156120ab578181015183820152602001612093565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156120ea5781810151838201526020016120d2565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561212657818101518382015260200161210e565b50505050905090810190601f1680156121535780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561217857600080fd5b505af115801561218c573d6000803e3d6000fd5b505050506040513d60208110156121a257600080fd5b50516001600160e01b03191614611d415760405162461bcd60e51b81526004018080602001828103825260368152602001806135c96036913960400191505060405180910390fd5b600c546001600160a01b0316331490565b6000828152600e602090815260408083206001600160a01b038516845260070190915281206002015460ff16806116e457506116e46121ea565b6000805b85518110156122655785818151811061224e57fe5b602002602001015182019150806001019050612239565b5060008651118015612275575060015b8015612282575080612710145b801561228f575061271084105b6122d4576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600e60209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b9091018054600181018255908552929093206123349392830201916133f7565b506000898152600e60209081526040909120875161235a92600990920191890190613431565b506000898152600e60209081526040909120865161238092600a90920191880190613485565b50506000978852600e602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b60006116e483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d68565b6001600160a01b0381166000908152600d602052604081205460ff1680610fa45750610fa46121ea565b60008a8152600e60205260409020541580156124615750600089115b6124a6576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b88600e60008c81526020019081526020016000206000018190555087600e60008c8152602001908152602001600020600101819055506001600e60008c81526020019081526020016000206007016000336001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600e60008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506125968a88888888888888612235565b6125a18b8b8b612eb7565b5050505050505050505050565b6000828152600e60205260408120600b015481904290600019015b6000868152600e60205260408120600b018054839081106125e657fe5b60009182526020822060029091020101546000888152600e60205260408120600b01805492935090918490811061261957fe5b906000526020600020906002020160016002811061263357fe5b01546000898152600e602090815260408083206001600160a01b038e1684526007019091528120600101549192509083116126d6576000898152600e602090815260408083206001600160a01b038e1684526007019091529020600101546126ab9062015180906126a59088906123d9565b90612f60565b9050806126b6575060015b6126ca886126c48385612fa2565b90612fa2565b86019550505050612715565b6126e7620151806126a587866123d9565b9050806126f2575060015b9193508391612705886126c48385612fa2565b90950194505050600019016125c9565b506000858152600e6020526040902060010154612736908390600a0a612f60565b6000868152600e602052604081206003015491935090612761906305f5e100906126a5908890612fa2565b6000878152600e602052604090206002015490915061278b906127849083612ffb565b8490612ffb565b979650505050505050565b60006127a28383613055565b806116e45750506001600160a01b039182166000908152600d602090815260408083209390941682526003909201909152205460ff1690565b6000803411612805576001600160a01b0385166000908152600d6020526040902060010154612807565b345b905061284761281886868686612c0b565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152839190612d68565b9050611ff28582612dff565b612865846001600160a01b0316612e80565b15611d415763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156129065781810151838201526020016128ee565b50505050905090810190601f1680156129335780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561295657600080fd5b505af115801561296a573d6000803e3d6000fd5b505050506040513d602081101561298057600080fd5b50516001600160e01b03191614611d415760405162461bcd60e51b81526004018080602001828103825260318152602001806136d96031913960400191505060405180910390fd5b6001600160a01b038116612a0d5760405162461bcd60e51b815260040180806020018281038252602681526020018061351f6026913960400191505060405180910390fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000838152600e602052604081206008018054612c069290612a8757fe5b6000918252602080832090910154868352600e8083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a949093908401929190612af157fe5b9060005260206000209060020201600160028110612b0b57fe5b0154905260008a8152600e602090815260409182902060090180548351818402810184019094528084529091830182828015612b7057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612b52575b50505060008d8152600e6020908152604091829020600a0180548351818402810184019094528084529294509250830182828015612bcd57602002820191906000526020600020905b815481526020019060010190808311612bb9575b50505060008e8152600e60205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b0316612445565b505050565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152600e82528381206001600160a01b038916825260070190915291822054612c66918490612d68565b6000848152600e602090815260408083206001600160a01b038a168452600701909152902055612c97848484612eb7565b612ca28584846125ae565b905060005b6000848152600e6020526040902060090154811015612d5f576000848152600e60205260408120600901805483908110612cdd57fe5b6000918252602080832090910154878352600e90915260408220600a0180546001600160a01b0390921693509084908110612d1457fe5b6000918252602090912001549050612d326127106126a58684612fa2565b6001600160a01b039092166000908152600d60205260409020600190810180549093019092555001612ca7565b50949350505050565b60008184841115612df75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612dbc578181015183820152602001612da4565b50505050905090810190601f168015612de95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600034118015612e0f5750600081115b15612e5b576001600160a01b0382166000908152600d6020526040902060010154612e3a9082612ffb565b6001600160a01b0383166000908152600d6020526040902060010155611431565b34611431576001600160a01b03919091166000908152600d6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611b075750141592915050565b6000828152600e6020526040902060060154600160a01b900460ff161580612f0d57506000828152600e602090815260408083206001600160a01b038716845260070190915290206002015462010000900460ff165b612f55576040805162461bcd60e51b81526020600482015260146024820152731059191c995cdcc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b612c0683838361313c565b60006116e483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061333a565b600082612fb157506000610fa4565b82820282848281612fbe57fe5b04146116e45760405162461bcd60e51b81526004018080602001828103825260218152602001806136336021913960400191505060405180910390fd5b6000828201838110156116e4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000805b600a811015613132576000600282600a811061307157fe5b01546001600160a01b03161461312a576000600282600a811061309057fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b1580156130e257600080fd5b505afa1580156130f6573d6000803e3d6000fd5b505050506040513d602081101561310c57600080fd5b50516001600160a01b0316141561312857600192505050610fa4565b505b600101613059565b5060009392505050565b6000828152600e602090815260408083206001600160a01b038716845260070190915281205461316c9083612ffb565b6000848152600e602090815260408083206001600160a01b0389168452600701909152902054909150613269576000838152600e602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16613238576001600160a01b0384166000818152600d6020908152604080832060020180546001818101835591855283852001889055878452600e83529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b6000838152600e602090815260408083206001600160a01b038816845260070190915290204260019091015561330a565b6000838152600e602090815260408083206001600160a01b038816845260070190915281206001015461329d9042906123d9565b6000858152600e602090815260408083206001600160a01b038a168452600701909152812054919250906132d79084906126a59085612fa2565b6000868152600e602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b6000928352600e602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b600081836133895760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612dbc578181015183820152602001612da4565b50600083858161339557fe5b0495945050505050565b82600a81019282156133e7579160200282015b828111156133e757825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906133b2565b506133f39291506134bf565b5090565b8260028101928215613425579160200282015b8281111561342557825182559160200191906001019061340a565b506133f39291506134de565b8280548282559060005260206000209081019282156133e757916020028201828111156133e757825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906133b2565b828054828255906000526020600020908101928215613425579160200282018281111561342557825182559160200191906001019061340a565b5b808211156133f35780546001600160a01b03191681556001016134c0565b5b808211156133f357600081556001016134df56fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a2646970667358221220c78e20b2589b09a9b47d6438822ea8e2e99785d0967430473e54c1908765679764736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "99:1135:13:-:0;;;;;;;;;;;;-1:-1:-1;655:30:12;674:10;655:18;:30::i;:::-;99:1135:13;;1695:239:12;-1:-1:-1;;;;;1768:22:12;;1760:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1869:13;;1848:45;;-1:-1:-1;;;;;1848:45:12;;;;1869:13;;1848:45;;1869:7;;1848:45;1903:13;:24;;-1:-1:-1;;;;;;1903:24:12;-1:-1:-1;;;;;1903:24:12;;;;;;;;;;1695:239::o;99:1135:13:-;;;;;;;",
  "deployedSourceMap": "99:1135:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1572:234:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1572:234:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;977:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;977:255:8;-1:-1:-1;;;;;;977:255:8;;:::i;:::-;;;;;;;;;;;;;;;;;;5752:770;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5752:770:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5752:770:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5752:770:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5752:770:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5752:770:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5752:770:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5752:770:8;;;;;;;;;;-1:-1:-1;5752:770:8;;-1:-1:-1;5752:770:8;-1:-1:-1;5752:770:8;:::i;:::-;;2025:22:15;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2025:22:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2053:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2053:39:15;-1:-1:-1;;;;;2053:39:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2145:47:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2145:47:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;465:151:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:151:14;;-1:-1:-1;465:151:14;;-1:-1:-1;;;;465:151:14:i;2251:823:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;2251:823:10;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;-1:-1:-1;;;;;2251:823:10;;:::i;2130:631:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2130:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2130:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2130:631:8;;;;;;;;-1:-1:-1;2130:631:8;;-1:-1:-1;;;;;2130:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2130:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2130:631:8;;-1:-1:-1;2130:631:8;;-1:-1:-1;;;;;2130:631:8:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;967:161:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;967:161:7;;;;;;;;:::i;1412:132:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1412:132:10;;;;;;-1:-1:-1;;;;;1412:132:10;;:::i;388:140:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:140:13;;;;;;-1:-1:-1;;;;;388:140:13;;:::i;684:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;684:140:13;;;;;;-1:-1:-1;;;;;684:140:13;;:::i;623:119:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;623:119:11;-1:-1:-1;;;;;623:119:11;;:::i;879:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;879:117:11;-1:-1:-1;;;;;879:117:11;;:::i;731:144:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;731:144:10;;;;;;-1:-1:-1;;;;;731:144:10;;:::i;1141:93:12:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1141:93:12;;;;;;;;;;;;;;3239:302:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3239:302:8;;;;;;;;;;:::i;1142:116:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1142:116:11;-1:-1:-1;;;;;1142:116:11;;:::i;2097:1038::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2097:1038:11;;;;;;;;-1:-1:-1;2097:1038:11;;-1:-1:-1;;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2097:1038:11;;;;;;;;-1:-1:-1;2097:1038:11;;-1:-1:-1;;;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2097:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2097:1038:11;;-1:-1:-1;;2097:1038:11;;;-1:-1:-1;;;2097:1038:11;;;;;;;;;;-1:-1:-1;;;;;2097:1038:11;;:::i;570:159:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;570:159:7;;;;;;;;;;;;;:::i;1044:142:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1044:142:10;;;;;;-1:-1:-1;;;;;1044:142:10;;:::i;3822:157:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3822:157:8;;;;;;;;;;:::i;2098:41:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2098:41:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2098:41:15;;;;;;;;;;;;;;;;;;;;;;;;;;4533:630:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4533:630:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4533:630:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4533:630:8;;;;;;;;;;-1:-1:-1;4533:630:8;;-1:-1:-1;4533:630:8;-1:-1:-1;4533:630:8;:::i;1383:116:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1383:116:12;-1:-1:-1;;;;;1383:116:12;;:::i;3362:645:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3362:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3362:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3362:645:11;;;;;;;;-1:-1:-1;3362:645:11;;-1:-1:-1;;;;;3362:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3362:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3362:645:11;;-1:-1:-1;3362:645:11;;-1:-1:-1;;;;;3362:645:11:i;1572:234:8:-;1650:7;-1:-1:-1;;;;;1677:21:8;;1669:77;;;;-1:-1:-1;;;1669:77:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1763:11:8;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1763:28:8;;;;:19;;:28;;;;;:36;1572:234;;;;;:::o;977:255::-;1057:4;-1:-1:-1;;;;;;1075:42:8;;-1:-1:-1;;;1075:42:8;;:99;;-1:-1:-1;;;;;;;1131:43:8;;-1:-1:-1;;;1131:43:8;1075:99;1071:135;;;-1:-1:-1;1193:4:8;1186:11;;1071:135;-1:-1:-1;1220:5:8;977:255;;;;:::o;5752:770::-;5983:27;;;5975:86;;;;-1:-1:-1;;;5975:86:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6079:16:8;;6071:69;;;;-1:-1:-1;;;6071:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6171:18:8;;6179:10;6171:18;;:64;;;6193:34;6210:4;6216:10;6193:16;:34::i;:::-;:42;;6231:4;6193:42;6171:64;6150:166;;;;-1:-1:-1;;;6150:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6327:37;6342:4;6348:2;6352:3;;6327:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6327:37:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6357:6:8;;-1:-1:-1;6357:6:8;;;;6327:37;;;6357:6;;6327:37;6357:6;6327:37;;;;;;;;;-1:-1:-1;6327:14:8;;-1:-1:-1;;;6327:37:8:i;:::-;6412:2;-1:-1:-1;;;;;6380:48:8;6406:4;-1:-1:-1;;;;;6380:48:8;6394:10;-1:-1:-1;;;;;6380:48:8;;6416:3;;6421:6;;6380:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:48:8;;;;;;;;;;;;;;;;;-1:-1:-1;6380:48:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6380:48:8;;;;;;;;-1:-1:-1;6380:48:8;;-1:-1:-1;;;;;;;6380:48:8;6439:76;6475:10;6487:4;6493:2;6497:3;;6439:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6439:76:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6502:6:8;;-1:-1:-1;6502:6:8;;;;6439:76;;;6502:6;;6439:76;6502:6;6439:76;;;;;;;;;-1:-1:-1;;6439:76:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6510:4:8;;-1:-1:-1;6510:4:8;;;;6439:76;;6510:4;;;;6439:76;;;;;;;;;-1:-1:-1;6439:35:8;;-1:-1:-1;;;6439:76:8:i;:::-;5752:770;;;;;;;;:::o;2025:22:15:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;2025:22:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2025:22:15;;;;;;;-1:-1:-1;;;;;;;2025:22:15;;:::o;2053:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2145:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2145:47:15;;;;-1:-1:-1;;;2145:47:15;;;;;-1:-1:-1;;;2145:47:15;;;;;-1:-1:-1;;;2145:47:15;;;;;-1:-1:-1;;;2145:47:15;;;;;-1:-1:-1;;;2145:47:15;;;;;:::o;465:151:14:-;905:10:12;:8;:10::i;:::-;897:55;;;;;-1:-1:-1;;;897:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;897:55:12;;;;;;;;;;;;;;;562:47:14::1;:30;595:14:::0;562:47:::1;;:::i;:::-;;465:151:::0;:::o;2251:823:10:-;2686:2;427:28;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;;;;2729:1:::1;2708:11:::0;;;:7:::1;:11;::::0;;;;:18;2700:48:::1;;;::::0;;-1:-1:-1;;;2700:48:10;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2700:48:10;;;;;;;;;;;;;::::1;;2759:262;2769:2;2791:12;2823:15;2858:14;2892:24;2936:21;2977:9;3006:14;2759:9;:262::i;:::-;3037:30;::::0;;;;;;;3050:2;;3037:30:::1;::::0;;;;;::::1;::::0;;::::1;2251:823:::0;;;;;;;;;:::o;2130:631:8:-;2279:16;2338:3;:10;2319:8;:15;:29;2311:90;;;;-1:-1:-1;;;2311:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2412:30;2459:8;:15;2445:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2445:30:8;;2412:63;;2491:9;2486:238;2510:8;:15;2506:1;:19;2486:238;;;2577:1;-1:-1:-1;;;;;2554:25:8;:8;2563:1;2554:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2554:25:8;;;2546:90;;;;-1:-1:-1;;;2546:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2669:7;:15;2677:3;2681:1;2677:6;;;;;;;;;;;;;;2669:15;;;;;;;;;;;:23;;:36;2693:8;2702:1;2693:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2669:36:8;-1:-1:-1;;;;;2669:36:8;;;;;;;;;;;;:44;;;2650:13;2664:1;2650:16;;;;;;;;;;;;;;;;;:63;2527:3;;2486:238;;;-1:-1:-1;2741:13:8;2130:631;-1:-1:-1;;;2130:631:8:o;967:161:7:-;1037:7;1083:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1083:28:7;;;;:19;;:28;;;;;:37;;;1063:58;;:15;;:19;:58::i;:::-;1056:65;967:161;-1:-1:-1;;;967:161:7:o;1412:132:10:-;1487:4;1510:27;1523:2;1527:9;1510:12;:27::i;388:140:13:-;462:2;427:28:10;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;;;;-1:-1:-1;476:11:13::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;476:27:13;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:45:::0;;-1:-1:-1;;476:45:13::1;::::0;::::1;::::0;;388:140::o;684:::-;757:2;427:28:10;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;;;;-1:-1:-1;812:5:13::1;771:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;771:27:13;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:46:::0;;-1:-1:-1;;771:46:13::1;::::0;;684:140::o;623:119:11:-;905:10:12;:8;:10::i;:::-;897:55;;;;;-1:-1:-1;;;897:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;897:55:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;699:17:11::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;699:36:11::1;731:4;699:36;::::0;;623:119::o;879:117::-;905:10:12;:8;:10::i;:::-;897:55;;;;;-1:-1:-1;;;897:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;897:55:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;952:17:11::1;984:5;952:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;952:37:11::1;::::0;;879:117::o;731:144:10:-;905:10:12;:8;:10::i;:::-;897:55;;;;;-1:-1:-1;;;897:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;897:55:12;;;;;;;;;;;;;;;819:11:10::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;819:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;819:49:10::1;864:4;819:49;::::0;;731:144::o;1141:93:12:-;1214:13;;-1:-1:-1;;;;;1214:13:12;1141:93;:::o;3239:302:8:-;3335:10;-1:-1:-1;;;;;3335:22:8;;;;3327:79;;;;-1:-1:-1;;;3327:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3423:10;3416:18;;;;:6;:18;;;;;;;;-1:-1:-1;;;;;3416:46:8;;;;;:36;;;;:46;;;;;;:57;;-1:-1:-1;;3416:57:8;;;;;;;;;;3488:46;;;;;;;3416;;3423:10;3488:46;;;;;;;;;;;3239:302;;:::o;1142:116:11:-;1205:4;1228:23;1241:9;1228:12;:23::i;2097:1038::-;325:24;338:10;325:12;:24::i;:::-;317:60;;;;;-1:-1:-1;;;317:60:11;;;;;;;;;;;;-1:-1:-1;;;317:60:11;;;;;;;;;;;;;;;2674:378:::1;2687:9;2719:2;2744:6;2773:8;2804:12;2839:15;2877:14;2914:24;2961:21;3005:9;3037:14;2674:12;:378::i;:::-;3067:61;::::0;;;;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;3067:61:11;::::1;::::0;3102:1:::1;::::0;3082:10:::1;::::0;3067:61:::1;::::0;;;;;;;;;::::1;2097:1038:::0;;;;;;;;;;;:::o;570:159:7:-;660:7;686:36;703:7;712:2;716:5;686:16;:36::i;:::-;679:43;570:159;-1:-1:-1;;;;570:159:7:o;1044:142:10:-;905:10:12;:8;:10::i;:::-;897:55;;;;;-1:-1:-1;;;897:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;897:55:12;;;;;;;;;;;;;;;1174:5:10::1;1129:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1129:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1129:50:10::1;::::0;;1044:142::o;3822:157:8:-;3913:4;3936:36;3954:7;3963:8;3936:17;:36::i;2098:41:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2098:41:15;;;;-1:-1:-1;;;2098:41:15;;;;;-1:-1:-1;;;2098:41:15;;;;:::o;4533:630:8:-;-1:-1:-1;;;;;4735:16:8;;4727:69;;;;-1:-1:-1;;;4727:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4827:18:8;;4835:10;4827:18;;:64;;;4849:34;4866:4;4872:10;4849:16;:34::i;:::-;:42;;4887:4;4849:42;4827:64;4806:166;;;;-1:-1:-1;;;4806:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4983:30;4993:4;4999:2;5003;5007:5;4983:9;:30::i;:::-;5062:2;-1:-1:-1;;;;;5029:47:8;5056:4;-1:-1:-1;;;;;5029:47:8;5044:10;-1:-1:-1;;;;;5029:47:8;;5066:2;5070:5;5029:47;;;;;;;;;;;;;;;;;;;;;;;;5087:69;5118:10;5130:4;5136:2;5140;5144:5;5151:4;;5087:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5087:30:8;;-1:-1:-1;;;5087:69:8:i;:::-;4533:630;;;;;;:::o;1383:116:12:-;905:10;:8;:10::i;:::-;897:55;;;;;-1:-1:-1;;;897:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;897:55:12;;;;;;;;;;;;;;;1464:28:::1;1483:8;1464:18;:28::i;:::-;1383:116:::0;:::o;3362:645:11:-;325:24;338:10;325:12;:24::i;:::-;317:60;;;;;-1:-1:-1;;;317:60:11;;;;;;;;;;;;-1:-1:-1;;;317:60:11;;;;;;;;;;;;;;;3563:1:::1;3542:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;3598:14;:21;3584:3;:10;:35;3542:77;3534:107;;;::::0;;-1:-1:-1;;;3534:107:11;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3534:107:11;;;;;;;;;;;;;::::1;;3657:9;3652:349;3676:3;:10;3672:1;:14;3652:349;;;3707:42;3719:2;3723:3;3727:1;3723:6;;;;;;;;;;;;;;3731:14;3746:1;3731:17;;;;;;;;;;;;;;3707:11;:42::i;:::-;3872:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;3931:6;;-1:-1:-1;;;;;3872:25:11;;::::1;::::0;;3784:10:::1;::::0;3769:221:::1;::::0;3931:3;;3935:1;;3931:6;::::1;;;;;;;;;;;3971:7;:11;3979:2;3971:11;;;;;;;;;;;:18;;;3769:221;;;;;;;;;;;;;;;;;;;;;;;;3688:3;;3652:349;;;;3362:645:::0;;;:::o;4777:404:7:-;4893:19;4927:1;4915:9;:13;:51;;-1:-1:-1;;;;;4943:12:7;;;;;;:6;:12;;;;;:23;;;4915:51;;;4931:9;4915:51;4893:73;;4981:9;4976:157;5000:3;:10;4996:1;:14;4976:157;;;5045:77;5061:40;5073:4;5079:2;5083:3;5087:1;5083:6;;;;;;;;;;;;;;5091;5098:1;5091:9;;;;;;;;;;;;;;5061:11;:40::i;:::-;5045:77;;;;;;;;;;;;-1:-1:-1;;;5045:77:7;;;;:11;;:77;:15;:77::i;:::-;5031:91;-1:-1:-1;5012:3:7;;4976:157;;;;5142:32;5156:4;5162:11;5142:13;:32::i;:::-;4777:404;;;;;:::o;7145:558:8:-;7388:15;:2;-1:-1:-1;;;;;7388:13:8;;:15::i;:::-;7385:312;;;7546:52;;;-1:-1:-1;;;;;7444:154:8;;7461:2;-1:-1:-1;;;;;7444:43:8;;7488:8;7498:4;7504:3;7509:6;7517:4;7444:78;;;;;;;;;;;;;-1:-1:-1;;;;;7444:78:8;;;;;;-1:-1:-1;;;;;7444:78:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7444:78:8;-1:-1:-1;;;;;;7444:154:8;;7419:267;;;;-1:-1:-1;;;7419:267:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2017:100:12;2097:13;;-1:-1:-1;;;;;2097:13:12;2083:10;:27;;2017:100::o;3175:162:10:-;3251:4;3274:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3274:30:10;;;;:19;;:30;;;;;:42;;;;;;:56;;;3320:10;:8;:10::i;4251:1359:11:-;4670:23;4712:9;4707:120;4731:24;:31;4727:1;:35;4707:120;;;4800:24;4825:1;4800:27;;;;;;;;;;;;;;4781:46;;;;4764:3;;;;;4707:120;;;;4870:1;4846:14;:21;:25;:75;;;;-1:-1:-1;4875:46:11;4846:75;:119;;;;;4941:15;4960:5;4941:24;4846:119;:168;;;;;5009:5;4985:21;:29;4846:168;4838:214;;;;;-1:-1:-1;;;4838:214:11;;;;;;;;;;;;-1:-1:-1;;;4838:214:11;;;;;;;;;;;;;;;5063:11;;;;:7;:11;;;;;;;;:24;;;:39;;;5149:18;;5112:34;;;;:55;;;;5212:18;;;;-1:-1:-1;5177:32:11;;:53;5240:74;;;;;;;5277:15;5240:74;;5294:18;;;;5240:74;;;;:30;;;;:74;;5228:1;5240:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5324:11:11;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;5377:11:11;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;5450:11:11;;;;:7;:11;;;;;;:33;;;:57;;;;5517:21;;;;:33;;-1:-1:-1;;;;5517:33:11;-1:-1:-1;;;5517:33:11;;;;;;;;;;;-1:-1:-1;;;;;;5560:43:11;-1:-1:-1;;;;;5560:43:11;;;;;;;;;;-1:-1:-1;;;;4251:1359:11:o;1307:134:17:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;4108:137:11:-;-1:-1:-1;;;;;4195:17:11;;4172:4;4195:17;;;:6;:17;;;;;:29;;;;:43;;;4228:10;:8;:10::i;5617:1165::-;6199:11;;;;:7;:11;;;;;:18;:23;:37;;;;;6235:1;6226:6;:10;6199:37;6191:67;;;;;-1:-1:-1;;;6191:67:11;;;;;;;;;;;;-1:-1:-1;;;6191:67:11;;;;;;;;;;;;;;;6290:6;6269:7;:11;6277:2;6269:11;;;;;;;;;;;:18;;:27;;;;6329:8;6306:7;:11;6314:2;6306:11;;;;;;;;;;;:20;;:31;;;;6393:4;6347:7;:11;6355:2;6347:11;;;;;;;;;;;:19;;:31;6367:10;-1:-1:-1;;;;;6347:31:11;-1:-1:-1;;;;;6347:31:11;;;;;;;;;;;;:43;;;:50;;;;;;;;;;;;;;;;;;6451:4;6407:7;:11;6415:2;6407:11;;;;;;;;;;;:19;;:30;6427:9;-1:-1:-1;;;;;6407:30:11;-1:-1:-1;;;;;6407:30:11;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;6466:262;6476:2;6498:12;6530:15;6565:14;6599:24;6643:21;6684:9;6713:14;6466:9;:262::i;:::-;6739:36;6753:9;6764:2;6768:6;6739:13;:36::i;:::-;5617:1165;;;;;;;;;;;:::o;2354:1317:7:-;2447:7;2558:11;;;:7;:11;;;;;:30;;:37;2447:7;;2518:15;;-1:-1:-1;;2558:41:7;2544:835;2629:19;2651:11;;;:7;:11;;;;;:30;;:33;;2682:1;;2651:33;;;;;;;;;;;;;;;;;;:36;;2701:12;2716:11;;;:7;:11;;;;;:30;;:33;;2651:36;;-1:-1:-1;2701:12:7;;2747:1;;2716:33;;;;;;;;;;;;;;;;2750:1;2716:36;;;;;;;;;2766:19;2804:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2804:28:7;;;;:19;;:28;;;;;:37;;;2716:36;;-1:-1:-1;2766:19:7;2804:52;-1:-1:-1;2800:569:7;;2906:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2906:28:7;;;;:19;;:28;;;;;:37;;;2890:66;;2950:5;;2891:53;;:10;;:14;:53::i;:::-;2890:59;;:66::i;:::-;2876:80;-1:-1:-1;2978:16:7;2974:37;;-1:-1:-1;3010:1:7;2974:37;3042:34;3070:5;3043:21;:11;3059:4;3043:15;:21::i;:::-;3042:27;;:34::i;:::-;3029:47;;;;3094:5;;;;;2800:569;3152:40;3186:5;3153:27;:10;3168:11;3153:14;:27::i;3152:40::-;3138:54;-1:-1:-1;3214:16:7;3210:37;;-1:-1:-1;3246:1:7;3210:37;3278:11;;-1:-1:-1;3278:11:7;;3320:34;3348:5;3321:21;:11;3337:4;3321:15;:21::i;3320:34::-;3307:47;;;;-1:-1:-1;;;;;2609:3:7;2544:835;;;-1:-1:-1;3436:11:7;;;;:7;:11;;;;;:20;;;3418:39;;:9;;3432:2;:24;3418:13;:39::i;:::-;3507:17;3538:11;;;:7;:11;;;;;:32;;;3406:51;;-1:-1:-1;3507:17:7;3527:56;;3577:5;;3528:43;;:5;;:9;:43::i;3527:56::-;3614:11;;;;:7;:11;;;;;:34;;;3507:76;;-1:-1:-1;3600:64:7;;3614:49;;3507:76;3614:38;:49::i;:::-;3600:9;;:13;:64::i;:::-;3593:71;2354:1317;-1:-1:-1;;;;;;;2354:1317:7:o;1239:203:14:-;1324:4;1347:41;1370:7;1379:8;1347:22;:41::i;:::-;:88;;;-1:-1:-1;;;;;;;1392:15:14;;;;;;;:6;:15;;;;;;;;:43;;;;;;:33;;;;:43;;;;;;;;1239:203::o;4413:306:7:-;4504:19;4538:1;4526:9;:13;:51;;-1:-1:-1;;;;;4554:12:7;;;;;;:6;:12;;;;;:23;;;4526:51;;;4542:9;4526:51;4504:73;;4601:69;4617:32;4629:4;4635:2;4639;4643:5;4617:11;:32::i;:::-;4601:69;;;;;;;;;;;;-1:-1:-1;;;4601:69:7;;;;:11;;:69;:15;:69::i;:::-;4587:83;;4680:32;4694:4;4700:11;4680:13;:32::i;6623:516:8:-;6841:15;:2;-1:-1:-1;;;;;6841:13:8;;:15::i;:::-;6838:295;;;6992:47;;;-1:-1:-1;;;;;6897:142:8;;6914:2;-1:-1:-1;;;;;6897:38:8;;6936:8;6946:4;6952:2;6956:5;6963:4;6897:71;;;;;;;;;;;;;-1:-1:-1;;;;;6897:71:8;;;;;;-1:-1:-1;;;;;6897:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6897:71:8;-1:-1:-1;;;;;;6897:142:8;;6872:250;;;;-1:-1:-1;;;6872:250:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:239:12;-1:-1:-1;;;;;1768:22:12;;1760:73;;;;-1:-1:-1;;;1760:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1869:13;;1848:45;;-1:-1:-1;;;;;1848:45:12;;;;1869:13;;1848:45;;1869:7;;1848:45;1903:13;:24;;-1:-1:-1;;;;;;1903:24:12;-1:-1:-1;;;;;1903:24:12;;;;;;;;;;1695:239::o;6788:766:11:-;6892:11;;;;:7;:11;;;;;:22;;:25;;6879:668;;6892:11;:25;;;;;;;;;;;;;;;;6970:11;;;:7;:11;;;;;;;:18;;6892:25;7011:20;;;6879:668;;;;;;;7114:34;;;;6879:668;;7173:32;;;;6879:668;;;;7230:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;6892:25:11;;;;6940:7;;6970:18;;7011:20;;7054:12;;6879:668;;;;;;7230:30;6892:25;7230:33;;;;;;;;;;;;;;7264:1;7230:36;;;;;;;;;6879:668;;7312:11;;;;:7;:11;;;;;;;;;:26;;6879:668;;;;;;;;;;;;;;;;;7312:26;;6879:668;;7312:26;6879:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6879:668:11;;;;;;;;;;;;;;;;-1:-1:-1;;;7361:11:11;;;;:7;:11;;;;;;;;;:36;;6879:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;7361:36:11;-1:-1:-1;6879:668:11;;7361:36;6879:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7420:11:11;;;;:7;:11;;;;;:33;;;;7476:21;;;;;7420:33;;-1:-1:-1;7476:21:11;-1:-1:-1;;;7476:21:11;;;;-1:-1:-1;;;;;;7520:26:11;6879:12;:668::i;:::-;6788:766;;;:::o;3677:683:7:-;3837:68;;;;;;;;;;;-1:-1:-1;;;3837:68:7;;;;;;;;3777:12;3837:11;;;:7;:11;;;;;-1:-1:-1;;;;;3837:25:7;;;;:19;;:25;;;;;;:33;:68;;3875:5;;3837:37;:68::i;:::-;3801:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3801:25:7;;;;:19;;:25;;;;;:104;3915:28;3929:2;3809;3937:5;3915:13;:28::i;:::-;3961:33;3978:4;3984:2;3988:5;3961:16;:33::i;:::-;3954:40;;4010:9;4005:327;4029:11;;;;:7;:11;;;;;:26;;:33;4025:37;;4005:327;;;4083:21;4107:11;;;:7;:11;;;;;:26;;:29;;4134:1;;4107:29;;;;;;;;;;;;;;;;;;4185:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;4107:29:7;;;;-1:-1:-1;4185:36:7;4222:1;;4185:39;;;;;;;;;;;;;;;;;-1:-1:-1;4274:47:7;4315:5;4275:34;:4;4185:39;4275:8;:34::i;4274:47::-;-1:-1:-1;;;;;4238:21:7;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;4064:3:7;4005:327;;;;3677:683;;;;;;:::o;1877:187:17:-;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:17;;;1877:187::o;5187:290:7:-;5278:1;5266:9;:13;:32;;;;;5297:1;5283:11;:15;5266:32;5262:209;;;-1:-1:-1;;;;;5338:12:7;;;;;;:6;:12;;;;;:23;;;:40;;5366:11;5338:27;:40::i;:::-;-1:-1:-1;;;;;5312:12:7;;;;;;:6;:12;;;;;:23;;:66;5262:209;;;5397:9;5393:78;;-1:-1:-1;;;;;5425:12:7;;;;;;;;:6;:12;;;;;:23;;:37;5187:290::o;590:797:16:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:16;;;1329:51;-1:-1:-1;;590:797:16:o;976:255:13:-;1082:11;;;;:7;:11;;;;;:21;;;-1:-1:-1;;;1082:21:13;;;;1081:22;;:67;;-1:-1:-1;1107:11:13;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1107:30:13;;;;:19;;:30;;;;;:41;;;;;;;;1081:67;1073:100;;;;;-1:-1:-1;;;1073:100:13;;;;;;;;;;;;-1:-1:-1;;;1073:100:13;;;;;;;;;;;;;;;1183:41;1203:9;1214:2;1218:5;1183:19;:41::i;3218:130:17:-;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;2304:459::-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:17;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:176;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:17;;;;;;;;;;;;;;;;;;;;;;;;;;;717:516:14;807:4;;823:382;847:37;843:1;:41;823:382;;;954:1;909:30;940:1;909:33;;;;;;;;;-1:-1:-1;;;;;909:33:14;:47;905:290;;976:27;1020:30;1051:1;1020:33;;;;;;;;;1084:30;;;-1:-1:-1;;;1084:30:14;;-1:-1:-1;;;;;1084:30:14;;;;;;;;;1020:33;;;;-1:-1:-1;1076:51:14;;;;1020:33;;1084:21;;:30;;;;;;;;;;;;;;1020:33;1084:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1084:30:14;-1:-1:-1;;;;;1076:51:14;;1072:109;;;1158:4;1151:11;;;;;;1072:109;905:290;;886:3;;823:382;;;-1:-1:-1;1221:5:14;;717:516;-1:-1:-1;;;717:516:14:o;1308:1006:7:-;1404:18;1425:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1425:30:7;;;;:19;;:30;;;;;:38;:49;;1468:5;1425:42;:49::i;:::-;1489:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1489:30:7;;;;:19;;:30;;;;;:38;1404:70;;-1:-1:-1;1485:761:7;;1554:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1554:30:7;;;;:19;;:30;;;;;:39;;;;;;;;1549:225;;-1:-1:-1;;;;;1613:17:7;;;;;;:6;:17;;;;;;;;:24;;:33;;;;;;;;;;;;;;;;;;1664:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1664:38:7;;;;;1720:30;;;;:19;;;;:30;;1549:225;1788:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1788:30:7;;;;:19;;:30;;;;;1830:15;1788:39;;;;:57;1485:761;;;1956:20;1999:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1999:30:7;;;;:19;;:30;;;;;:39;;;1979:60;;:15;;:19;:60::i;:::-;2053:19;2076:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2076:30:7;;;;:19;;:30;;;;;:38;1956:83;;-1:-1:-1;2053:19:7;2075:74;;2138:10;;2076:56;;1956:83;2076:42;:56::i;2075:74::-;2164:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2164:30:7;;;;:19;;:30;;;;;2206:15;:29;;;;2164:39;;;;:71;-1:-1:-1;;1485:761:7;2256:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2256:30:7;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;1308:1006:7:o;3969:338:17:-;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:17:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport './Maintenable.sol';\n\ncontract Privatizable is Maintenable {\n\n\n    /****************************\n    EXTERNAL FUNCTIONS\n    *****************************/\n\n\n    /**\n     * @dev Function to approve holder for a private token.\n     * @param id the token id\n     * @param holder The authorized address\n     */\n    function approveHolder(uint256 id, address holder) external onlyMaintener(id) {\n        _tokens[id].holders[holder].isApproved = true;\n    }\n\n\n    /**\n     * @dev Function to revoke holder for a private token.\n     * @param id the token id\n     * @param holder The authorized address\n     */\n    function revokeHolder(uint256 id, address holder) external onlyMaintener(id) {\n        _tokens[id].holders[holder].isApproved = false;\n    }\n\n\n    /****************************\n    INTERNAL FUNCTIONS\n    *****************************/\n\n\n    // override ChargeableTransfer._addToBalance()\n    function _addToBalance(address recipient, uint256 id, uint256 value) internal override {\n        require(!_tokens[id].isPrivate || _tokens[id].holders[recipient].isApproved, \"Address not approved\");\n        super._addToBalance(recipient, id, value);\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
    "exportedSymbols": {
      "Privatizable": [
        3194
      ]
    },
    "id": 3195,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3110,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:13"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
        "file": "./Maintenable.sol",
        "id": 3111,
        "nodeType": "ImportDirective",
        "scope": 3195,
        "sourceUnit": 2490,
        "src": "70:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3112,
              "name": "Maintenable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2489,
              "src": "124:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Maintenable_$2489",
                "typeString": "contract Maintenable"
              }
            },
            "id": 3113,
            "nodeType": "InheritanceSpecifier",
            "src": "124:11:13"
          }
        ],
        "contractDependencies": [
          258,
          320,
          343,
          1660,
          2100,
          2489,
          3010,
          3108,
          3304,
          3426
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3194,
        "linearizedBaseContracts": [
          3194,
          2489,
          3010,
          2100,
          3304,
          3108,
          1660,
          3426,
          343,
          258,
          320
        ],
        "name": "Privatizable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3134,
              "nodeType": "Block",
              "src": "466:62:13",
              "statements": [
                {
                  "expression": {
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3124,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3421,
                              "src": "476:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3368_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 3126,
                            "indexExpression": {
                              "id": 3125,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3116,
                              "src": "484:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "476:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3368_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 3127,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3353,
                          "src": "476:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3331_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 3129,
                        "indexExpression": {
                          "id": 3128,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3118,
                          "src": "496:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "476:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3331_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 3130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3330,
                      "src": "476:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "476:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3133,
                  "nodeType": "ExpressionStatement",
                  "src": "476:45:13"
                }
              ]
            },
            "documentation": {
              "id": 3114,
              "nodeType": "StructuredDocumentation",
              "src": "238:145:13",
              "text": " @dev Function to approve holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "5dd2b9a6",
            "id": 3135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3121,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3116,
                    "src": "462:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3122,
                "modifierName": {
                  "id": 3120,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2355,
                  "src": "448:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "448:17:13"
              }
            ],
            "name": "approveHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3116,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "411:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3118,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "423:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:28:13"
            },
            "returnParameters": {
              "id": 3123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:13"
            },
            "scope": 3194,
            "src": "388:140:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3156,
              "nodeType": "Block",
              "src": "761:63:13",
              "statements": [
                {
                  "expression": {
                    "id": 3154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3146,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3421,
                              "src": "771:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3368_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 3148,
                            "indexExpression": {
                              "id": 3147,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3138,
                              "src": "779:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "771:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3368_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 3149,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3353,
                          "src": "771:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3331_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 3151,
                        "indexExpression": {
                          "id": 3150,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3140,
                          "src": "791:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "771:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3331_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 3152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3330,
                      "src": "771:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "771:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3155,
                  "nodeType": "ExpressionStatement",
                  "src": "771:46:13"
                }
              ]
            },
            "documentation": {
              "id": 3136,
              "nodeType": "StructuredDocumentation",
              "src": "535:144:13",
              "text": " @dev Function to revoke holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "759c5214",
            "id": 3157,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3143,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3138,
                    "src": "757:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3144,
                "modifierName": {
                  "id": 3142,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2355,
                  "src": "743:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "743:17:13"
              }
            ],
            "name": "revokeHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3138,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "706:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3140,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "718:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:28:13"
            },
            "returnParameters": {
              "id": 3145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:13"
            },
            "scope": 3194,
            "src": "684:140:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1224
            ],
            "body": {
              "id": 3192,
              "nodeType": "Block",
              "src": "1063:168:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1081:22:13",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3168,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3421,
                                "src": "1082:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3368_storage_$",
                                  "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                                }
                              },
                              "id": 3170,
                              "indexExpression": {
                                "id": 3169,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3161,
                                "src": "1090:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1082:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$3368_storage",
                                "typeString": "struct StashBloxData.Token storage ref"
                              }
                            },
                            "id": 3171,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isPrivate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3347,
                            "src": "1082:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3173,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3421,
                                  "src": "1107:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3368_storage_$",
                                    "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                                  }
                                },
                                "id": 3175,
                                "indexExpression": {
                                  "id": 3174,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3161,
                                  "src": "1115:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1107:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$3368_storage",
                                  "typeString": "struct StashBloxData.Token storage ref"
                                }
                              },
                              "id": 3176,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3353,
                              "src": "1107:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3331_storage_$",
                                "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                              }
                            },
                            "id": 3178,
                            "indexExpression": {
                              "id": 3177,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3159,
                              "src": "1127:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1107:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$3331_storage",
                              "typeString": "struct StashBloxData.Holder storage ref"
                            }
                          },
                          "id": 3179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3330,
                          "src": "1107:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1081:67:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420617070726f766564",
                        "id": 3181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1150:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        },
                        "value": "Address not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        }
                      ],
                      "id": 3167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1073:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:100:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3183,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:100:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3187,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3159,
                        "src": "1203:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3188,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3161,
                        "src": "1214:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3189,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3163,
                        "src": "1218:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3184,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1183:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Privatizable_$3194",
                          "typeString": "contract super Privatizable"
                        }
                      },
                      "id": 3186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1224,
                      "src": "1183:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3191,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:41:13"
                }
              ]
            },
            "id": 3193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addToBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1054:8:13"
            },
            "parameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3193,
                  "src": "999:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3161,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3193,
                  "src": "1018:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3163,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3193,
                  "src": "1030:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:46:13"
            },
            "returnParameters": {
              "id": 3166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:13"
            },
            "scope": 3194,
            "src": "976:255:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3195,
        "src": "99:1135:13"
      }
    ],
    "src": "45:1190:13"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol",
    "exportedSymbols": {
      "Privatizable": [
        3194
      ]
    },
    "id": 3195,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3110,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:13"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
        "file": "./Maintenable.sol",
        "id": 3111,
        "nodeType": "ImportDirective",
        "scope": 3195,
        "sourceUnit": 2490,
        "src": "70:27:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3112,
              "name": "Maintenable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2489,
              "src": "124:11:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Maintenable_$2489",
                "typeString": "contract Maintenable"
              }
            },
            "id": 3113,
            "nodeType": "InheritanceSpecifier",
            "src": "124:11:13"
          }
        ],
        "contractDependencies": [
          258,
          320,
          343,
          1660,
          2100,
          2489,
          3010,
          3108,
          3304,
          3426
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3194,
        "linearizedBaseContracts": [
          3194,
          2489,
          3010,
          2100,
          3304,
          3108,
          1660,
          3426,
          343,
          258,
          320
        ],
        "name": "Privatizable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3134,
              "nodeType": "Block",
              "src": "466:62:13",
              "statements": [
                {
                  "expression": {
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3124,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3421,
                              "src": "476:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3368_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 3126,
                            "indexExpression": {
                              "id": 3125,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3116,
                              "src": "484:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "476:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3368_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 3127,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3353,
                          "src": "476:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3331_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 3129,
                        "indexExpression": {
                          "id": 3128,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3118,
                          "src": "496:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "476:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3331_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 3130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3330,
                      "src": "476:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "517:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "476:45:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3133,
                  "nodeType": "ExpressionStatement",
                  "src": "476:45:13"
                }
              ]
            },
            "documentation": {
              "id": 3114,
              "nodeType": "StructuredDocumentation",
              "src": "238:145:13",
              "text": " @dev Function to approve holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "5dd2b9a6",
            "id": 3135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3121,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3116,
                    "src": "462:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3122,
                "modifierName": {
                  "id": 3120,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2355,
                  "src": "448:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "448:17:13"
              }
            ],
            "name": "approveHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3116,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "411:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3118,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3135,
                  "src": "423:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "410:28:13"
            },
            "returnParameters": {
              "id": 3123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:13"
            },
            "scope": 3194,
            "src": "388:140:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3156,
              "nodeType": "Block",
              "src": "761:63:13",
              "statements": [
                {
                  "expression": {
                    "id": 3154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3146,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3421,
                              "src": "771:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3368_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 3148,
                            "indexExpression": {
                              "id": 3147,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3138,
                              "src": "779:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "771:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3368_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 3149,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3353,
                          "src": "771:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3331_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 3151,
                        "indexExpression": {
                          "id": 3150,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3140,
                          "src": "791:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "771:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3331_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 3152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3330,
                      "src": "771:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "812:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "771:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3155,
                  "nodeType": "ExpressionStatement",
                  "src": "771:46:13"
                }
              ]
            },
            "documentation": {
              "id": 3136,
              "nodeType": "StructuredDocumentation",
              "src": "535:144:13",
              "text": " @dev Function to revoke holder for a private token.\n @param id the token id\n @param holder The authorized address"
            },
            "functionSelector": "759c5214",
            "id": 3157,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3143,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3138,
                    "src": "757:2:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3144,
                "modifierName": {
                  "id": 3142,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2355,
                  "src": "743:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "743:17:13"
              }
            ],
            "name": "revokeHolder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3138,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "706:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3140,
                  "mutability": "mutable",
                  "name": "holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 3157,
                  "src": "718:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "718:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:28:13"
            },
            "returnParameters": {
              "id": 3145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:13"
            },
            "scope": 3194,
            "src": "684:140:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1224
            ],
            "body": {
              "id": 3192,
              "nodeType": "Block",
              "src": "1063:168:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1081:22:13",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 3168,
                                "name": "_tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3421,
                                "src": "1082:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3368_storage_$",
                                  "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                                }
                              },
                              "id": 3170,
                              "indexExpression": {
                                "id": 3169,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3161,
                                "src": "1090:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1082:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$3368_storage",
                                "typeString": "struct StashBloxData.Token storage ref"
                              }
                            },
                            "id": 3171,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isPrivate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3347,
                            "src": "1082:21:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3173,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3421,
                                  "src": "1107:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3368_storage_$",
                                    "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                                  }
                                },
                                "id": 3175,
                                "indexExpression": {
                                  "id": 3174,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3161,
                                  "src": "1115:2:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1107:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Token_$3368_storage",
                                  "typeString": "struct StashBloxData.Token storage ref"
                                }
                              },
                              "id": 3176,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "holders",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3353,
                              "src": "1107:19:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3331_storage_$",
                                "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                              }
                            },
                            "id": 3178,
                            "indexExpression": {
                              "id": 3177,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3159,
                              "src": "1127:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1107:30:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$3331_storage",
                              "typeString": "struct StashBloxData.Holder storage ref"
                            }
                          },
                          "id": 3179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isApproved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3330,
                          "src": "1107:41:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1081:67:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420617070726f766564",
                        "id": 3181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1150:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        },
                        "value": "Address not approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4f6657178b8fa384e9f20009e91bd99a0e23f0920fec98f56e6fe78ddff191e",
                          "typeString": "literal_string \"Address not approved\""
                        }
                      ],
                      "id": 3167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1073:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1073:100:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3183,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:100:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3187,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3159,
                        "src": "1203:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3188,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3161,
                        "src": "1214:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3189,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3163,
                        "src": "1218:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3184,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1183:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Privatizable_$3194",
                          "typeString": "contract super Privatizable"
                        }
                      },
                      "id": 3186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1224,
                      "src": "1183:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1183:41:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3191,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:41:13"
                }
              ]
            },
            "id": 3193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addToBalance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1054:8:13"
            },
            "parameters": {
              "id": 3164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3159,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3193,
                  "src": "999:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "999:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3161,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 3193,
                  "src": "1018:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1018:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3163,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3193,
                  "src": "1030:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "998:46:13"
            },
            "returnParameters": {
              "id": 3166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1063:0:13"
            },
            "scope": 3194,
            "src": "976:255:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3195,
        "src": "99:1135:13"
      }
    ],
    "src": "45:1190:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-21T17:19:14.617Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approveHolder(uint256,address)": {
        "details": "Function to approve holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "averageAge(address,uint256)": {
        "details": "Function to get the average age of the token for the given address.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID"
        },
        "returns": {
          "_0": "average age in seconds"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "revokeHolder(uint256,address)": {
        "details": "Function to revoke holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        },
        "returns": {
          "_0": "transfer price"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to update a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be updated",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}