{
  "contractName": "StashBlox",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_callbackId",
          "type": "uint256"
        }
      ],
      "name": "CallbackUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "versionRecipient",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "GSNTrustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        }
      ],
      "name": "acceptCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        }
      ],
      "name": "approveCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "approveHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "averageAge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxCall",
          "type": "uint256"
        }
      ],
      "name": "executeCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isLockedAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "isLockedToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "lockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "lockToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "callees",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "proposeCallback",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        }
      ],
      "name": "refuseCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "revokeHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMax",
          "type": "uint256"
        }
      ],
      "name": "setCallbackAutoExecuteMaxAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "unlockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "unlockToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_callbackId\",\"type\":\"uint256\"}],\"name\":\"CallbackUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"versionRecipient\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"GSNTrustedForwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"}],\"name\":\"acceptCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"}],\"name\":\"approveCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"approveHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"averageAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCall\",\"type\":\"uint256\"}],\"name\":\"executeCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isLockedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isLockedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"lockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"callees\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"proposeCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"}],\"name\":\"refuseCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"revokeHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMax\",\"type\":\"uint256\"}],\"name\":\"setCallbackAutoExecuteMaxAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"unlockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"unlockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptCallback(uint256)\":{\"details\":\"Accept a callback\",\"params\":{\"callbackId\":\"callback proposition ID\"}},\"approveCallback(uint256)\":{\"details\":\"Approve a callback\",\"params\":{\"callbackId\":\"callback proposition ID\"}},\"approveHolder(uint256,address)\":{\"details\":\"Function to approve holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"averageAge(address,uint256)\":{\"details\":\"Function to get the average age of the token for the given address.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\"},\"returns\":{\"_0\":\"average age in seconds\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"deposit(address)\":{\"details\":\"Function to make an ETH deposit that can be used to pay token transfer .\",\"params\":{\"to\":\"recipent address\"}},\"executeCallback(uint256,uint256)\":{\"details\":\"Accept a callback. Caller need to recall the function to continue the callback until completed.\",\"params\":{\"callbackId\":\"callback proposition ID\",\"maxCall\":\"maximal call to excute\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isLockedAddress(address)\":{\"details\":\"Function to check if an address is lockec.\",\"params\":{\"addr\":\"The address to check\"}},\"isLockedToken(uint256)\":{\"details\":\"Function to check if a token is locked.\",\"params\":{\"id\":\"The token ID\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"lockAddress(address)\":{\"details\":\"Function to lock an address.\",\"params\":{\"addr\":\"The address to lock\"}},\"lockToken(uint256,uint256)\":{\"details\":\"Function to lock a token.\",\"params\":{\"id\":\"The token ID\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proposeCallback(uint256,uint256,uint256,address[],uint256)\":{\"details\":\"Propose to buy the whole supply of a token. The proposer must hold minHoldingForCallback% of the total supply. StashBlox must approve the price with acceptCallback();\",\"params\":{\"callees\":\"list of calless. Empty list means all holders.\",\"price\":\"proposed price\",\"tokenId\":\"Token ID\"}},\"refuseCallback(uint256)\":{\"details\":\"Refuse a callback if the price is not enough.\",\"params\":{\"callbackId\":\"callback proposition ID\"}},\"revokeHolder(uint256,address)\":{\"details\":\"Function to revoke holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setCallbackAutoExecuteMaxAddresses(uint256)\":{\"details\":\"Maximum addresses to execute automatically the callback when is accepted.\",\"params\":{\"newMax\":\"new maximum\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"},\"returns\":{\"_0\":\"transfer price\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockAddress(address)\":{\"details\":\"Function to unlock an address.\",\"params\":{\"addr\":\"The address to unlock\"}},\"unlockToken(uint256,uint256)\":{\"details\":\"Function to unlock a token.\",\"params\":{\"id\":\"The token ID\"}},\"updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to update a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be updated\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"uri(uint256)\":{\"params\":{\"id\":\"Token ID\"},\"returns\":{\"_0\":\"URI string\"}},\"withdraw(address,uint256)\":{\"details\":\"Function to withdraw ETH from the contract. TODO: Add permission ??\",\"params\":{\"amount\":\"amount to withdraw\",\"to\":\"recipent address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol\":\"StashBlox\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol\":{\"keccak256\":\"0x68715fc915b468b8c38d8657596c22d651c539b22f5420853faa44030513e288\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ed8839ae0a4cd7dfcf86512ab431c03350725c8fb12a1d1f0f04bb6ac847c8ab\",\"dweb:/ipfs/QmWZNRgkrqLUrThfivhLW6uD7r9EiG8wEtAZTMu13Kb9vP\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Metadata.sol\":{\"keccak256\":\"0x121c132f1a15fafd91c187380702cb32d60beab1a4054670efc987e36bc2b70f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://425182c1ecd27456fc2f1c3fd82444b17a13f2e4e503bb3f7b973e83d2ceb1bb\",\"dweb:/ipfs/QmU54fpZCpdGtjUAbQkr4cYikCzKKQqjS3LPNQpYpJXiA8\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0xd73f72cf3f4a2f4cde3e8f3950d60202e1aa89405e5aaedf971ced063261edd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e01873a56115a6f3f1f6ce5dee198bbc2023ed36178ad693099de8b24baf2074\",\"dweb:/ipfs/QmQ4B48S3idc1CQtZyzQV3HH5tYPLk3ncRtS2ovUWxFsqW\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Callable.sol\":{\"keccak256\":\"0x3054f1906873f4c0e7730d32377b4c710e13b5e198b4f47fc357ae60873a377f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://13201ad22d9678af2267dcfbfdd201f7dae50dcd427fdc9fc4911521ed232656\",\"dweb:/ipfs/QmbgeMwCFWiC6Qq3kq4rPc9iBRpqcAh2wuBYS3jgELkm6V\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0xcdcde4ba36ac03653ff34931b8e89a657f6f156f15d9bf376cf5925c7611ed62\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://00cbe945c44ff218abbc143095cf9286f5fc5f3a24467049d7c3cbdc61bec29f\",\"dweb:/ipfs/QmRAWFt5KTo6THg45BcmZbPJYhHcqgCJ8tuexsjQcY1LYu\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol\":{\"keccak256\":\"0x10f1e7da4efe2807b1c3d578056f69a7ace572672879c108a38de55675031047\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0d35b3517652d7d4a0c6a44aee81fef110526d728656aa1706745795bdf7041d\",\"dweb:/ipfs/QmRTSSAKFivUyRyNYpZJCmcZRgwvy9jH4bRDnGyCwgNuiG\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/GSNCapable.sol\":{\"keccak256\":\"0xe62044b6d2130c6f00fc99898edf8605ca1cf1b0825ab13e2f5b78d7a0a5906c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://512c10b024ae37f020cc05fc2fa909793d8762eb210d894ead5e27bb1be55ebc\",\"dweb:/ipfs/QmNxYnbQELq18PKYvgRLj1QEpKiY1UpWGCQwSA2ezcnUGQ\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Lockable.sol\":{\"keccak256\":\"0x00364407db5b4d2bd9518aaaa84492c8c10bea5992b3eb827eaf89a5a340ccfa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a4a3e17cc1b107a36621220f17f2dcd469eabbe69c253ea6743fbbec9889fb0\",\"dweb:/ipfs/QmfEno1Ai3ijUex6BRjcGkz8SJKrArbe6Kub3x7rXZ8Mfo\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x995c62950584716d782295bdc47ec89a822d1e856955e626461e55f7a78058ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7bdbc7822173239170c192563023beb95d31aeb0102c0f66cc12cedb506e6f89\",\"dweb:/ipfs/Qmb7WJEDHnXxRqDQumCGcDkAur1h1uPEomcWrqC2TRkRDF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0xd5019a259ee94a211172c19d30424b28a912d02507ab220a096046ac4fdd2068\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://daa7dc075a17ef143feca5828e939af66e383b404cce31fb47fafde265f03305\",\"dweb:/ipfs/QmaGPAikYBr8GmJUbzKTzRRtWLfqXwvAHwkZYcogZA4SdD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/MultiToken.sol\":{\"keccak256\":\"0x5922c39f3d83a885d67924ba9c2416cd6429c7f775491586c4ab77f9444397a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f19db9460901c3ec860b56ff7f6b85c4018527e44200692b7fba0e92f8f5c1fa\",\"dweb:/ipfs/QmNW8wyDYtKX5rp5uF15JZD1swSDR5WGjEBif49Ax3mgBM\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0x8779572989fe688bfa3e374845056f5798d1db5a9533e3ce4375713fd352f979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c90a1f8d3d2e62b615c5e807578a030ce04eb3d21c506a7f79522dc87d9870\",\"dweb:/ipfs/QmRYy1iTAha4CZPX2T8gU2Eh9FnjwdKKgRFpAWTiHM3KyP\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":{\"keccak256\":\"0xd8b068c736d1b5ef364d6f73d6fef3788034d3250fb3cd9e8d44d099aaca7b52\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fae9426d967287250027a3fb45c6499614b3365ee98debed327affa09d254d08\",\"dweb:/ipfs/Qmf8ap2iGa8UK7wSzMTxMM2tp4MaTpm5WXZCwS41Uj9ZCg\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0x6e349cd9263193acda067d4b2fe7cebd1a0d169c7b4ab1fb38a664ecdb60065f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5eed5b309c557a2a496a87659ccbae4561ee0121326b30df10ea881fd71872bc\",\"dweb:/ipfs/QmeJRw3fSUAYb9roQpSh7KzpRwTpPcdW8bobg5qpFofFjF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol\":{\"keccak256\":\"0x7600279145a6d5946aedfdde44210c571b7f60ce29cd8ea5182516695c773168\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5f5f06842e098a273d052929c173ca66c6f1008e7e30f0aaa2407fb66b6feee2\",\"dweb:/ipfs/QmZ3KWAQsuSCNvYGHooTpfjJWffuK7qQEWXTkBCC6AFxSW\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x700249db0ed6aa2be4fc7675c9cdb5cdcc4e49abec52eefa58c2b02092784188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8babf975072c842269b5cb10aedfed77307629626cc6ab6173e68462eaebb\",\"dweb:/ipfs/QmVSAHYR99a4Q6jrrSqvRxMEnD2dhNAUPLyGA9KGJGTLDL\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "133:387:0:-:0;;;281:236;;;;;;;;;-1:-1:-1;649:32:15;668:12;:10;:12::i;:::-;649:18;:32::i;:::-;348:2:0;306:7;:44;360:48;;;;;;;;;;;;;;;;;;;;;;;:15;;:48;:::i;:::-;-1:-1:-1;418:52:0;;;;;;;;;;;;;;;;;;;;;;;:24;;:52;:::i;:::-;-1:-1:-1;480:30:0;499:10;480:18;:30::i;:::-;133:387;;782:556:10;844:19;898:2;879:8;:21;;;;:55;;-1:-1:-1;904:30:10;923:10;904:18;:30::i;:::-;875:457;;;-1:-1:-1;;;1240:14:10;1236:22;1223:36;1220:2;1216:44;1191:83;;;-1:-1:-1;1311:10:10;875:457;782:556;:::o;1691:239:15:-;-1:-1:-1;;;;;1764:22:15;;1756:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:13;;1844:45;;-1:-1:-1;;;;;1844:45:15;;;;1865:13;;1844:45;;1865:7;;1844:45;1899:13;:24;;-1:-1:-1;;;;;;1899:24:15;-1:-1:-1;;;;;1899:24:15;;;;;;;;;;1691:239::o;384:146:10:-;496:27;;-1:-1:-1;;;;;496:27:10;;;483:40;;;;384:146::o;133:387:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;133:387:0;;;-1:-1:-1;133:387:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "133:387:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1240:46:18;1276:9;1240:6;:20;1247:12;:10;:12::i;:::-;-1:-1:-1;;;;;1240:20:18;;;;;;;;;;;;-1:-1:-1;1240:20:18;:31;;;;:35;:46::i;:::-;1206:6;:20;1213:12;:10;:12::i;:::-;-1:-1:-1;;;;;1206:20:18;;;;;;;;;;;;-1:-1:-1;1206:20:18;:31;;:80;133:387:0;;;;;1687:234:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1687:234:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1092:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1092:255:14;-1:-1:-1;;;;;;1092:255:14;;:::i;:::-;;;;;;;;;;;;;;;;;;6733:141;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6733:141:14;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5881:778;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;-1:-1:-1;5881:778:14;;-1:-1:-1;5881:778:14;-1:-1:-1;5881:778:14;:::i;:::-;;2085:22:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2085:22:9;;;;;;-1:-1:-1;;;;;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3067:455:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3067:455:7;;:::i;977:99:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;977:99:11;-1:-1:-1;;;;;977:99:11;;:::i;536:144:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;536:144:7;;:::i;2113:39:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2113:39:9;-1:-1:-1;;;;;2113:39:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2205:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2205:47:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2205:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;465:151:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:151:17;;-1:-1:-1;465:151:17;;-1:-1:-1;;;;465:151:17:i;2552:167:10:-;;;;;;;;;;;;;:::i;2253:823:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;2253:823:12;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;-1:-1:-1;;;;;2253:823:12;;:::i;2245:631:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2245:631:14;;;;;;;;-1:-1:-1;2245:631:14;;-1:-1:-1;;;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2245:631:14;;-1:-1:-1;2245:631:14;;-1:-1:-1;;;;;2245:631:14:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:146:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;384:146:10;-1:-1:-1;;;;;384:146:10;;:::i;961:161:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;961:161:8;;;;;;;;:::i;1414:132:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1414:132:12;;;;;;-1:-1:-1;;;;;1414:132:12;;:::i;388:140:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:140:16;;;;;;-1:-1:-1;;;;;388:140:16;;:::i;684:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;684:140:16;;;;;;-1:-1:-1;;;;;684:140:16;;:::i;631:119:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;631:119:13;-1:-1:-1;;;;;631:119:13;;:::i;887:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;887:117:13;-1:-1:-1;;;;;887:117:13;;:::i;733:144:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;733:144:12;;;;;;-1:-1:-1;;;;;733:144:12;;:::i;1137:93:15:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1137:93:15;;;;;;;;;;;;;;2329:636:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2329:636:7;;:::i;3354:308:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3354:308:14;;;;;;;;;;:::i;537:129:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;537:129:11;;;;;;;:::i;1182:102::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1182:102:11;-1:-1:-1;;;;;1182:102:11;;:::i;320:125::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;320:125:11;;;;;;;:::i;770:105::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;770:105:11;;:::i;1150:116:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1150:116:13;-1:-1:-1;;;;;1150:116:13;;:::i;3623:1068:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3623:1068:7;;:::i;2105:1040:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;2105:1040:13;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;:::i;1401:113:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1401:113:11;-1:-1:-1;;;;;1401:113:11;;:::i;564:159:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;564:159:8;;;;;;;;;;;;;:::i;1046:142:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1046:142:12;;;;;;-1:-1:-1;;;;;1046:142:12;;:::i;1030:1170:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1030:1170:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1030:1170:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1030:1170:7;;-1:-1:-1;;1030:1170:7;;;-1:-1:-1;1030:1170:7;;-1:-1:-1;;1030:1170:7:i;3943:157:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3943:157:14;;;;;;;;;;:::i;2158:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2158:41:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2158:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;4654:638:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4654:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4654:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4654:638:14;;;;;;;;;;-1:-1:-1;4654:638:14;;-1:-1:-1;4654:638:14;-1:-1:-1;4654:638:14;:::i;1379:116:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1379:116:15;-1:-1:-1;;;;;1379:116:15;;:::i;891:123:18:-;;;;;;;;;;;;;;;;-1:-1:-1;891:123:18;-1:-1:-1;;;;;891:123:18;;:::i;471:279::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;471:279:18;;;;;;;;:::i;3372:647:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13:i;4915:464:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4915:464:7;;;;;;;:::i;782:556:10:-;844:19;898:2;879:8;:21;;;;:55;;;904:30;923:10;904:18;:30::i;:::-;875:457;;;-1:-1:-1;;;1240:14:10;1236:22;1223:36;1220:2;1216:44;1191:83;;;-1:-1:-1;1311:10:10;875:457;782:556;:::o;867:176:20:-;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;-1:-1:-1;867:176:20;;;;;:::o;1687:234:14:-;1765:7;-1:-1:-1;;;;;1792:21:14;;1784:77;;;;-1:-1:-1;;;1784:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1878:11:14;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1878:28:14;;;;;;:19;;;;:28;;;:36;;1687:234::o;1092:255::-;1172:4;-1:-1:-1;;;;;;1190:42:14;;-1:-1:-1;;;1190:42:14;;:99;;-1:-1:-1;;;;;;;1246:43:14;;-1:-1:-1;;;1246:43:14;1190:99;1186:135;;;-1:-1:-1;1308:4:14;1301:11;;1186:135;-1:-1:-1;1335:5:14;1092:255;;;;:::o;6733:141::-;6833:15;6822:45;;;;;;;;;;;;;-1:-1:-1;;6822:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;6790:13;;6822:45;;;;6833:15;;6822:45;;6833:15;6822:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6850:16;6863:2;6850:12;:16::i;:::-;6822:10;:45::i;5881:778::-;6112:27;;;6104:86;;;;-1:-1:-1;;;6104:86:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6208:16:14;;6200:69;;;;-1:-1:-1;;;6200:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6308:12;:10;:12::i;:::-;-1:-1:-1;;;;;6300:20:14;:4;-1:-1:-1;;;;;6300:20:14;;:68;;;;6324:36;6341:4;6347:12;:10;:12::i;:::-;6324:16;:36::i;:::-;:44;;6364:4;6324:44;6300:68;6279:170;;;;-1:-1:-1;;;6279:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6460:37;6475:4;6481:2;6485:3;;6460:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:37:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6490:6:14;;-1:-1:-1;6490:6:14;;;;6460:37;;;6490:6;;6460:37;6490:6;6460:37;;;;;;;;;-1:-1:-1;6460:14:14;;-1:-1:-1;;;6460:37:14:i;:::-;6547:2;-1:-1:-1;;;;;6513:50:14;6541:4;-1:-1:-1;;;;;6513:50:14;6527:12;:10;:12::i;:::-;-1:-1:-1;;;;;6513:50:14;;6551:3;;6556:6;;6513:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6513:50:14;;;;;;;;;;;;;;;;;-1:-1:-1;6513:50:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6513:50:14;;;;;;;;-1:-1:-1;6513:50:14;;-1:-1:-1;;;;;;;6513:50:14;6574:78;6610:12;:10;:12::i;:::-;6624:4;6630:2;6634:3;;6574:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6574:78:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6639:6:14;;-1:-1:-1;6639:6:14;;;;6574:78;;;6639:6;;6574:78;6639:6;6574:78;;;;;;;;;-1:-1:-1;;6574:78:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6647:4:14;;-1:-1:-1;6647:4:14;;;;6574:78;;6647:4;;;;6574:78;;;;;;;;;-1:-1:-1;6574:35:14;;-1:-1:-1;;;6574:78:14:i;:::-;5881:778;;;;;;;;:::o;2085:22:9:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2085:22:9;;;;;;;;;;;-1:-1:-1;;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2085:22:9;;-1:-1:-1;2085:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2085:22:9;;;;;;;;;;;-1:-1:-1;;;;;2085:22:9;;;;;;-1:-1:-1;2085:22:9;:::o;3067:455:7:-;3131:24;;:::i;:::-;3158:22;;;;:10;:22;;;;;;;;;3131:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3131:49:7;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3158:22;;3131:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3131:49:7;;;;;;;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;-1:-1:-1;;3199:16:7;;3131:49;;-1:-1:-1;;3199:21:7;;;;:90;;-1:-1:-1;3258:16:7;;3240:49;;3276:12;:10;:12::i;:::-;3240:17;:49::i;:::-;3199:135;;;;-1:-1:-1;3309:16:7;;;;:25;3199:135;:181;;;;-1:-1:-1;3354:17:7;;;;:26;3199:181;3191:225;;;;;-1:-1:-1;;;3191:225:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;3427:22;;;;:10;:22;;;;;;:38;;:45;;-1:-1:-1;;;;3427:45:7;-1:-1:-1;;;3427:45:7;;;3488:27;3438:10;;-1:-1:-1;;;;;;;;;;;3488:27:7;;3067:455;;:::o;977:99:11:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;1041:12:11::1;;::::0;;;:6:::1;:12;::::0;;;;:28;;-1:-1:-1;;1041:28:11::1;;;::::0;;977:99::o;536:144:7:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;625:7:7::1;:48:::0;536:144::o;2113:39:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2205:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2205:47:9;;;;-1:-1:-1;;;2205:47:9;;;;;-1:-1:-1;;;2205:47:9;;;;;-1:-1:-1;;;2205:47:9;;;;;-1:-1:-1;;;2205:47:9;;;;;-1:-1:-1;;;2205:47:9;;;;;:::o;465:151:17:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;562:47:17::1;:30;595:14:::0;562:47:::1;;:::i;:::-;;465:151:::0;:::o;2552:167:10:-;2688:24;2681:31;;;;;;;-1:-1:-1;;2681:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2612:13;;2681:31;;2688:24;;2681:31;;2688:24;2681:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:167;:::o;2253:823:12:-;2688:2;427:30;440:2;444:12;:10;:12::i;:::-;427;:30::i;:::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;2731:1:::1;2710:11:::0;;;:7:::1;:11;::::0;;;;:18;2702:48:::1;;;::::0;;-1:-1:-1;;;2702:48:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2702:48:12;;;;;;;;;;;;;::::1;;2761:262;2771:2;2793:12;2825:15;2860:14;2894:24;2938:21;2979:9;3008:14;2761:9;:262::i;:::-;3039:30;::::0;;;;;;;3052:2;;3039:30:::1;::::0;;;;;::::1;::::0;;::::1;2253:823:::0;;;;;;;;;:::o;2245:631:14:-;2394:16;2453:3;:10;2434:8;:15;:29;2426:90;;;;-1:-1:-1;;;2426:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:30;2574:8;:15;2560:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2560:30:14;;2527:63;;2606:9;2601:238;2625:8;:15;2621:1;:19;2601:238;;;2692:1;-1:-1:-1;;;;;2669:25:14;:8;2678:1;2669:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2669:25:14;;;2661:90;;;;-1:-1:-1;;;2661:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:7;:15;2792:3;2796:1;2792:6;;;;;;;;;;;;;;2784:15;;;;;;;;;;;:23;;:36;2808:8;2817:1;2808:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2784:36:14;-1:-1:-1;;;;;2784:36:14;;;;;;;;;;;;:44;;;2765:13;2779:1;2765:16;;;;;;;;;;;;;;;;;:63;2642:3;;2601:238;;;-1:-1:-1;2856:13:14;2245:631;-1:-1:-1;;;2245:631:14:o;384:146:10:-;496:27;;-1:-1:-1;;;;;496:27:10;;;483:40;;;;384:146::o;961:161:8:-;1031:7;1077:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1077:28:8;;;;:19;;:28;;;;;:37;;;1057:58;;:15;;:19;:58::i;1414:132:12:-;1489:4;1512:27;1525:2;1529:9;1512:12;:27::i;388:140:16:-;462:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;-1:-1:-1;476:11:16::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;476:27:16;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:45:::0;;-1:-1:-1;;476:45:16::1;::::0;::::1;::::0;;388:140::o;684:::-;757:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;-1:-1:-1;812:5:16::1;771:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;771:27:16;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:46:::0;;-1:-1:-1;;771:46:16::1;::::0;;684:140::o;631:119:13:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;707:17:13::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;707:36:13::1;739:4;707:36;::::0;;631:119::o;887:117::-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:17:13::1;992:5;960:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;960:37:13::1;::::0;;887:117::o;733:144:12:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;821:11:12::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;821:30:12;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;821:49:12::1;866:4;821:49;::::0;;733:144::o;1137:93:15:-;1210:13;;-1:-1:-1;;;;;1210:13:15;1137:93;:::o;2329:636:7:-;2392:24;;:::i;:::-;2419:22;;;;:10;:22;;;;;;;;;2392:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2392:49:7;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:22;;2392:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2392:49:7;;;;;;;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;-1:-1:-1;;2460:16:7;;2392:49;;-1:-1:-1;;2460:21:7;;;;:66;;-1:-1:-1;2501:16:7;;;;:25;2460:66;:112;;;;-1:-1:-1;2546:17:7;;;;:26;2460:112;:300;;;;-1:-1:-1;2606:16:7;;2593:44;;2624:12;:10;:12::i;2593:44::-;:114;;;-1:-1:-1;2676:16:7;;2658:49;;2694:12;:10;:12::i;2658:49::-;2593:166;;;;2744:8;:15;;;-1:-1:-1;;;;;2728:31:7;:12;:10;:12::i;:::-;-1:-1:-1;;;;;2728:31:7;;2593:166;2452:344;;;;;-1:-1:-1;;;2452:344:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:22;;;;:10;:22;;;;;;;;:30;;:37;;-1:-1:-1;;;;2807:37:7;-1:-1:-1;;;2807:37:7;;;2892:23;;;;2861:15;;;;-1:-1:-1;;;;;2854:23:7;;;:6;:23;;;;;;2840:4;2854:34;:61;;;;;;;;2931:27;2818:10;;-1:-1:-1;;;;;;;;;;;2931:27:7;;2329:636;;:::o;3354:308:14:-;3466:8;-1:-1:-1;;;;;3450:24:14;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3450:24:14;;;3442:81;;;;-1:-1:-1;;;3442:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3584:8;3533:6;:20;3540:12;:10;:12::i;:::-;-1:-1:-1;;;;;3533:20:14;;;;;;;;;;;;;;;;;-1:-1:-1;3533:20:14;;;:48;;;;;;:38;;;;:48;;;;;:59;;-1:-1:-1;;3533:59:14;;;;;;;;;;;3622:12;:10;:12::i;:::-;-1:-1:-1;;;;;3607:48:14;;3646:8;3607:48;;;;;;;;;;;;;;;;;;;;3354:308;;:::o;537:129:11:-;615:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;629:30:11::1;642:2;646:12;629;:30::i;:::-;537:129:::0;;;:::o;1182:102::-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;1248:12:11::1;1272:5;1248:12:::0;;;:6:::1;:12;::::0;;;;:29;;-1:-1:-1;;1248:29:11::1;::::0;;1182:102::o;320:125::-;396:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;410:28:11::1;421:2;425:12;410:10;:28::i;770:105::-:0;828:4;850:18;865:2;850:14;:18::i;1150:116:13:-;1213:4;1236:23;1249:9;1236:12;:23::i;3623:1068:7:-;3686:24;;:::i;:::-;3713:22;;;;:10;:22;;;;;;;;;3686:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3686:49:7;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3713:22;;3686:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3686:49:7;;;;;;;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;-1:-1:-1;;3754:16:7;;3686:49;;-1:-1:-1;;3754:21:7;;;;:85;;-1:-1:-1;3808:16:7;;3795:44;;3826:12;:10;:12::i;3795:44::-;3754:162;;;;;3861:8;:26;;;3860:27;:55;;;;3891:8;:24;;;3860:55;3754:207;;;;-1:-1:-1;3936:16:7;;;;:25;3754:207;:253;;;;-1:-1:-1;3981:17:7;;;;:26;3754:253;:366;;;;;4054:66;4069:8;:16;;;4087:8;:14;;;4103:8;:16;;;4054:14;:66::i;:::-;4027:8;:23;;;:93;;3754:366;3746:447;;;;-1:-1:-1;;;3746:447:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4204:22;;;;:10;:22;;;;;;:31;;:38;;-1:-1:-1;;;;4204:38:7;-1:-1:-1;;;4204:38:7;;;4258:27;4215:10;;-1:-1:-1;;;;;;;;;;;4258:27:7;;4300:16;;;;:23;:27;4296:389;;4343:53;4360:10;4372:8;:16;;;:23;4343:16;:53::i;:::-;4296:389;;;4464:7;:39;;4425:16;;4417:25;;:7;:25;;;;;;:36;;:43;:86;4413:272;;4556:16;;4548:25;;;;:7;:25;;;;;:36;;:43;4519:73;;4536:10;;4519:16;:73::i;4413:272::-;4623:51;4634:8;:16;;;4652:8;:21;;;4623:10;:51::i;2105:1040:13:-;331:26;344:12;:10;:12::i;:::-;331;:26::i;:::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;323:62:13;;;;;;;;;;;;;;;2682:378:::1;2695:9;2727:2;2752:6;2781:8;2812:12;2847:15;2885:14;2922:24;2969:21;3013:9;3045:14;2682:12;:378::i;:::-;-1:-1:-1::0;;;;;3075:63:13;::::1;3112:1;3090:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;3075:63:13::1;-1:-1:-1::0;;;;;;;;;;;3127:2:13::1;3131:6;3075:63;;;;;;;;;;;;;;;;;;;;;;;;2105:1040:::0;;;;;;;;;;;:::o;1401:113:11:-;1463:4;1485:22;1502:4;1485:16;:22::i;564:159:8:-;654:7;680:36;697:7;706:2;710:5;680:16;:36::i;:::-;673:43;564:159;-1:-1:-1;;;;564:159:8:o;1046:142:12:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;1176:5:12::1;1131:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1131:30:12;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1131:50:12::1;::::0;;1046:142::o;1030:1170:7:-;1190:22;;;;:10;:22;;;;;:30;:35;:66;;;;-1:-1:-1;1255:1:7;1229:16;;;:7;:16;;;;;:23;:27;;1190:66;:138;;;;;1289:39;1304:7;1313:5;1320:7;1289:14;:39::i;:::-;1276:9;:52;;1190:138;:215;;;;-1:-1:-1;1366:7:7;:39;1348:14;;:57;;1190:215;1182:254;;;;;-1:-1:-1;;;1182:254:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:18;1497:16;;;:7;:16;;;;;:38;;;;1469:23;;1468:80;;1542:5;;1469:67;;:27;:67::i;:::-;1468:73;;:80::i;:::-;1447:101;;1584:566;;;;;;;;1616:7;1584:566;;;;1708:5;1584:566;;;;1743:9;1584:566;;;;2068:1;1584:566;;;;2127:12;1584:566;;;;1645:12;:10;:12::i;:::-;-1:-1:-1;;;;;1584:566:7;;;;;1786:10;;;1785:108;;-1:-1:-1;1833:16:7;;;;:7;:16;;;;;1882:10;;1833:24;;;;;1858:12;:10;:12::i;:::-;-1:-1:-1;;;;;1833:38:7;;;;;;;;;;;;-1:-1:-1;1833:38:7;:46;:59;1785:108;:163;;;;1946:1;1929:7;:14;:18;1785:163;1584:566;;;;1979:5;1584:566;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:22;;;:10;:22;;;;;;:591;;;;;;;;1584:566;1559:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;1559:591:7;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;1559:591:7;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;1559:591:7;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;1559:591:7;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;;;;;;1559:591:7;;;-1:-1:-1;;;;;;1559:591:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;:591;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2166:27:7;;2182:10;;-1:-1:-1;;;;;;;;;;;;2166:27:7;;;;1030:1170;;;;;;:::o;3943:157:14:-;4034:4;4057:36;4075:7;4084:8;4057:17;:36::i;2158:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2158:41:9;;;;-1:-1:-1;;;2158:41:9;;;;;-1:-1:-1;;;2158:41:9;;;;:::o;4654:638:14:-;-1:-1:-1;;;;;4856:16:14;;4848:69;;;;-1:-1:-1;;;4848:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4956:12;:10;:12::i;:::-;-1:-1:-1;;;;;4948:20:14;:4;-1:-1:-1;;;;;4948:20:14;;:68;;;;4972:36;4989:4;4995:12;:10;:12::i;4972:36::-;:44;;5012:4;4972:44;4948:68;4927:170;;;;-1:-1:-1;;;4927:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5108:30;5118:4;5124:2;5128;5132:5;5108:9;:30::i;:::-;5189:2;-1:-1:-1;;;;;5154:49:14;5183:4;-1:-1:-1;;;;;5154:49:14;5169:12;:10;:12::i;:::-;-1:-1:-1;;;;;5154:49:14;-1:-1:-1;;;;;;;;;;;5193:2:14;5197:5;5154:49;;;;;;;;;;;;;;;;;;;;;;;;5214:71;5245:12;:10;:12::i;:::-;5259:4;5265:2;5269;5273:5;5280:4;;5214:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5214:30:14;;-1:-1:-1;;;5214:71:14:i;:::-;4654:638;;;;;;:::o;1379:116:15:-;901:10;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;1460:28:::1;1479:8;1460:18;:28::i;:::-;1379:116:::0;:::o;891:123:18:-;-1:-1:-1;;;;;971:10:18;;;;;;:6;:10;;;;;:21;;;:36;;997:9;971:25;:36::i;:::-;-1:-1:-1;;;;;947:10:18;;;;;;;:6;:10;;;;;:21;;:60;891:123::o;471:279::-;-1:-1:-1;;;;;544:10:18;;;;;;:6;:10;;;;;:21;;;:31;-1:-1:-1;544:31:18;536:64;;;;;-1:-1:-1;;;536:64:18;;;;;;;;;;;;-1:-1:-1;;;536:64:18;;;;;;;;;;;;;;;629:26;;611:12;;-1:-1:-1;;;;;629:7:18;;;644:6;;611:12;629:26;611:12;629:26;644:6;629:7;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;610:45;;;673:7;665:37;;;;;-1:-1:-1;;;665:37:18;;;;;;;;;;;;-1:-1:-1;;;665:37:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;;712:10:18;;;;;;;:6;:10;;;;;:21;;:31;;;;;;;;471:279::o;3372:647:13:-;331:26;344:12;:10;:12::i;331:26::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;323:62:13;;;;;;;;;;;;;;;3573:1:::1;3552:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;3608:14;:21;3594:3;:10;:35;3552:77;3544:107;;;::::0;;-1:-1:-1;;;3544:107:13;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3544:107:13;;;;;;;;;;;;;::::1;;3667:9;3662:351;3686:3;:10;3682:1;:14;3662:351;;;3717:42;3729:2;3733:3;3737:1;3733:6;;;;;;;;;;;;;;3741:14;3756:1;3741:17;;;;;;;;;;;;;;3717:11;:42::i;:::-;3884:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3884:25:13::1;::::0;3794:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;3779:223:13::1;-1:-1:-1::0;;;;;;;;;;;3943:3:13::1;3947:1;3943:6;;;;;;;;;;;;;;3983:7;:11;3991:2;3983:11;;;;;;;;;;;:18;;;3779:223;;;;;;;;;;;;;;;;;;;;;;;;3698:3;;3662:351;;;;3372:647:::0;;;:::o;4915:464:7:-;4996:24;;:::i;:::-;5023:22;;;;:10;:22;;;;;;;;;4996:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4996:49:7;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5023:22;;4996:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4996:49:7;;;;;;;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;-1:-1:-1;;5064:16:7;;4996:49;;-1:-1:-1;;5064:21:7;;;;:66;;-1:-1:-1;5105:17:7;;;;:25;;5126:4;5105:25;5064:66;:113;;;;-1:-1:-1;5150:18:7;;;;:27;5064:113;5056:142;;;;;-1:-1:-1;;;5056:142:7;;;;;;;;;;;;-1:-1:-1;;;5056:142:7;;;;;;;;;;;;;;;5209:37;5226:10;5238:7;5209:16;:37::i;:::-;5261:22;;;;:10;:22;;;;;:32;;;-1:-1:-1;;;5261:32:7;;;;5257:116;;;5309:53;5322:8;:16;;;5340:8;:21;;;5309:12;:53::i;933:419:21:-;986:13;1011:10;1044:1;1055:68;1062:6;;1055:68;;1084:7;;;;;;1110:2;1105:7;;1055:68;;;1132:16;1161:5;1151:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16:21;;1132:35;;1182:6;1177:141;1194:5;1192:1;:7;1177:141;;;1228:2;1224:1;:6;1220:10;;1265:21;1283:1;1265:11;:21::i;:::-;1244:3;1260:1;1256;1248:5;:9;:13;1244:18;;;;;;;;;;;:42;-1:-1:-1;;;;;1244:42:21;;;;;;;;-1:-1:-1;1305:2:21;1300:7;;;-1:-1:-1;1201:3:21;;1177:141;;;-1:-1:-1;1341:3:21;933:419;-1:-1:-1;;;;933:419:21:o;86:515::-;305:10;;292;;163:13;;213:1;;250;;163:13;;292:23;281:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:35:21;-1:-1:-1;262:54:21;-1:-1:-1;262:54:21;365:6;;405:76;421:3;:10;417:1;:14;405:76;;;464:3;468:1;464:6;;;;;;;;;;;;;;;;452:4;457:3;;;;;;452:9;;;;;;;;;;;:18;-1:-1:-1;;;;;452:18:21;;;;;;;;-1:-1:-1;433:3:21;;405:76;;;-1:-1:-1;499:1:21;490:76;506:3;:10;502:1;:14;490:76;;;549:3;553:1;549:6;;;;;;;;;;;;;;;;537:4;542:3;;;;;;537:9;;;;;;;;;;;:18;-1:-1:-1;;;;;537:18:21;;;;;;;;-1:-1:-1;518:3:21;;490:76;;;-1:-1:-1;589:4:21;;86:515;-1:-1:-1;;;;;;;86:515:21:o;4778:404:8:-;4894:19;4928:1;4916:9;:13;:51;;-1:-1:-1;;;;;4944:12:8;;;;;;:6;:12;;;;;:23;;;4916:51;;;4932:9;4916:51;4894:73;;4982:9;4977:157;5001:3;:10;4997:1;:14;4977:157;;;5046:77;5062:40;5074:4;5080:2;5084:3;5088:1;5084:6;;;;;;;;;;;;;;5092;5099:1;5092:9;;;;;;;;;;;;;;5062:11;:40::i;:::-;5046:77;;;;;;;;;;;;-1:-1:-1;;;5046:77:8;;;;:11;;:77;:15;:77::i;:::-;5032:91;-1:-1:-1;5013:3:8;;4977:157;;;;5143:32;5157:4;5163:11;5143:13;:32::i;:::-;4778:404;;;;;:::o;7497:558:14:-;7740:15;:2;-1:-1:-1;;;;;7740:13:14;;:15::i;:::-;7737:312;;;7898:52;;;-1:-1:-1;;;;;7796:154:14;;7813:2;-1:-1:-1;;;;;7796:43:14;;7840:8;7850:4;7856:3;7861:6;7869:4;7796:78;;;;;;;;;;;;;-1:-1:-1;;;;;7796:78:14;;;;;;-1:-1:-1;;;;;7796:78:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7796:78:14;-1:-1:-1;;;;;;7796:154:14;;7771:267;;;;-1:-1:-1;;;7771:267:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7553:160:7;7639:4;7662:11;;;:7;:11;;;;;;:26;;;-1:-1:-1;;;;;7662:44:7;;;:26;;:44;;7553:160::o;2013:102:15:-;2095:13;;2056:4;;-1:-1:-1;;;;;2095:13:15;2079:12;:10;:12::i;:::-;-1:-1:-1;;;;;2079:29:15;;2072:36;;2013:102;:::o;3177:162:12:-;3253:4;3276:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3276:30:12;;;;:19;;:30;;;;;:42;;;;;;:56;;;3322:10;:8;:10::i;4263:1359:13:-;4682:23;4724:9;4719:120;4743:24;:31;4739:1;:35;4719:120;;;4812:24;4837:1;4812:27;;;;;;;;;;;;;;4793:46;;;;4776:3;;;;;4719:120;;;;4882:1;4858:14;:21;:25;:75;;;;-1:-1:-1;4887:46:13;4858:75;:119;;;;;4953:15;4972:5;4953:24;4858:119;:168;;;;;5021:5;4997:21;:29;4858:168;4850:214;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;;;;5075:11;;;;:7;:11;;;;;;;;:24;;;:39;;;5161:18;;5124:34;;;;:55;;;;5224:18;;;;-1:-1:-1;5189:32:13;;:53;5252:74;;;;;;;5289:15;5252:74;;5306:18;;;;5252:74;;;;:30;;;;:74;;5240:1;5252:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5336:11:13;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;5389:11:13;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;5462:11:13;;;;:7;:11;;;;;;:33;;;:57;;;;5529:21;;;;:33;;-1:-1:-1;;;;5529:33:13;-1:-1:-1;;;5529:33:13;;;;;;;;;;;-1:-1:-1;;;;;;5572:43:13;-1:-1:-1;;;;;5572:43:13;;;;;;;;;;-1:-1:-1;;;;4263:1359:13:o;1307:134:20:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;1771:153:11:-;1867:5;1846:11;;;:7;:11;;;;;;;;;:18;;:26;;-1:-1:-1;;;;1846:26:11;;;1887:30;;;;;;;1854:2;;1887:30;;;;;;;;;1771:153;;:::o;1615:150::-;1688:11;;;;:7;:11;;;;;;;;;:18;;:25;;-1:-1:-1;;;;1688:25:11;-1:-1:-1;;;1688:25:11;;;1728:30;;;;;;;1696:2;;1728:30;;;;;;;;;1615:150;;:::o;1930:107::-;1989:4;2012:11;;;:7;:11;;;;;:18;;;-1:-1:-1;;;2012:18:11;;;;;1930:107::o;4120:137:13:-;-1:-1:-1;;;;;4207:17:13;;4184:4;4207:17;;;:6;:17;;;;;:29;;;;:43;;;4240:10;:8;:10::i;7034:513:7:-;7198:14;;7139:7;;;;7194:305;;7278:16;;;;:7;:16;;;;;7250:75;;7278:24;;;;;7303:12;:10;:12::i;:::-;-1:-1:-1;;;;;7278:38:7;;;;;;;;;;;;;;;-1:-1:-1;7278:38:7;;;:46;7250:16;;;:7;:16;;;;:23;;:27;:75::i;:::-;7233:92;;7194:305;;;7361:6;7356:133;7373:7;:14;7369:1;:18;7356:133;;;7430:7;:16;7438:7;7430:16;;;;;;;;;;;:24;;:36;7455:7;7463:1;7455:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7430:36:7;;;;;;;;;;;-1:-1:-1;7430:36:7;:44;7412:62;;;;;7389:3;;7356:133;;;;7194:305;7515:25;:14;7534:5;7515:18;:25::i;:::-;7508:32;7034:513;-1:-1:-1;;;;;7034:513:7:o;5480:1548::-;5562:15;5580:22;;;:10;:22;;;;;:30;;5648;;;;:37;5621:24;;5648:174;;5795:16;;;;:7;:16;;;;;:27;;5648:174;;;5727:22;;;;:10;:22;;;;;:30;;5648:174;5621:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5621:201:7;;;;;;;;;;;;;;;;-1:-1:-1;;5847:14:7;;5833:11;5891:22;;;:10;:22;;;;;:34;;;5621:201;;-1:-1:-1;;;5847:18:7;;;;5891:34;-1:-1:-1;5833:11:7;-1:-1:-1;;5949:15:7;;;:22;-1:-1:-1;5949:46:7;;5992:3;5949:46;;;5982:7;5974:5;:15;5949:46;5935:60;-1:-1:-1;6006:22:7;6059:5;6042:715;6071:3;6066:1;:8;6042:715;;6095:14;6112:7;6120:1;6112:10;;;;;;;;;;;;;;;;;;;6183:1;6140:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6140:32:7;;;;:24;;:32;;;;;;;:40;6112:10;;-1:-1:-1;6140:44:7;6136:611;;6222:16;;;;:7;:16;;;;;;;;-1:-1:-1;;;;;6222:32:7;;;;;:24;;;;:32;;;;;;:40;6354:22;;;:10;:22;;;;;:28;;;6309:32;;;;;;;;6204:58;;;;6309:74;;:44;:74::i;:::-;-1:-1:-1;;;;;6280:14:7;;;;;;;:6;:14;;;;;;;;:25;;:103;;;;;;;;6516:22;;;:10;:22;;;;;;:29;;;;;6422:12;:10;:12::i;:::-;6628:16;;;;:7;:16;;;;;;;;-1:-1:-1;;;;;6628:32:7;;;;;:24;;;;:32;;;;;;:40;6407:262;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6407:262:7;;;;;;;;;;6731:1;6688:16;;;:7;:16;;;;;;;;-1:-1:-1;;;;;6688:32:7;;;;:24;;:32;;;;;:44;6136:611;-1:-1:-1;6076:3:7;;6042:715;;;-1:-1:-1;6780:22:7;;;;:10;:22;;;;;:29;;;6766:69;;-1:-1:-1;;;;;6780:29:7;6811:7;6820:14;6766:13;:69::i;:::-;6846:22;;;;:10;:22;;;;;:34;;:40;;;6900:10;;;6896:126;;;6926:22;;;;:10;:22;;;;;;:32;;:39;;-1:-1:-1;;;;6926:39:7;-1:-1:-1;;;6926:39:7;;;6984:27;6937:10;;-1:-1:-1;;;;;;;;;;;6984:27:7;;5480:1548;;;;;;;;:::o;5629:1167:13:-;6211:11;;;;:7;:11;;;;;:18;:23;:37;;;;;6247:1;6238:6;:10;6211:37;6203:67;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;;;;6281:11;;;;:7;:11;;;;;:27;;;6318:20;;;;:31;;;:20;6359:19;;;;;6379:12;:10;:12::i;:::-;-1:-1:-1;;;;;6359:33:13;-1:-1:-1;;;;;6359:33:13;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6465:4;6421:7;:11;6429:2;6421:11;;;;;;;;;;;:19;;:30;6441:9;-1:-1:-1;;;;;6421:30:13;-1:-1:-1;;;;;6421:30:13;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;6480:262;6490:2;6512:12;6544:15;6579:14;6613:24;6657:21;6698:9;6727:14;6480:9;:262::i;:::-;6753:36;6767:9;6778:2;6782:6;6753:13;:36::i;:::-;5629:1167;;;;;;;;;;;:::o;2043:114:11:-;-1:-1:-1;;;;;2129:12:11;2106:4;2129:12;;;:6;:12;;;;;:21;;;;;;;2043:114::o;2355:1317:8:-;2448:7;2559:11;;;:7;:11;;;;;:30;;:37;2448:7;;2519:15;;-1:-1:-1;;2559:41:8;2545:835;2630:19;2652:11;;;:7;:11;;;;;:30;;:33;;2683:1;;2652:33;;;;;;;;;;;;;;;;;;:36;;2702:12;2717:11;;;:7;:11;;;;;:30;;:33;;2652:36;;-1:-1:-1;2702:12:8;;2748:1;;2717:33;;;;;;;;;;;;;;;;2751:1;2717:36;;;;;;;;;2767:19;2805:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2805:28:8;;;;:19;;:28;;;;;:37;;;2717:36;;-1:-1:-1;2767:19:8;2805:52;-1:-1:-1;2801:569:8;;2907:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2907:28:8;;;;:19;;:28;;;;;:37;;;2891:66;;2951:5;;2892:53;;:10;;:14;:53::i;2891:66::-;2877:80;-1:-1:-1;2979:16:8;2975:37;;-1:-1:-1;3011:1:8;2975:37;3043:34;3071:5;3044:21;:11;3060:4;3044:15;:21::i;:::-;3043:27;;:34::i;:::-;3030:47;;;;3095:5;;;;;2801:569;3153:40;3187:5;3154:27;:10;3169:11;3154:14;:27::i;3153:40::-;3139:54;-1:-1:-1;3215:16:8;3211:37;;-1:-1:-1;3247:1:8;3211:37;3279:11;;-1:-1:-1;3279:11:8;;3321:34;3349:5;3322:21;:11;3338:4;3322:15;:21::i;3321:34::-;3308:47;;;;-1:-1:-1;;;;;2610:3:8;2545:835;;;-1:-1:-1;3437:11:8;;;;:7;:11;;;;;:20;;;3419:39;;:9;;3433:2;:24;3419:13;:39::i;:::-;3508:17;3539:11;;;:7;:11;;;;;:32;;;3407:51;;-1:-1:-1;3508:17:8;3528:56;;3578:5;;3529:43;;:5;;:9;:43::i;3528:56::-;3615:11;;;;:7;:11;;;;;:34;;;3508:76;;-1:-1:-1;3601:64:8;;3615:49;;3508:76;3615:38;:49::i;:::-;3601:9;;:13;:64::i;:::-;3594:71;2355:1317;-1:-1:-1;;;;;;;2355:1317:8:o;2304:459:20:-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:20;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:130;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;1239:203:17:-;1324:4;1347:41;1370:7;1379:8;1347:22;:41::i;:::-;:88;;;-1:-1:-1;;;;;;;1392:15:17;;;;;;;:6;:15;;;;;;;;:43;;;;;;:33;;;;:43;;;;;;;;1239:203::o;4414:306:8:-;4505:19;4539:1;4527:9;:13;:51;;-1:-1:-1;;;;;4555:12:8;;;;;;:6;:12;;;;;:23;;;4527:51;;;4543:9;4527:51;4505:73;;4602:69;4618:32;4630:4;4636:2;4640;4644:5;4618:11;:32::i;:::-;4602:69;;;;;;;;;;;;-1:-1:-1;;;4602:69:8;;;;:11;;:69;:15;:69::i;:::-;4588:83;;4681:32;4695:4;4701:11;4681:13;:32::i;6975:516:14:-;7193:15;:2;-1:-1:-1;;;;;7193:13:14;;:15::i;:::-;7190:295;;;7344:47;;;-1:-1:-1;;;;;7249:142:14;;7266:2;-1:-1:-1;;;;;7249:38:14;;7288:8;7298:4;7304:2;7308:5;7315:4;7249:71;;;;;;;;;;;;;-1:-1:-1;;;;;7249:71:14;;;;;;-1:-1:-1;;;;;7249:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7249:71:14;-1:-1:-1;;;;;;7249:142:14;;7224:250;;;;-1:-1:-1;;;7224:250:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1691:239:15;-1:-1:-1;;;;;1764:22:15;;1756:73;;;;-1:-1:-1;;;1756:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:13;;1844:45;;-1:-1:-1;;;;;1844:45:15;;;;1865:13;;1844:45;;1865:7;;1844:45;1899:13;:24;;-1:-1:-1;;;;;;1899:24:15;-1:-1:-1;;;;;1899:24:15;;;;;;;;;;1691:239::o;6802:766:13:-;6906:11;;;;:7;:11;;;;;:22;;:25;;6893:668;;6906:11;:25;;;;;;;;;;;;;;;;6984:11;;;:7;:11;;;;;;;:18;;6906:25;7025:20;;;6893:668;;;;;;;7128:34;;;;6893:668;;7187:32;;;;6893:668;;;;7244:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;6906:25:13;;;;6954:7;;6984:18;;7025:20;;7068:12;;6893:668;;;;;;7244:30;6906:25;7244:33;;;;;;;;;;;;;;7278:1;7244:36;;;;;;;;;6893:668;;7326:11;;;;:7;:11;;;;;;;;;:26;;6893:668;;;;;;;;;;;;;;;;;7326:26;;6893:668;;7326:26;6893:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6893:668:13;;;;;;;;;;;;;;;;-1:-1:-1;;;7375:11:13;;;;:7;:11;;;;;;;;;:36;;6893:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;7375:36:13;-1:-1:-1;6893:668:13;;7375:36;6893:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7434:11:13;;;;:7;:11;;;;;:33;;;;7490:21;;;;;7434:33;;-1:-1:-1;7490:21:13;-1:-1:-1;;;7490:21:13;;;;-1:-1:-1;;;;;;7534:26:13;6893:12;:668::i;607:320:21:-;660:4;695:1;690;:6;;;676:187;;-1:-1:-1;724:16:21;:20;;:16;719:26;712:33;;676:187;778:1;766:14;;:2;:14;;:32;;;;;796:2;790:1;784:14;;;;766:32;762:101;;;-1:-1:-1;826:25:21;;;:16;821:31;814:38;;2429:241:11;2530:12;2563:34;2577:4;2583:2;2587;2591:5;2563:13;:34::i;:::-;2562:35;2554:54;;;;;-1:-1:-1;;;2554:54:11;;;;;;;;;;;;-1:-1:-1;;;2554:54:11;;;;;;;;;;;;;;;2625:38;2643:4;2649:2;2653;2657:5;2625:17;:38::i;1877:187:20:-;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:20;;;1877:187::o;5188:290:8:-;5279:1;5267:9;:13;:32;;;;;5298:1;5284:11;:15;5267:32;5263:209;;;-1:-1:-1;;;;;5339:12:8;;;;;;:6;:12;;;;;:23;;;:40;;5367:11;5339:27;:40::i;:::-;-1:-1:-1;;;;;5313:12:8;;;;;;:6;:12;;;;;:23;;:66;5263:209;;;5398:9;5394:78;;-1:-1:-1;;;;;5426:12:8;;;;;;;;:6;:12;;;;;:23;;:37;5188:290::o;590:797:19:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:19;;;1329:51;-1:-1:-1;;590:797:19:o;976:255:16:-;1082:11;;;;:7;:11;;;;;:21;;;-1:-1:-1;;;1082:21:16;;;;1081:22;;:67;;-1:-1:-1;1107:11:16;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1107:30:16;;;;:19;;:30;;;;;:41;;;;;;;;1081:67;1073:100;;;;;-1:-1:-1;;;1073:100:16;;;;;;;;;;;;-1:-1:-1;;;1073:100:16;;;;;;;;;;;;;;;1183:41;1203:9;1214:2;1218:5;1183:19;:41::i;3969:338:20:-;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:20:o;717:516:17:-;807:4;;823:382;847:37;843:1;:41;823:382;;;954:1;909:30;940:1;909:33;;;;;;;;;-1:-1:-1;;;;;909:33:17;:47;905:290;;976:27;1020:30;1051:1;1020:33;;;;;;;;;1084:30;;;-1:-1:-1;;;1084:30:17;;-1:-1:-1;;;;;1084:30:17;;;;;;;;;1020:33;;;;-1:-1:-1;1076:51:17;;;;1020:33;;1084:21;;:30;;;;;;;;;;;;;;1020:33;1084:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1084:30:17;-1:-1:-1;;;;;1076:51:17;;1072:109;;;1158:4;1151:11;;;;;;1072:109;905:290;;886:3;;823:382;;;-1:-1:-1;1221:5:17;;717:516;-1:-1:-1;;;717:516:17:o;2163:213:11:-;2262:4;2285:18;2300:2;2285:14;:18::i;:::-;:44;;;;2307:22;2324:4;2307:16;:22::i;:::-;2285:68;;;;2333:20;2350:2;2333:16;:20::i;:::-;2285:84;;;-1:-1:-1;;2358:10:11;;2163:213;-1:-1:-1;;;2163:213:11:o;3678:683:8:-;3838:68;;;;;;;;;;;-1:-1:-1;;;3838:68:8;;;;;;;;3778:12;3838:11;;;:7;:11;;;;;-1:-1:-1;;;;;3838:25:8;;;;:19;;:25;;;;;;:33;:68;;3876:5;;3838:37;:68::i;:::-;3802:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3802:25:8;;;;:19;;:25;;;;;:104;3916:28;3930:2;3810;3938:5;3916:13;:28::i;:::-;3962:33;3979:4;3985:2;3989:5;3962:16;:33::i;:::-;3955:40;;4011:9;4006:327;4030:11;;;;:7;:11;;;;;:26;;:33;4026:37;;4006:327;;;4084:21;4108:11;;;:7;:11;;;;;:26;;:29;;4135:1;;4108:29;;;;;;;;;;;;;;;;;;4186:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;4108:29:8;;;;-1:-1:-1;4186:36:8;4223:1;;4186:39;;;;;;;;;;;;;;;;;-1:-1:-1;4275:47:8;4316:5;4276:34;:4;4186:39;4276:8;:34::i;4275:47::-;-1:-1:-1;;;;;4239:21:8;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;4065:3:8;4006:327;;1302:1013;1398:18;1419:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1419:30:8;;;;:19;;:30;;;;;:38;:49;;1462:5;1419:42;:49::i;:::-;1483:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1483:30:8;;;;:19;;:30;;;;;:38;1398:70;;-1:-1:-1;1479:768:8;;1548:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1548:30:8;;;;:19;;:30;;;;;:39;;;;;;;;1543:232;;-1:-1:-1;;;;;1607:17:8;;;;;;:6;:17;;;;;;;;:24;;;;:33;;;;;;;;;;;;;;;;;;1658:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1658:38:8;;;;;1714:30;;;:19;;;;:30;;;;;:39;:46;;-1:-1:-1;;1714:46:8;1658:38;1714:46;;;1543:232;1789:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1789:30:8;;;;:19;;:30;;;;;1831:15;1789:39;;;;:57;1479:768;;;1957:20;2000:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2000:30:8;;;;:19;;:30;;;;;:39;;;1980:60;;:15;;:19;:60::i;:::-;2054:19;2077:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2077:30:8;;;;:19;;:30;;;;;:38;1957:83;;-1:-1:-1;2054:19:8;2076:74;;2139:10;;2077:56;;1957:83;2077:42;:56::i;2076:74::-;2165:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2165:30:8;;;;:19;;:30;;;;;2207:15;:29;;;;2165:39;;;;:71;-1:-1:-1;;1479:768:8;2257:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2257:30:8;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;1302:1013:8:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport './lib/Callable.sol';\nimport './lib/Withdrawable.sol';\n\ncontract StashBlox is Callable, Withdrawable {\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        _config.callbackAutoExecuteMaxAddresses = 50;\n        _config.baseURI = \"http://stashblox.com/tokens/\";\n        _config.versionRecipient = \"1.0.0+opengsn.stashblox\";\n        _transferOwnership(msg.sender);\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol",
    "exportedSymbols": {
      "StashBlox": [
        36
      ]
    },
    "id": 37,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Callable.sol",
        "file": "./lib/Callable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 37,
        "sourceUnit": 966,
        "src": "70:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol",
        "file": "./lib/Withdrawable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 37,
        "sourceUnit": 3559,
        "src": "99:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Callable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 965,
              "src": "155:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Callable_$965",
                "typeString": "contract Callable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "155:8:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3558,
              "src": "165:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$3558",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "165:12:0"
          }
        ],
        "contractDependencies": [
          155,
          167,
          217,
          240,
          269,
          965,
          1588,
          1714,
          1798,
          2027,
          2187,
          2708,
          3172,
          3270,
          3356,
          3466,
          3558,
          4121
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 36,
        "linearizedBaseContracts": [
          36,
          3558,
          965,
          2027,
          3356,
          2187,
          2708,
          3172,
          3466,
          3270,
          1588,
          1798,
          1714,
          269,
          240,
          4121,
          167,
          155,
          217
        ],
        "name": "StashBlox",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "296:221:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "306:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1605_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "callbackAutoExecuteMaxAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1592,
                      "src": "306:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530",
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "348:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "306:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "306:44:0"
                },
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 17,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "360:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1605_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "baseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1594,
                      "src": "360:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "687474703a2f2f7374617368626c6f782e636f6d2f746f6b656e732f",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "378:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_699ad49e673d0ba571e0814a1cc2e9c5b4688dea54cab55db91df34a385ab8a4",
                        "typeString": "literal_string \"http://stashblox.com/tokens/\""
                      },
                      "value": "http://stashblox.com/tokens/"
                    },
                    "src": "360:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "360:48:0"
                },
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "418:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1605_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "versionRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1596,
                      "src": "418:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "312e302e302b6f70656e67736e2e7374617368626c6f78",
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "445:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_951a2f7d9c966c4b6247a8d66888062579f7aec39f781a1c4dcbbf3a041ee7a1",
                        "typeString": "literal_string \"1.0.0+opengsn.stashblox\""
                      },
                      "value": "1.0.0+opengsn.stashblox"
                    },
                    "src": "418:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "418:52:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "499:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 29,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3256,
                      "src": "480:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "480:30:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "185:91:0",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:0:0"
            },
            "scope": 36,
            "src": "281:236:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 37,
        "src": "133:387:0"
      }
    ],
    "src": "45:476:0"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol",
    "exportedSymbols": {
      "StashBlox": [
        36
      ]
    },
    "id": 37,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Callable.sol",
        "file": "./lib/Callable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 37,
        "sourceUnit": 966,
        "src": "70:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol",
        "file": "./lib/Withdrawable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 37,
        "sourceUnit": 3559,
        "src": "99:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Callable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 965,
              "src": "155:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Callable_$965",
                "typeString": "contract Callable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "155:8:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3558,
              "src": "165:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$3558",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "165:12:0"
          }
        ],
        "contractDependencies": [
          155,
          167,
          217,
          240,
          269,
          965,
          1588,
          1714,
          1798,
          2027,
          2187,
          2708,
          3172,
          3270,
          3356,
          3466,
          3558,
          4121
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 36,
        "linearizedBaseContracts": [
          36,
          3558,
          965,
          2027,
          3356,
          2187,
          2708,
          3172,
          3466,
          3270,
          1588,
          1798,
          1714,
          269,
          240,
          4121,
          167,
          155,
          217
        ],
        "name": "StashBlox",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "296:221:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "306:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1605_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "callbackAutoExecuteMaxAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1592,
                      "src": "306:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530",
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "348:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "306:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "306:44:0"
                },
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 17,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "360:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1605_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "baseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1594,
                      "src": "360:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "687474703a2f2f7374617368626c6f782e636f6d2f746f6b656e732f",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "378:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_699ad49e673d0ba571e0814a1cc2e9c5b4688dea54cab55db91df34a385ab8a4",
                        "typeString": "literal_string \"http://stashblox.com/tokens/\""
                      },
                      "value": "http://stashblox.com/tokens/"
                    },
                    "src": "360:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "360:48:0"
                },
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1701,
                        "src": "418:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1605_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "versionRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1596,
                      "src": "418:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "312e302e302b6f70656e67736e2e7374617368626c6f78",
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "445:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_951a2f7d9c966c4b6247a8d66888062579f7aec39f781a1c4dcbbf3a041ee7a1",
                        "typeString": "literal_string \"1.0.0+opengsn.stashblox\""
                      },
                      "value": "1.0.0+opengsn.stashblox"
                    },
                    "src": "418:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "418:52:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "499:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 29,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3256,
                      "src": "480:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "480:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "480:30:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "185:91:0",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:0:0"
            },
            "scope": 36,
            "src": "281:236:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 37,
        "src": "133:387:0"
      }
    ],
    "src": "45:476:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-22T09:44:00.882Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptCallback(uint256)": {
        "details": "Accept a callback",
        "params": {
          "callbackId": "callback proposition ID"
        }
      },
      "approveCallback(uint256)": {
        "details": "Approve a callback",
        "params": {
          "callbackId": "callback proposition ID"
        }
      },
      "approveHolder(uint256,address)": {
        "details": "Function to approve holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "averageAge(address,uint256)": {
        "details": "Function to get the average age of the token for the given address.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID"
        },
        "returns": {
          "_0": "average age in seconds"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "constructor": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "deposit(address)": {
        "details": "Function to make an ETH deposit that can be used to pay token transfer .",
        "params": {
          "to": "recipent address"
        }
      },
      "executeCallback(uint256,uint256)": {
        "details": "Accept a callback. Caller need to recall the function to continue the callback until completed.",
        "params": {
          "callbackId": "callback proposition ID",
          "maxCall": "maximal call to excute"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isLockedAddress(address)": {
        "details": "Function to check if an address is lockec.",
        "params": {
          "addr": "The address to check"
        }
      },
      "isLockedToken(uint256)": {
        "details": "Function to check if a token is locked.",
        "params": {
          "id": "The token ID"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "lockAddress(address)": {
        "details": "Function to lock an address.",
        "params": {
          "addr": "The address to lock"
        }
      },
      "lockToken(uint256,uint256)": {
        "details": "Function to lock a token.",
        "params": {
          "id": "The token ID"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "proposeCallback(uint256,uint256,uint256,address[],uint256)": {
        "details": "Propose to buy the whole supply of a token. The proposer must hold minHoldingForCallback% of the total supply. StashBlox must approve the price with acceptCallback();",
        "params": {
          "callees": "list of calless. Empty list means all holders.",
          "price": "proposed price",
          "tokenId": "Token ID"
        }
      },
      "refuseCallback(uint256)": {
        "details": "Refuse a callback if the price is not enough.",
        "params": {
          "callbackId": "callback proposition ID"
        }
      },
      "revokeHolder(uint256,address)": {
        "details": "Function to revoke holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setCallbackAutoExecuteMaxAddresses(uint256)": {
        "details": "Maximum addresses to execute automatically the callback when is accepted.",
        "params": {
          "newMax": "new maximum"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        },
        "returns": {
          "_0": "transfer price"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlockAddress(address)": {
        "details": "Function to unlock an address.",
        "params": {
          "addr": "The address to unlock"
        }
      },
      "unlockToken(uint256,uint256)": {
        "details": "Function to unlock a token.",
        "params": {
          "id": "The token ID"
        }
      },
      "updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to update a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be updated",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "uri(uint256)": {
        "params": {
          "id": "Token ID"
        },
        "returns": {
          "_0": "URI string"
        }
      },
      "withdraw(address,uint256)": {
        "details": "Function to withdraw ETH from the contract. TODO: Add permission ??",
        "params": {
          "amount": "amount to withdraw",
          "to": "recipent address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "isTrustedForwarder(address)": {
        "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}