{
  "contractName": "StashBlox",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_callbackId",
          "type": "uint256"
        }
      ],
      "name": "CallbackUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        }
      ],
      "name": "acceptCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        }
      ],
      "name": "approveCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "approveHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "averageAge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxCall",
          "type": "uint256"
        }
      ],
      "name": "executeCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isLockedAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "isLockedToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "lockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "lockToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "callees",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "proposeCallback",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        }
      ],
      "name": "refuseCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "revokeHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMax",
          "type": "uint256"
        }
      ],
      "name": "setCallbackAutoExecuteMaxAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "unlockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "unlockToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_callbackId\",\"type\":\"uint256\"}],\"name\":\"CallbackUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"}],\"name\":\"acceptCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"}],\"name\":\"approveCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"approveHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"averageAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCall\",\"type\":\"uint256\"}],\"name\":\"executeCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isLockedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isLockedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"lockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"callees\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"proposeCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"}],\"name\":\"refuseCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"revokeHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMax\",\"type\":\"uint256\"}],\"name\":\"setCallbackAutoExecuteMaxAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"unlockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"unlockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptCallback(uint256)\":{\"details\":\"Accept a callback\",\"params\":{\"callbackId\":\"callback proposition ID\"}},\"approveCallback(uint256)\":{\"details\":\"Approve a callback\",\"params\":{\"callbackId\":\"callback proposition ID\"}},\"approveHolder(uint256,address)\":{\"details\":\"Function to approve holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"averageAge(address,uint256)\":{\"details\":\"Function to get the average age of the token for the given address.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\"},\"returns\":{\"_0\":\"average age in seconds\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"deposit(address)\":{\"details\":\"Function to make an ETH deposit that can be used to pay token transfer .\",\"params\":{\"to\":\"recipent address\"}},\"executeCallback(uint256,uint256)\":{\"details\":\"Accept a callback. Caller need to recall the function to continue the callback until completed.\",\"params\":{\"callbackId\":\"callback proposition ID\",\"maxCall\":\"maximal call to excute\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isLockedAddress(address)\":{\"details\":\"Function to check if an address is lockec.\",\"params\":{\"addr\":\"The address to check\"}},\"isLockedToken(uint256)\":{\"details\":\"Function to check if a token is locked.\",\"params\":{\"id\":\"The token ID\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"lockAddress(address)\":{\"details\":\"Function to lock an address.\",\"params\":{\"addr\":\"The address to lock\"}},\"lockToken(uint256,uint256)\":{\"details\":\"Function to lock a token.\",\"params\":{\"id\":\"The token ID\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proposeCallback(uint256,uint256,uint256,address[],uint256)\":{\"details\":\"Propose to buy the whole supply of a token. The proposer must hold minHoldingForCallback% of the total supply. StashBlox must approve the price with acceptCallback();\",\"params\":{\"callees\":\"list of calless. Empty list means all holders.\",\"price\":\"proposed price\",\"tokenId\":\"Token ID\"}},\"refuseCallback(uint256)\":{\"details\":\"Refuse a callback if the price is not enough.\",\"params\":{\"callbackId\":\"callback proposition ID\"}},\"revokeHolder(uint256,address)\":{\"details\":\"Function to revoke holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setCallbackAutoExecuteMaxAddresses(uint256)\":{\"details\":\"Maximum addresses to execute automatically the callback when is accepted.\",\"params\":{\"newMax\":\"new maximum\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"},\"returns\":{\"_0\":\"transfer price\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockAddress(address)\":{\"details\":\"Function to unlock an address.\",\"params\":{\"addr\":\"The address to unlock\"}},\"unlockToken(uint256,uint256)\":{\"details\":\"Function to unlock a token.\",\"params\":{\"id\":\"The token ID\"}},\"updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to update a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be updated\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"uri(uint256)\":{\"params\":{\"id\":\"Token ID\"},\"returns\":{\"_0\":\"URI string\"}},\"withdraw(address,uint256)\":{\"details\":\"Function to withdraw ETH from the contract. TODO: Add permission ??\",\"params\":{\"amount\":\"amount to withdraw\",\"to\":\"recipent address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol\":\"StashBlox\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol\":{\"keccak256\":\"0x6c00ff4281730b675e501df524f3026ad21cc6365dbc867f815a1103c732f828\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2bd636c9a851300c05b784d5fd6943262501abd5de54317eb5dae050953b564\",\"dweb:/ipfs/QmYoe43LSS4mEsrduDe2Kf5sWEBKPHr677H1ACmReu3u8h\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Metadata.sol\":{\"keccak256\":\"0x121c132f1a15fafd91c187380702cb32d60beab1a4054670efc987e36bc2b70f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://425182c1ecd27456fc2f1c3fd82444b17a13f2e4e503bb3f7b973e83d2ceb1bb\",\"dweb:/ipfs/QmU54fpZCpdGtjUAbQkr4cYikCzKKQqjS3LPNQpYpJXiA8\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Callable.sol\":{\"keccak256\":\"0xcef4a6306ef7194030522885ee596ff70dac38d82abc2838f45d62cb114a0582\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6f9622c5039f005af5a53d108885d6281c1a9d22c2a1aaf9c3c93f0f4cb85be8\",\"dweb:/ipfs/QmWGzMYjBd2D8kWZhH7JK7RjcQajvRgEyQFGJHeH8aSU3n\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0x5dc5890c785dcc9b643865f204d6fa0a0586c22ee1ab3e782d4b1cd50055f440\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://55bd720c36892871232926d1faae17c715e6fce9cb232bc65ad7dcab5fa87cb9\",\"dweb:/ipfs/QmXoizxGSz2s1df7Snh6qNTqaN49YzgLEiS6Rw4g9Cbpzw\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol\":{\"keccak256\":\"0xb78e06f3ed306304c9666310dc32b269aa645a8b08662fb38ffa00a5e468f10c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://10dc07702c90e1606f8c878ccc7a09b40ad342212eaa2822c22c4c777da3cce8\",\"dweb:/ipfs/QmeUiy8ekHdBRXSLWtwPrMeECwFduDawPoHL5UbNt2pBSS\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Lockable.sol\":{\"keccak256\":\"0x00364407db5b4d2bd9518aaaa84492c8c10bea5992b3eb827eaf89a5a340ccfa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a4a3e17cc1b107a36621220f17f2dcd469eabbe69c253ea6743fbbec9889fb0\",\"dweb:/ipfs/QmfEno1Ai3ijUex6BRjcGkz8SJKrArbe6Kub3x7rXZ8Mfo\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x89f566b2b45db160adbfb2fe8da9a65f2385cbbcf904f03c199dbc3d625c03fd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://261c4652ae1ca909a88839c2455653b486aae8cc248a2b4da6aa0f301d2fb398\",\"dweb:/ipfs/QmfRj76anEn31QfmBFAJmEEdx5YRa2ZWPY714ehNXe4pmD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0x0b0dc1431350b5690654b7d878a9ca8b8ad9a7ba4d55ba33e32dba069be555e8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://430dce8f25b8833da3091dfbe65fbb727db80c329f14fb8207fa93deb5b813e0\",\"dweb:/ipfs/QmS2bV9EpSdsCvVSM9u8TK6pV42F1dXgECN1e7wmashLqi\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/MultiToken.sol\":{\"keccak256\":\"0xd17b1983a01b5ddc16603ff48f564260989a24700e12778872635671cb19c3c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a48baa0a71f61ba4c647295db077b2903844483b81a94cfdbc17484b9db8a5a\",\"dweb:/ipfs/QmaRqYra8aZFzYny2PiY79MwfoP7DYA95bfpNDXVRkT6GL\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0xa9953cbb4805f942bcab17fade018307dca360f14ef033c571378cad38ca7e06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab2fada0b14f78abf8a8ec598ea91b2357a835a4817906ef5ce955e18ded420e\",\"dweb:/ipfs/QmfLkPFxfH5FRNqxzNEBcZ5c675zzjMqqkoLg44Qj7SeEY\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":{\"keccak256\":\"0xd8b068c736d1b5ef364d6f73d6fef3788034d3250fb3cd9e8d44d099aaca7b52\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fae9426d967287250027a3fb45c6499614b3365ee98debed327affa09d254d08\",\"dweb:/ipfs/Qmf8ap2iGa8UK7wSzMTxMM2tp4MaTpm5WXZCwS41Uj9ZCg\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0x6e349cd9263193acda067d4b2fe7cebd1a0d169c7b4ab1fb38a664ecdb60065f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5eed5b309c557a2a496a87659ccbae4561ee0121326b30df10ea881fd71872bc\",\"dweb:/ipfs/QmeJRw3fSUAYb9roQpSh7KzpRwTpPcdW8bobg5qpFofFjF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol\":{\"keccak256\":\"0x2ce961629fd471636e8ee0ec8b49f886ea3f87040c32b25a5127d86dcaec7170\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://39940f34eedb8b2b863e6ec04135a06741b89cbb56a3023f53d485a21ba9cf3a\",\"dweb:/ipfs/Qma6MytPKRcjZKYQJXDDd7H6otgeo1FizwHFAj9Q1sCtp9\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x700249db0ed6aa2be4fc7675c9cdb5cdcc4e49abec52eefa58c2b02092784188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8babf975072c842269b5cb10aedfed77307629626cc6ab6173e68462eaebb\",\"dweb:/ipfs/QmVSAHYR99a4Q6jrrSqvRxMEnD2dhNAUPLyGA9KGJGTLDL\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200001d336200007a565b603260005560408051808201909152601c8082527f687474703a2f2f7374617368626c6f782e636f6d2f746f6b656e732f000000006020909201918252620000689160019162000137565b5062000074336200007a565b620001d3565b6001600160a01b038116620000db576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180620054116026913960400191505060405180910390fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200017a57805160ff1916838001178555620001aa565b82800160010185558215620001aa579182015b82811115620001aa5782518255916020019190600101906200018d565b50620001b8929150620001bc565b5090565b5b80821115620001b85760008155600101620001bd565b61522e80620001e36000396000f3fe6080604052600436106102545760003560e01c80638f96f13111610139578063d1660e18116100b6578063f242432a1161007a578063f242432a14611148578063f2fde38b146111db578063f340fa011461120e578063f3fef3a314611234578063f8a5a07c1461126d578063fc3fcec7146113a45761028b565b8063d1660e1814610f61578063d41d0aa314610fa0578063d842b67314610fd9578063e985e9c51461108f578063ed70554d146110ca5761028b565b8063bba75c83116100fd578063bba75c8314610d0a578063c02f303c14610d34578063c255620a14610d67578063c40b87ae14610d91578063cba54e6014610f2e5761028b565b80638f96f13114610c12578063a22cb46514610c3c578063aba7fe8a14610c77578063b7eb5e0a14610ca7578063baa3411014610cda5761028b565b80634392e577116101d25780635dd2b9a6116101965780635dd2b9a614610ad0578063759c521414610b095780637627b73214610b425780638870147b14610b755780638aeba37e14610ba85780638da5cb5b14610be15761028b565b80634392e577146106fb5780634ab0d2531461075c5780634e1273f4146108de578063585941d514610a5e5780635dafec1b14610a975761028b565b806331d5f78c1161021957806331d5f78c1461058f57806334a90d02146105b9578063369c37e9146105ec5780633cacd7d614610616578063414ed0ce146106695761028b565b8062fdd58e1461029057806301ffc9a7146102db5780630e89341c146103235780632eb2c2d6146103c25780632ed42bf7146104eb5761028b565b3661028b57336000908152600d602052604090206001015461027690346113d4565b336000908152600d6020526040902060010155005b600080fd5b34801561029c57600080fd5b506102c9600480360360408110156102b357600080fd5b506001600160a01b038135169060200135611437565b60408051918252519081900360200190f35b3480156102e757600080fd5b5061030f600480360360208110156102fe57600080fd5b50356001600160e01b0319166114aa565b604080519115158252519081900360200190f35b34801561032f57600080fd5b5061034d6004803603602081101561034657600080fd5b50356114f1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561038757818101518382015260200161036f565b50505050905090810190601f1680156103b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104e9600480360360a08110156103d857600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561040b57600080fd5b82018360208201111561041d57600080fd5b803590602001918460208302840111600160201b8311171561043e57600080fd5b919390929091602081019035600160201b81111561045b57600080fd5b82018360208201111561046d57600080fd5b803590602001918460208302840111600160201b8311171561048e57600080fd5b919390929091602081019035600160201b8111156104ab57600080fd5b8201836020820111156104bd57600080fd5b803590602001918460018302840111600160201b831117156104de57600080fd5b509092509050611592565b005b3480156104f757600080fd5b50610500611840565b6040518084815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b8381101561055257818101518382015260200161053a565b50505050905090810190601f16801561057f5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561059b57600080fd5b506104e9600480360360208110156105b257600080fd5b50356118e5565b3480156105c557600080fd5b506104e9600480360360208110156105dc57600080fd5b50356001600160a01b0316611ac3565b3480156105f857600080fd5b506104e96004803603602081101561060f57600080fd5b5035611b30565b34801561062257600080fd5b506106496004803603602081101561063957600080fd5b50356001600160a01b0316611b7c565b604080519315158452911515602084015282820152519081900360600190f35b34801561067557600080fd5b506106936004803603602081101561068c57600080fd5b5035611ba2565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561070757600080fd5b506104e9600480360361014081101561071f57600080fd5b81019080806101400190600a806020026040519081016040528092919082600a60200280828437600092019190915250919450611c159350505050565b34801561076857600080fd5b506104e9600480360361014081101561078057600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b8111156107d557600080fd5b8201836020820111156107e757600080fd5b803590602001918460208302840111600160201b8311171561080857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561085757600080fd5b82018360208201111561086957600080fd5b803590602001918460208302840111600160201b8311171561088a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611c6d565b3480156108ea57600080fd5b50610a0e6004803603604081101561090157600080fd5b810190602081018135600160201b81111561091b57600080fd5b82018360208201111561092d57600080fd5b803590602001918460208302840111600160201b8311171561094e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561099d57600080fd5b8201836020820111156109af57600080fd5b803590602001918460208302840111600160201b831117156109d057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d58945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610a4a578181015183820152602001610a32565b505050509050019250505060405180910390f35b348015610a6a57600080fd5b506102c960048036036040811015610a8157600080fd5b506001600160a01b038135169060200135611edc565b348015610aa357600080fd5b5061030f60048036036040811015610aba57600080fd5b50803590602001356001600160a01b0316611f10565b348015610adc57600080fd5b506104e960048036036040811015610af357600080fd5b50803590602001356001600160a01b0316611f1c565b348015610b1557600080fd5b506104e960048036036040811015610b2c57600080fd5b50803590602001356001600160a01b0316611fa2565b348015610b4e57600080fd5b506104e960048036036020811015610b6557600080fd5b50356001600160a01b0316612023565b348015610b8157600080fd5b506104e960048036036020811015610b9857600080fd5b50356001600160a01b031661208e565b348015610bb457600080fd5b506104e960048036036040811015610bcb57600080fd5b50803590602001356001600160a01b03166120f6565b348015610bed57600080fd5b50610bf6612174565b604080516001600160a01b039092168252519081900360200190f35b348015610c1e57600080fd5b506104e960048036036020811015610c3557600080fd5b5035612183565b348015610c4857600080fd5b506104e960048036036040811015610c5f57600080fd5b506001600160a01b03813516906020013515156123bc565b348015610c8357600080fd5b506104e960048036036040811015610c9a57600080fd5b5080359060200135612476565b348015610cb357600080fd5b506104e960048036036020811015610cca57600080fd5b50356001600160a01b03166124cf565b348015610ce657600080fd5b506104e960048036036040811015610cfd57600080fd5b5080359060200135612538565b348015610d1657600080fd5b5061030f60048036036020811015610d2d57600080fd5b503561258c565b348015610d4057600080fd5b5061030f60048036036020811015610d5757600080fd5b50356001600160a01b0316612597565b348015610d7357600080fd5b506104e960048036036020811015610d8a57600080fd5b50356125a2565b348015610d9d57600080fd5b506104e960048036036101a0811015610db557600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610e2557600080fd5b820183602082011115610e3757600080fd5b803590602001918460208302840111600160201b83111715610e5857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610ea757600080fd5b820183602082011115610eb957600080fd5b803590602001918460208302840111600160201b83111715610eda57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316612813565b348015610f3a57600080fd5b5061030f60048036036020811015610f5157600080fd5b50356001600160a01b03166128b4565b348015610f6d57600080fd5b506102c960048036036060811015610f8457600080fd5b506001600160a01b0381351690602081013590604001356128bf565b348015610fac57600080fd5b506104e960048036036040811015610fc357600080fd5b50803590602001356001600160a01b03166128d4565b6104e9600480360360a0811015610fef57600080fd5b81359160208101359160408201359190810190608081016060820135600160201b81111561101c57600080fd5b82018360208201111561102e57600080fd5b803590602001918460208302840111600160201b8311171561104f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550509135925061294f915050565b34801561109b57600080fd5b5061030f600480360360408110156110b257600080fd5b506001600160a01b0381358116916020013516612bdb565b3480156110d657600080fd5b506110f4600480360360208110156110ed57600080fd5b5035612be7565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b6104e9600480360360a081101561115e57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561119d57600080fd5b8201836020820111156111af57600080fd5b803590602001918460018302840111600160201b831117156111d057600080fd5b509092509050612c43565b3480156111e757600080fd5b506104e9600480360360208110156111fe57600080fd5b50356001600160a01b0316612d88565b6104e96004803603602081101561122457600080fd5b50356001600160a01b0316612ddb565b34801561124057600080fd5b506104e96004803603604081101561125757600080fd5b506001600160a01b038135169060200135612e20565b34801561127957600080fd5b506104e96004803603606081101561129057600080fd5b81359190810190604081016020820135600160201b8111156112b157600080fd5b8201836020820111156112c357600080fd5b803590602001918460208302840111600160201b831117156112e457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561133357600080fd5b82018360208201111561134557600080fd5b803590602001918460208302840111600160201b8311171561136657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612f48945050505050565b3480156113b057600080fd5b506104e9600480360360408110156113c757600080fd5b50803590602001356130cd565b60008282018381101561142e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b60006001600160a01b03831661147e5760405162461bcd60e51b815260040180806020018281038252602b815260200180614f6f602b913960400191505060405180910390fd5b506000908152600e602090815260408083206001600160a01b0394909416835260079093019052205490565b60006001600160e01b031982166301ffc9a760e01b14806114db57506001600160e01b03198216636cdb3d1360e11b145b156114e8575060016114ec565b5060005b919050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152606093611431939192909183018282801561157f5780601f106115545761010080835404028352916020019161157f565b820191906000526020600020905b81548152906001019060200180831161156257829003601f168201915b505050505061158d84613291565b61334d565b8483146115d05760405162461bcd60e51b815260040180806020018281038252602e81526020018061519a602e913960400191505060405180910390fd5b6001600160a01b0387166116155760405162461bcd60e51b81526004018080602001828103825260288152602001806150006028913960400191505060405180910390fd5b6001600160a01b03881633148061163757506116318833612bdb565b15156001145b6116725760405162461bcd60e51b81526004018080602001828103825260378152602001806151636037913960400191505060405180910390fd5b6116e1888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a91829185019084908082843760009201919091525061345792505050565b866001600160a01b0316886001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a461183633898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061351192505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156118cc5780601f106118a1576101008083540402835291602001916118cc565b820191906000526020600020905b8154815290600101906020018083116118af57829003601f168201915b505050600c90930154919250506001600160a01b031683565b6118ed614d86565b6000828152600f602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b9091041615156101408201526006820180548551818602810186019096528086529194929361016086019392908301828280156119f557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119d7575b50505091909252505081519192505015801590611a1957508051611a199033613702565b8015611a285750610100810151155b8015611a375750610120810151155b611a88576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c696420617267756d656e7473206f72207065726d697373696f6e00604482015290519081900360640190fd5b6000828152600f6020526040808220600501805460ff60a81b1916600160a81b179055518391600080516020614fe083398151915291a25050565b611acb613726565b611b0a576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805461ff001916610100179055565b611b38613726565b611b77576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b600055565b600d602052600090815260409020805460019091015460ff808316926101009004169083565b600f6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b611c1d613726565b611c5c576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b611c69600282600a614dfa565b5050565b87611c788133613737565b611cb7576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b6000898152600e6020526040902054611d07576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b611d178989898989898989613771565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b60608151835114611d9a5760405162461bcd60e51b81526004018080602001828103825260308152602001806150546030913960400191505060405180910390fd5b6060835167ffffffffffffffff81118015611db457600080fd5b50604051908082528060200260200182016040528015611dde578160200160208202803683370190505b50905060005b8451811015611ed45760006001600160a01b0316858281518110611e0457fe5b60200260200101516001600160a01b03161415611e525760405162461bcd60e51b81526004018080602001828103825260348152602001806150ba6034913960400191505060405180910390fd5b600e6000858381518110611e6257fe5b602002602001015181526020019081526020016000206007016000868381518110611e8957fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000154828281518110611ec157fe5b6020908102919091010152600101611de4565b509392505050565b6000818152600e602090815260408083206001600160a01b038616845260070190915281206001015461142e904290613915565b600061142e8383613737565b81611f278133613737565b611f66576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b506000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805462ff0000191662010000179055565b81611fad8133613737565b611fec576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b506000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805462ff000019169055565b61202b613726565b61206a576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b612096613726565b6120d5576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b6120fe613726565b61213d576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600c546001600160a01b031690565b61218b614d86565b6000828152600f602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b90910416151561014082015260068201805485518186028101860190965280865291949293610160860193929083018282801561229357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612275575b505050919092525050815191925050158015906122b35750610100810151155b80156122c25750610120810151155b8015612307575080516122d59033613737565b806122e7575080516122e79033613702565b8061230757508060a001516001600160a01b0316336001600160a01b0316145b612358576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c696420617267756d656e7473206f72207065726d697373696f6e00604482015290519081900360640190fd5b6000828152600f60209081526040808320600501805460ff60b01b1916600160b01b1790558381015160a08501516001600160a01b03168452600d9092528083206001018054909201909155518391600080516020614fe083398151915291a25050565b336001600160a01b03831614156124045760405162461bcd60e51b815260040180806020018281038252602c815260200180615028602c913960400191505060405180910390fd5b336000818152600d602090815260408083206001600160a01b0387168085526003909101835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b816124818133613737565b6124c0576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b6124ca8383613957565b505050565b6124d7613726565b612516576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805461ff0019169055565b816125438133613737565b612582576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b6124ca83836139ad565b600061143182613a09565b600061143182613a28565b6125aa614d86565b6000828152600f602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b9091041615156101408201526006820180548551818602810186019096528086529194929361016086019392908301828280156126b257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612694575b505050919092525050815191925050158015906126d6575080516126d69033613737565b80156126ef57508060c0015115806126ef57508060e001515b80156126fe5750610100810151155b801561270d5750610120810151155b8015612734575061272c81600001518260200151836101600151613a52565b816040015110155b61276f5760405162461bcd60e51b815260040180806020018281038252603481526020018061510f6034913960400191505060405180910390fd5b6000828152600f6020526040808220600501805460ff60b81b1916600160b81b179055518391600080516020614fe083398151915291a261016081015151156127c7576127c28282610160015151613b09565b611c69565b6000805482518252600e602052604090912060080154116128015780516000908152600e60205260409020600801546127c2908390613b09565b611c69816000015182608001516139ad565b61281c33613a28565b61285b576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b61286e8b8b8b8b8b8b8b8b8b8b8b613da6565b604080518b8152602081018b905281516001600160a01b038e16926000923392600080516020614f4f833981519152929181900390910190a45050505050505050505050565b600061143182613f0f565b60006128cc848484613f32565b949350505050565b6128dc613726565b61291b576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b6000858152600f602052604090205415801561297857506000848152600e602052604090205415155b801561298e575061298a848484613a52565b3410155b801561299d5750600054825111155b6129ee576040805162461bcd60e51b815260206004820152601a60248201527f496e76616c696420617267756d656e7473206f722076616c7565000000000000604482015290519081900360640190fd5b6000848152600e6020526040812060048101549054612a1a9161271091612a1491614114565b9061416d565b905060405180610180016040528086815260200185815260200134815260200160008152602001838152602001336001600160a01b031681526020018560001480612a8057506000878152600e6020908152604080832033845260070190915290205483115b80612a8c575060008551115b151581526000602080830182905260408084018390526060808501849052608080860185905260a09586018a90528c8552600f8452938290208651815586840151600182015591860151600283015585015160038201559184015160048301559183015160058201805460c086015160e08701516101008801516101208901516101408a01511515600160c01b0260ff60c01b19911515600160b81b0260ff60b81b19931515600160b01b0260ff60b01b19951515600160a81b0260ff60a81b19971515600160a01b0260ff60a01b196001600160a01b03909c166001600160a01b0319909a16999099179a909a16979097179590951697909717929092169390931792909216171691909117905561016083015180519192612bb792600685019290910190614e52565b5050604051879150600080516020614fe083398151915290600090a2505050505050565b600061142e83836141af565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516612c885760405162461bcd60e51b81526004018080602001828103825260288152602001806150006028913960400191505060405180910390fd5b6001600160a01b038616331480612caa5750612ca48633612bdb565b15156001145b612ce55760405162461bcd60e51b81526004018080602001828103825260378152602001806151636037913960400191505060405180910390fd5b612cf1868686866141f4565b846001600160a01b0316866001600160a01b0316336001600160a01b0316600080516020614f4f8339815191528787604051808381526020018281526020019250505060405180910390a4612d80338787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061426c92505050565b505050505050565b612d90613726565b612dcf576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b612dd8816143e1565b50565b6001600160a01b0381166000908152600d6020526040902060010154612e0190346113d4565b6001600160a01b039091166000908152600d6020526040902060010155565b6001600160a01b0382166000908152600d6020526040902060010154811115612e87576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114612ed2576040519150601f19603f3d011682016040523d82523d6000602084013e612ed7565b606091505b5050905080612f21576040805162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015290519081900360640190fd5b506001600160a01b039091166000908152600d602052604090206001018054919091039055565b612f5133613a28565b612f90576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b6000838152600e602052604090205415801590612fae575080518251145b612ff3576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b82518110156130c7576130308484838151811061300f57fe5b602002602001015184848151811061302357fe5b6020026020010151614482565b6000848152600e60205260408120600801805490919061304c57fe5b600091825260208220015484516001600160a01b0390911691903390600080516020614f4f8339815191529087908690811061308457fe5b6020026020010151600e60008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a4600101612ff6565b50505050565b6130d5614d86565b6000838152600f602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b9091041615156101408201526006820180548551818602810186019096528086529194929361016086019392908301828280156131dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116131bf575b50505091909252505081519192505015801590613201575061012081015115156001145b80156132105750610140810151155b613254576040805162461bcd60e51b815260206004820152601060248201526f496e76616c69642063616c6c6261636b60801b604482015290519081900360640190fd5b61325e8383613b09565b6000838152600f6020526040902060050154600160c01b900460ff16156124ca576124ca81600001518260800151613957565b60606000825b80156132ad576001919091019060109004613297565b60608267ffffffffffffffff811180156132c657600080fd5b506040519080825280601f01601f1916602001820160405280156132f1576020820181803683370190505b50905060005b838110156133445760108606925061330e8361461f565b826001838703038151811061331f57fe5b60200101906001600160f81b031916908160001a9053506010860495506001016132f7565b50949350505050565b805182516060918491849184910167ffffffffffffffff8111801561337157600080fd5b506040519080825280601f01601f19166020018201604052801561339c576020820181803683370190505b509050806000805b85518110156133f5578581815181106133b957fe5b602001015160f81c60f81b8383806001019450815181106133d657fe5b60200101906001600160f81b031916908160001a9053506001016133a4565b5060005b845181101561344a5784818151811061340e57fe5b602001015160f81c60f81b83838060010194508151811061342b57fe5b60200101906001600160f81b031916908160001a9053506001016133f9565b5090979650505050505050565b6000803411613481576001600160a01b0385166000908152600d6020526040902060010154613483565b345b905060005b83518110156134ff576134f56134c687878785815181106134a557fe5b60200260200101518786815181106134b957fe5b6020026020010151614663565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528491906146b8565b9150600101613488565b5061350a858261474f565b5050505050565b613523846001600160a01b03166147d0565b15612d805763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156135c35781810151838201526020016135ab565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156136025781810151838201526020016135ea565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561363e578181015183820152602001613626565b50505050905090810190601f16801561366b5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561369057600080fd5b505af11580156136a4573d6000803e3d6000fd5b505050506040513d60208110156136ba57600080fd5b50516001600160e01b03191614612d805760405162461bcd60e51b81526004018080602001828103825260368152602001806150846036913960400191505060405180910390fd5b6000918252600e6020526040909120600601546001600160a01b0391821691161490565b600c546001600160a01b0316331490565b6000828152600e602090815260408083206001600160a01b038516845260070190915281206002015460ff168061142e575061142e613726565b6000805b85518110156137a15785818151811061378a57fe5b602002602001015182019150806001019050613775565b50600086511180156137b1575060015b80156137be575080612710145b80156137cb575061271084105b613810576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600e60209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b909101805460018101825590855292909320613870939283020191614ea6565b506000898152600e60209081526040909120875161389692600990920191890190614e52565b506000898152600e6020908152604090912086516138bc92600a90920191880190614ee0565b50506000978852600e602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b600061142e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506146b8565b6000828152600e6020908152604091829020600601805460ff60a81b191690558151838152915184927f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd92908290030190a25050565b6000828152600e6020908152604091829020600601805460ff60a81b1916600160a81b1790558151838152915184927f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd92908290030190a25050565b6000908152600e6020526040902060060154600160a81b900460ff1690565b6001600160a01b0381166000908152600d602052604081205460ff16806114315750611431613726565b80516000908190613a93576000858152600e60208181526040808420338552600781018352908420549389905291905254613a8c91613915565b9050613af6565b60005b8351811015613af457600e60008781526020019081526020016000206007016000858381518110613ac357fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020549190910190600101613a96565b505b613b008185614114565b95945050505050565b6000828152600f602052604090208054600690910154606090613b3c576000828152600e60205260409020600801613b4e565b6000848152600f602052604090206006015b805480602002602001604051908101604052809291908181526020018280548015613ba257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613b84575b505083516000898152600f60205260408120600301549596506000199091019493509150508582018311613bd65782613bda565b8582015b90506000825b828111613d22576000868281518110613bf557fe5b60209081029190910181015160008a8152600e835260408082206001600160a01b0384168352600701909352919091205490915015613d19576000888152600e602090815260408083206001600160a01b0385168085526007909101808452828520548f8652600f855292852060010154919094529290915293840193613c7b91614114565b6001600160a01b038083166000818152600d6020908152604080832060010180549096019095558e8252600f8152848220600501548d8352600e82528583208484526007018252918590205485518e8152918201528451919093169391923392600080516020614f4f83398151915292918290030190a46000888152600e602090815260408083206001600160a01b03851684526007019091528120555b50600101613be0565b506000888152600f6020526040902060050154613d49906001600160a01b03168783614807565b6000888152600f6020526040902060030182905583821415611836576000888152600f6020526040808220600501805460ff60c01b1916600160c01b179055518991600080516020614fe083398151915291a25050505050505050565b60008a8152600e6020526040902054158015613dc25750600089115b613e07576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b88600e60008c81526020019081526020016000206000018190555087600e60008c8152602001908152602001600020600101819055506001600e60008c81526020019081526020016000206007016000336001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600e60008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff021916908315150217905550613ef78a88888888888888613771565b613f028b8b8b614807565b5050505050505050505050565b6001600160a01b03166000908152600d6020526040902054610100900460ff1690565b6000828152600e60205260408120600b015481904290600019015b6000868152600e60205260408120600b01805483908110613f6a57fe5b60009182526020822060029091020101546000888152600e60205260408120600b018054929350909184908110613f9d57fe5b9060005260206000209060020201600160028110613fb757fe5b01546000898152600e602090815260408083206001600160a01b038e168452600701909152812060010154919250908311614054576000898152600e602090815260408083206001600160a01b038e168452600701909152902060010154614029906201518090612a14908890613915565b905080614034575060015b614048886140428385614114565b90614114565b86019550505050614093565b61406562015180612a148786613915565b905080614070575060015b9193508391614083886140428385614114565b9095019450505060001901613f4d565b506000858152600e60205260409020600101546140b4908390600a0a61416d565b6000868152600e6020526040812060030154919350906140df906305f5e10090612a14908890614114565b6000878152600e60205260409020600201549091506141099061410290836113d4565b84906113d4565b979650505050505050565b60008261412357506000611431565b8282028284828161413057fe5b041461142e5760405162461bcd60e51b81526004018080602001828103825260218152602001806150ee6021913960400191505060405180910390fd5b600061142e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506148b0565b60006141bb8383614915565b8061142e5750506001600160a01b039182166000908152600d602090815260408083209390941682526003909201909152205460ff1690565b600080341161421e576001600160a01b0385166000908152600d6020526040902060010154614220565b345b905061426061423186868686614663565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528391906146b8565b905061350a858261474f565b61427e846001600160a01b03166147d0565b15612d805763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561431f578181015183820152602001614307565b50505050905090810190601f16801561434c5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561436f57600080fd5b505af1158015614383573d6000803e3d6000fd5b505050506040513d602081101561439957600080fd5b50516001600160e01b03191614612d805760405162461bcd60e51b81526004018080602001828103825260318152602001806151c86031913960400191505060405180910390fd5b6001600160a01b0381166144265760405162461bcd60e51b8152600401808060200182810382526026815260200180614fba6026913960400191505060405180910390fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000838152600e6020526040812060080180546124ca92906144a057fe5b6000918252602080832090910154868352600e8083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a94909390840192919061450a57fe5b906000526020600020906002020160016002811061452457fe5b0154905260008a8152600e60209081526040918290206009018054835181840281018401909452808452909183018282801561458957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161456b575b50505060008d8152600e6020908152604091829020600a01805483518184028101840190945280845292945092508301828280156145e657602002820191906000526020600020905b8154815260200190600101908083116145d2575b50505060008e8152600e60205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b0316613da6565b600060098260ff161161463957506030810160f81b6114ec565b8160ff16600a111580156146515750600f8260ff1611155b1561028b57506057810160f81b6114ec565b6000614671858585856149fc565b156146ac576040805162461bcd60e51b8152602060048201526006602482015265131bd8dad95960d21b604482015290519081900360640190fd5b613b0085858585614a34565b600081848411156147475760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561470c5781810151838201526020016146f4565b50505050905090810190601f1680156147395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60003411801561475f5750600081115b156147ab576001600160a01b0382166000908152600d602052604090206001015461478a90826113d4565b6001600160a01b0383166000908152600d6020526040902060010155611c69565b34611c69576001600160a01b03919091166000908152600d6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906128cc5750141592915050565b6000828152600e6020526040902060060154600160a01b900460ff16158061485d57506000828152600e602090815260408083206001600160a01b038716845260070190915290206002015462010000900460ff165b6148a5576040805162461bcd60e51b81526020600482015260146024820152731059191c995cdcc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b6124ca838383614b88565b600081836148ff5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561470c5781810151838201526020016146f4565b50600083858161490b57fe5b0495945050505050565b6000805b600a8110156149f2576000600282600a811061493157fe5b01546001600160a01b0316146149ea576000600282600a811061495057fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b1580156149a257600080fd5b505afa1580156149b6573d6000803e3d6000fd5b505050506040513d60208110156149cc57600080fd5b50516001600160a01b031614156149e857600192505050611431565b505b600101614919565b5060009392505050565b6000614a0783613a09565b80614a165750614a1685613f0f565b80614a255750614a2584613f0f565b80613b00575050159392505050565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152600e82528381206001600160a01b038916825260070190915291822054614a8f9184906146b8565b6000848152600e602090815260408083206001600160a01b038a168452600701909152902055614ac0848484614807565b614acb858484613f32565b905060005b6000848152600e6020526040902060090154811015613344576000848152600e60205260408120600901805483908110614b0657fe5b6000918252602080832090910154878352600e90915260408220600a0180546001600160a01b0390921693509084908110614b3d57fe5b6000918252602090912001549050614b5b612710612a148684614114565b6001600160a01b039092166000908152600d60205260409020600190810180549093019092555001614ad0565b6000828152600e602090815260408083206001600160a01b0387168452600701909152812054614bb890836113d4565b6000848152600e602090815260408083206001600160a01b0389168452600701909152902054909150614cb5576000838152600e602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16614c84576001600160a01b0384166000818152600d6020908152604080832060020180546001818101835591855283852001889055878452600e83529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b6000838152600e602090815260408083206001600160a01b0388168452600701909152902042600190910155614d56565b6000838152600e602090815260408083206001600160a01b0388168452600701909152812060010154614ce9904290613915565b6000858152600e602090815260408083206001600160a01b038a16845260070190915281205491925090614d23908490612a149085614114565b6000868152600e602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b6000928352600e602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b604051806101800160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600015158152602001600015158152602001600015158152602001600015158152602001606081525090565b82600a8101928215614e42579160200282015b82811115614e4257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614e0d565b50614e4e929150614f1a565b5090565b828054828255906000526020600020908101928215614e425791602002820182811115614e4257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614e0d565b8260028101928215614ed4579160200282015b82811115614ed4578251825591602001919060010190614eb9565b50614e4e929150614f39565b828054828255906000526020600020908101928215614ed45791602002820182811115614ed4578251825591602001919060010190614eb9565b5b80821115614e4e5780546001600160a01b0319168155600101614f1b565b5b80821115614e4e5760008155600101614f3a56fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373496e73756666696369656e74207065726d697373696f6e0000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736ce984c7277c5fe8f47fdf17245300ed19587e3bc1041342d79726b2b2f1dc0b455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77496e73756666696369656e742063616c6c6261636b2c207065726d697373696f6e206f7220657363726f77656420616d6f756e744f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a26469706673582212202d2581029e022b60f0412722ec4eeaa3e112c4a8538901cb286171505db1327364736f6c634300070100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106102545760003560e01c80638f96f13111610139578063d1660e18116100b6578063f242432a1161007a578063f242432a14611148578063f2fde38b146111db578063f340fa011461120e578063f3fef3a314611234578063f8a5a07c1461126d578063fc3fcec7146113a45761028b565b8063d1660e1814610f61578063d41d0aa314610fa0578063d842b67314610fd9578063e985e9c51461108f578063ed70554d146110ca5761028b565b8063bba75c83116100fd578063bba75c8314610d0a578063c02f303c14610d34578063c255620a14610d67578063c40b87ae14610d91578063cba54e6014610f2e5761028b565b80638f96f13114610c12578063a22cb46514610c3c578063aba7fe8a14610c77578063b7eb5e0a14610ca7578063baa3411014610cda5761028b565b80634392e577116101d25780635dd2b9a6116101965780635dd2b9a614610ad0578063759c521414610b095780637627b73214610b425780638870147b14610b755780638aeba37e14610ba85780638da5cb5b14610be15761028b565b80634392e577146106fb5780634ab0d2531461075c5780634e1273f4146108de578063585941d514610a5e5780635dafec1b14610a975761028b565b806331d5f78c1161021957806331d5f78c1461058f57806334a90d02146105b9578063369c37e9146105ec5780633cacd7d614610616578063414ed0ce146106695761028b565b8062fdd58e1461029057806301ffc9a7146102db5780630e89341c146103235780632eb2c2d6146103c25780632ed42bf7146104eb5761028b565b3661028b57336000908152600d602052604090206001015461027690346113d4565b336000908152600d6020526040902060010155005b600080fd5b34801561029c57600080fd5b506102c9600480360360408110156102b357600080fd5b506001600160a01b038135169060200135611437565b60408051918252519081900360200190f35b3480156102e757600080fd5b5061030f600480360360208110156102fe57600080fd5b50356001600160e01b0319166114aa565b604080519115158252519081900360200190f35b34801561032f57600080fd5b5061034d6004803603602081101561034657600080fd5b50356114f1565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561038757818101518382015260200161036f565b50505050905090810190601f1680156103b45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104e9600480360360a08110156103d857600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561040b57600080fd5b82018360208201111561041d57600080fd5b803590602001918460208302840111600160201b8311171561043e57600080fd5b919390929091602081019035600160201b81111561045b57600080fd5b82018360208201111561046d57600080fd5b803590602001918460208302840111600160201b8311171561048e57600080fd5b919390929091602081019035600160201b8111156104ab57600080fd5b8201836020820111156104bd57600080fd5b803590602001918460018302840111600160201b831117156104de57600080fd5b509092509050611592565b005b3480156104f757600080fd5b50610500611840565b6040518084815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b8381101561055257818101518382015260200161053a565b50505050905090810190601f16801561057f5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561059b57600080fd5b506104e9600480360360208110156105b257600080fd5b50356118e5565b3480156105c557600080fd5b506104e9600480360360208110156105dc57600080fd5b50356001600160a01b0316611ac3565b3480156105f857600080fd5b506104e96004803603602081101561060f57600080fd5b5035611b30565b34801561062257600080fd5b506106496004803603602081101561063957600080fd5b50356001600160a01b0316611b7c565b604080519315158452911515602084015282820152519081900360600190f35b34801561067557600080fd5b506106936004803603602081101561068c57600080fd5b5035611ba2565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561070757600080fd5b506104e9600480360361014081101561071f57600080fd5b81019080806101400190600a806020026040519081016040528092919082600a60200280828437600092019190915250919450611c159350505050565b34801561076857600080fd5b506104e9600480360361014081101561078057600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b8111156107d557600080fd5b8201836020820111156107e757600080fd5b803590602001918460208302840111600160201b8311171561080857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561085757600080fd5b82018360208201111561086957600080fd5b803590602001918460208302840111600160201b8311171561088a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611c6d565b3480156108ea57600080fd5b50610a0e6004803603604081101561090157600080fd5b810190602081018135600160201b81111561091b57600080fd5b82018360208201111561092d57600080fd5b803590602001918460208302840111600160201b8311171561094e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561099d57600080fd5b8201836020820111156109af57600080fd5b803590602001918460208302840111600160201b831117156109d057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d58945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610a4a578181015183820152602001610a32565b505050509050019250505060405180910390f35b348015610a6a57600080fd5b506102c960048036036040811015610a8157600080fd5b506001600160a01b038135169060200135611edc565b348015610aa357600080fd5b5061030f60048036036040811015610aba57600080fd5b50803590602001356001600160a01b0316611f10565b348015610adc57600080fd5b506104e960048036036040811015610af357600080fd5b50803590602001356001600160a01b0316611f1c565b348015610b1557600080fd5b506104e960048036036040811015610b2c57600080fd5b50803590602001356001600160a01b0316611fa2565b348015610b4e57600080fd5b506104e960048036036020811015610b6557600080fd5b50356001600160a01b0316612023565b348015610b8157600080fd5b506104e960048036036020811015610b9857600080fd5b50356001600160a01b031661208e565b348015610bb457600080fd5b506104e960048036036040811015610bcb57600080fd5b50803590602001356001600160a01b03166120f6565b348015610bed57600080fd5b50610bf6612174565b604080516001600160a01b039092168252519081900360200190f35b348015610c1e57600080fd5b506104e960048036036020811015610c3557600080fd5b5035612183565b348015610c4857600080fd5b506104e960048036036040811015610c5f57600080fd5b506001600160a01b03813516906020013515156123bc565b348015610c8357600080fd5b506104e960048036036040811015610c9a57600080fd5b5080359060200135612476565b348015610cb357600080fd5b506104e960048036036020811015610cca57600080fd5b50356001600160a01b03166124cf565b348015610ce657600080fd5b506104e960048036036040811015610cfd57600080fd5b5080359060200135612538565b348015610d1657600080fd5b5061030f60048036036020811015610d2d57600080fd5b503561258c565b348015610d4057600080fd5b5061030f60048036036020811015610d5757600080fd5b50356001600160a01b0316612597565b348015610d7357600080fd5b506104e960048036036020811015610d8a57600080fd5b50356125a2565b348015610d9d57600080fd5b506104e960048036036101a0811015610db557600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610e2557600080fd5b820183602082011115610e3757600080fd5b803590602001918460208302840111600160201b83111715610e5857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610ea757600080fd5b820183602082011115610eb957600080fd5b803590602001918460208302840111600160201b83111715610eda57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316612813565b348015610f3a57600080fd5b5061030f60048036036020811015610f5157600080fd5b50356001600160a01b03166128b4565b348015610f6d57600080fd5b506102c960048036036060811015610f8457600080fd5b506001600160a01b0381351690602081013590604001356128bf565b348015610fac57600080fd5b506104e960048036036040811015610fc357600080fd5b50803590602001356001600160a01b03166128d4565b6104e9600480360360a0811015610fef57600080fd5b81359160208101359160408201359190810190608081016060820135600160201b81111561101c57600080fd5b82018360208201111561102e57600080fd5b803590602001918460208302840111600160201b8311171561104f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550509135925061294f915050565b34801561109b57600080fd5b5061030f600480360360408110156110b257600080fd5b506001600160a01b0381358116916020013516612bdb565b3480156110d657600080fd5b506110f4600480360360208110156110ed57600080fd5b5035612be7565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b6104e9600480360360a081101561115e57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561119d57600080fd5b8201836020820111156111af57600080fd5b803590602001918460018302840111600160201b831117156111d057600080fd5b509092509050612c43565b3480156111e757600080fd5b506104e9600480360360208110156111fe57600080fd5b50356001600160a01b0316612d88565b6104e96004803603602081101561122457600080fd5b50356001600160a01b0316612ddb565b34801561124057600080fd5b506104e96004803603604081101561125757600080fd5b506001600160a01b038135169060200135612e20565b34801561127957600080fd5b506104e96004803603606081101561129057600080fd5b81359190810190604081016020820135600160201b8111156112b157600080fd5b8201836020820111156112c357600080fd5b803590602001918460208302840111600160201b831117156112e457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561133357600080fd5b82018360208201111561134557600080fd5b803590602001918460208302840111600160201b8311171561136657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612f48945050505050565b3480156113b057600080fd5b506104e9600480360360408110156113c757600080fd5b50803590602001356130cd565b60008282018381101561142e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b60006001600160a01b03831661147e5760405162461bcd60e51b815260040180806020018281038252602b815260200180614f6f602b913960400191505060405180910390fd5b506000908152600e602090815260408083206001600160a01b0394909416835260079093019052205490565b60006001600160e01b031982166301ffc9a760e01b14806114db57506001600160e01b03198216636cdb3d1360e11b145b156114e8575060016114ec565b5060005b919050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152606093611431939192909183018282801561157f5780601f106115545761010080835404028352916020019161157f565b820191906000526020600020905b81548152906001019060200180831161156257829003601f168201915b505050505061158d84613291565b61334d565b8483146115d05760405162461bcd60e51b815260040180806020018281038252602e81526020018061519a602e913960400191505060405180910390fd5b6001600160a01b0387166116155760405162461bcd60e51b81526004018080602001828103825260288152602001806150006028913960400191505060405180910390fd5b6001600160a01b03881633148061163757506116318833612bdb565b15156001145b6116725760405162461bcd60e51b81526004018080602001828103825260378152602001806151636037913960400191505060405180910390fd5b6116e1888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a91829185019084908082843760009201919091525061345792505050565b866001600160a01b0316886001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a461183633898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061351192505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156118cc5780601f106118a1576101008083540402835291602001916118cc565b820191906000526020600020905b8154815290600101906020018083116118af57829003601f168201915b505050600c90930154919250506001600160a01b031683565b6118ed614d86565b6000828152600f602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b9091041615156101408201526006820180548551818602810186019096528086529194929361016086019392908301828280156119f557602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119d7575b50505091909252505081519192505015801590611a1957508051611a199033613702565b8015611a285750610100810151155b8015611a375750610120810151155b611a88576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c696420617267756d656e7473206f72207065726d697373696f6e00604482015290519081900360640190fd5b6000828152600f6020526040808220600501805460ff60a81b1916600160a81b179055518391600080516020614fe083398151915291a25050565b611acb613726565b611b0a576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805461ff001916610100179055565b611b38613726565b611b77576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b600055565b600d602052600090815260409020805460019091015460ff808316926101009004169083565b600f6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b611c1d613726565b611c5c576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b611c69600282600a614dfa565b5050565b87611c788133613737565b611cb7576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b6000898152600e6020526040902054611d07576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b611d178989898989898989613771565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b60608151835114611d9a5760405162461bcd60e51b81526004018080602001828103825260308152602001806150546030913960400191505060405180910390fd5b6060835167ffffffffffffffff81118015611db457600080fd5b50604051908082528060200260200182016040528015611dde578160200160208202803683370190505b50905060005b8451811015611ed45760006001600160a01b0316858281518110611e0457fe5b60200260200101516001600160a01b03161415611e525760405162461bcd60e51b81526004018080602001828103825260348152602001806150ba6034913960400191505060405180910390fd5b600e6000858381518110611e6257fe5b602002602001015181526020019081526020016000206007016000868381518110611e8957fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000154828281518110611ec157fe5b6020908102919091010152600101611de4565b509392505050565b6000818152600e602090815260408083206001600160a01b038616845260070190915281206001015461142e904290613915565b600061142e8383613737565b81611f278133613737565b611f66576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b506000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805462ff0000191662010000179055565b81611fad8133613737565b611fec576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b506000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805462ff000019169055565b61202b613726565b61206a576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b612096613726565b6120d5576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b6120fe613726565b61213d576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600c546001600160a01b031690565b61218b614d86565b6000828152600f602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b90910416151561014082015260068201805485518186028101860190965280865291949293610160860193929083018282801561229357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612275575b505050919092525050815191925050158015906122b35750610100810151155b80156122c25750610120810151155b8015612307575080516122d59033613737565b806122e7575080516122e79033613702565b8061230757508060a001516001600160a01b0316336001600160a01b0316145b612358576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c696420617267756d656e7473206f72207065726d697373696f6e00604482015290519081900360640190fd5b6000828152600f60209081526040808320600501805460ff60b01b1916600160b01b1790558381015160a08501516001600160a01b03168452600d9092528083206001018054909201909155518391600080516020614fe083398151915291a25050565b336001600160a01b03831614156124045760405162461bcd60e51b815260040180806020018281038252602c815260200180615028602c913960400191505060405180910390fd5b336000818152600d602090815260408083206001600160a01b0387168085526003909101835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b816124818133613737565b6124c0576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b6124ca8383613957565b505050565b6124d7613726565b612516576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805461ff0019169055565b816125438133613737565b612582576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b6124ca83836139ad565b600061143182613a09565b600061143182613a28565b6125aa614d86565b6000828152600f602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b9091041615156101408201526006820180548551818602810186019096528086529194929361016086019392908301828280156126b257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612694575b505050919092525050815191925050158015906126d6575080516126d69033613737565b80156126ef57508060c0015115806126ef57508060e001515b80156126fe5750610100810151155b801561270d5750610120810151155b8015612734575061272c81600001518260200151836101600151613a52565b816040015110155b61276f5760405162461bcd60e51b815260040180806020018281038252603481526020018061510f6034913960400191505060405180910390fd5b6000828152600f6020526040808220600501805460ff60b81b1916600160b81b179055518391600080516020614fe083398151915291a261016081015151156127c7576127c28282610160015151613b09565b611c69565b6000805482518252600e602052604090912060080154116128015780516000908152600e60205260409020600801546127c2908390613b09565b611c69816000015182608001516139ad565b61281c33613a28565b61285b576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b61286e8b8b8b8b8b8b8b8b8b8b8b613da6565b604080518b8152602081018b905281516001600160a01b038e16926000923392600080516020614f4f833981519152929181900390910190a45050505050505050505050565b600061143182613f0f565b60006128cc848484613f32565b949350505050565b6128dc613726565b61291b576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b6000858152600f602052604090205415801561297857506000848152600e602052604090205415155b801561298e575061298a848484613a52565b3410155b801561299d5750600054825111155b6129ee576040805162461bcd60e51b815260206004820152601a60248201527f496e76616c696420617267756d656e7473206f722076616c7565000000000000604482015290519081900360640190fd5b6000848152600e6020526040812060048101549054612a1a9161271091612a1491614114565b9061416d565b905060405180610180016040528086815260200185815260200134815260200160008152602001838152602001336001600160a01b031681526020018560001480612a8057506000878152600e6020908152604080832033845260070190915290205483115b80612a8c575060008551115b151581526000602080830182905260408084018390526060808501849052608080860185905260a09586018a90528c8552600f8452938290208651815586840151600182015591860151600283015585015160038201559184015160048301559183015160058201805460c086015160e08701516101008801516101208901516101408a01511515600160c01b0260ff60c01b19911515600160b81b0260ff60b81b19931515600160b01b0260ff60b01b19951515600160a81b0260ff60a81b19971515600160a01b0260ff60a01b196001600160a01b03909c166001600160a01b0319909a16999099179a909a16979097179590951697909717929092169390931792909216171691909117905561016083015180519192612bb792600685019290910190614e52565b5050604051879150600080516020614fe083398151915290600090a2505050505050565b600061142e83836141af565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516612c885760405162461bcd60e51b81526004018080602001828103825260288152602001806150006028913960400191505060405180910390fd5b6001600160a01b038616331480612caa5750612ca48633612bdb565b15156001145b612ce55760405162461bcd60e51b81526004018080602001828103825260378152602001806151636037913960400191505060405180910390fd5b612cf1868686866141f4565b846001600160a01b0316866001600160a01b0316336001600160a01b0316600080516020614f4f8339815191528787604051808381526020018281526020019250505060405180910390a4612d80338787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061426c92505050565b505050505050565b612d90613726565b612dcf576040805162461bcd60e51b81526020600482018190526024820152600080516020615143833981519152604482015290519081900360640190fd5b612dd8816143e1565b50565b6001600160a01b0381166000908152600d6020526040902060010154612e0190346113d4565b6001600160a01b039091166000908152600d6020526040902060010155565b6001600160a01b0382166000908152600d6020526040902060010154811115612e87576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114612ed2576040519150601f19603f3d011682016040523d82523d6000602084013e612ed7565b606091505b5050905080612f21576040805162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015290519081900360640190fd5b506001600160a01b039091166000908152600d602052604090206001018054919091039055565b612f5133613a28565b612f90576040805162461bcd60e51b81526020600482015260176024820152600080516020614f9a833981519152604482015290519081900360640190fd5b6000838152600e602052604090205415801590612fae575080518251145b612ff3576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b82518110156130c7576130308484838151811061300f57fe5b602002602001015184848151811061302357fe5b6020026020010151614482565b6000848152600e60205260408120600801805490919061304c57fe5b600091825260208220015484516001600160a01b0390911691903390600080516020614f4f8339815191529087908690811061308457fe5b6020026020010151600e60008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a4600101612ff6565b50505050565b6130d5614d86565b6000838152600f602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b9091041615156101408201526006820180548551818602810186019096528086529194929361016086019392908301828280156131dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116131bf575b50505091909252505081519192505015801590613201575061012081015115156001145b80156132105750610140810151155b613254576040805162461bcd60e51b815260206004820152601060248201526f496e76616c69642063616c6c6261636b60801b604482015290519081900360640190fd5b61325e8383613b09565b6000838152600f6020526040902060050154600160c01b900460ff16156124ca576124ca81600001518260800151613957565b60606000825b80156132ad576001919091019060109004613297565b60608267ffffffffffffffff811180156132c657600080fd5b506040519080825280601f01601f1916602001820160405280156132f1576020820181803683370190505b50905060005b838110156133445760108606925061330e8361461f565b826001838703038151811061331f57fe5b60200101906001600160f81b031916908160001a9053506010860495506001016132f7565b50949350505050565b805182516060918491849184910167ffffffffffffffff8111801561337157600080fd5b506040519080825280601f01601f19166020018201604052801561339c576020820181803683370190505b509050806000805b85518110156133f5578581815181106133b957fe5b602001015160f81c60f81b8383806001019450815181106133d657fe5b60200101906001600160f81b031916908160001a9053506001016133a4565b5060005b845181101561344a5784818151811061340e57fe5b602001015160f81c60f81b83838060010194508151811061342b57fe5b60200101906001600160f81b031916908160001a9053506001016133f9565b5090979650505050505050565b6000803411613481576001600160a01b0385166000908152600d6020526040902060010154613483565b345b905060005b83518110156134ff576134f56134c687878785815181106134a557fe5b60200260200101518786815181106134b957fe5b6020026020010151614663565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528491906146b8565b9150600101613488565b5061350a858261474f565b5050505050565b613523846001600160a01b03166147d0565b15612d805763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156135c35781810151838201526020016135ab565b50505050905001848103835286818151815260200191508051906020019060200280838360005b838110156136025781810151838201526020016135ea565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561363e578181015183820152602001613626565b50505050905090810190601f16801561366b5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561369057600080fd5b505af11580156136a4573d6000803e3d6000fd5b505050506040513d60208110156136ba57600080fd5b50516001600160e01b03191614612d805760405162461bcd60e51b81526004018080602001828103825260368152602001806150846036913960400191505060405180910390fd5b6000918252600e6020526040909120600601546001600160a01b0391821691161490565b600c546001600160a01b0316331490565b6000828152600e602090815260408083206001600160a01b038516845260070190915281206002015460ff168061142e575061142e613726565b6000805b85518110156137a15785818151811061378a57fe5b602002602001015182019150806001019050613775565b50600086511180156137b1575060015b80156137be575080612710145b80156137cb575061271084105b613810576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600e60209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b909101805460018101825590855292909320613870939283020191614ea6565b506000898152600e60209081526040909120875161389692600990920191890190614e52565b506000898152600e6020908152604090912086516138bc92600a90920191880190614ee0565b50506000978852600e602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b600061142e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506146b8565b6000828152600e6020908152604091829020600601805460ff60a81b191690558151838152915184927f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd92908290030190a25050565b6000828152600e6020908152604091829020600601805460ff60a81b1916600160a81b1790558151838152915184927f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd92908290030190a25050565b6000908152600e6020526040902060060154600160a81b900460ff1690565b6001600160a01b0381166000908152600d602052604081205460ff16806114315750611431613726565b80516000908190613a93576000858152600e60208181526040808420338552600781018352908420549389905291905254613a8c91613915565b9050613af6565b60005b8351811015613af457600e60008781526020019081526020016000206007016000858381518110613ac357fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020549190910190600101613a96565b505b613b008185614114565b95945050505050565b6000828152600f602052604090208054600690910154606090613b3c576000828152600e60205260409020600801613b4e565b6000848152600f602052604090206006015b805480602002602001604051908101604052809291908181526020018280548015613ba257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613b84575b505083516000898152600f60205260408120600301549596506000199091019493509150508582018311613bd65782613bda565b8582015b90506000825b828111613d22576000868281518110613bf557fe5b60209081029190910181015160008a8152600e835260408082206001600160a01b0384168352600701909352919091205490915015613d19576000888152600e602090815260408083206001600160a01b0385168085526007909101808452828520548f8652600f855292852060010154919094529290915293840193613c7b91614114565b6001600160a01b038083166000818152600d6020908152604080832060010180549096019095558e8252600f8152848220600501548d8352600e82528583208484526007018252918590205485518e8152918201528451919093169391923392600080516020614f4f83398151915292918290030190a46000888152600e602090815260408083206001600160a01b03851684526007019091528120555b50600101613be0565b506000888152600f6020526040902060050154613d49906001600160a01b03168783614807565b6000888152600f6020526040902060030182905583821415611836576000888152600f6020526040808220600501805460ff60c01b1916600160c01b179055518991600080516020614fe083398151915291a25050505050505050565b60008a8152600e6020526040902054158015613dc25750600089115b613e07576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b88600e60008c81526020019081526020016000206000018190555087600e60008c8152602001908152602001600020600101819055506001600e60008c81526020019081526020016000206007016000336001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600e60008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff021916908315150217905550613ef78a88888888888888613771565b613f028b8b8b614807565b5050505050505050505050565b6001600160a01b03166000908152600d6020526040902054610100900460ff1690565b6000828152600e60205260408120600b015481904290600019015b6000868152600e60205260408120600b01805483908110613f6a57fe5b60009182526020822060029091020101546000888152600e60205260408120600b018054929350909184908110613f9d57fe5b9060005260206000209060020201600160028110613fb757fe5b01546000898152600e602090815260408083206001600160a01b038e168452600701909152812060010154919250908311614054576000898152600e602090815260408083206001600160a01b038e168452600701909152902060010154614029906201518090612a14908890613915565b905080614034575060015b614048886140428385614114565b90614114565b86019550505050614093565b61406562015180612a148786613915565b905080614070575060015b9193508391614083886140428385614114565b9095019450505060001901613f4d565b506000858152600e60205260409020600101546140b4908390600a0a61416d565b6000868152600e6020526040812060030154919350906140df906305f5e10090612a14908890614114565b6000878152600e60205260409020600201549091506141099061410290836113d4565b84906113d4565b979650505050505050565b60008261412357506000611431565b8282028284828161413057fe5b041461142e5760405162461bcd60e51b81526004018080602001828103825260218152602001806150ee6021913960400191505060405180910390fd5b600061142e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506148b0565b60006141bb8383614915565b8061142e5750506001600160a01b039182166000908152600d602090815260408083209390941682526003909201909152205460ff1690565b600080341161421e576001600160a01b0385166000908152600d6020526040902060010154614220565b345b905061426061423186868686614663565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528391906146b8565b905061350a858261474f565b61427e846001600160a01b03166147d0565b15612d805763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561431f578181015183820152602001614307565b50505050905090810190601f16801561434c5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561436f57600080fd5b505af1158015614383573d6000803e3d6000fd5b505050506040513d602081101561439957600080fd5b50516001600160e01b03191614612d805760405162461bcd60e51b81526004018080602001828103825260318152602001806151c86031913960400191505060405180910390fd5b6001600160a01b0381166144265760405162461bcd60e51b8152600401808060200182810382526026815260200180614fba6026913960400191505060405180910390fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000838152600e6020526040812060080180546124ca92906144a057fe5b6000918252602080832090910154868352600e8083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a94909390840192919061450a57fe5b906000526020600020906002020160016002811061452457fe5b0154905260008a8152600e60209081526040918290206009018054835181840281018401909452808452909183018282801561458957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161456b575b50505060008d8152600e6020908152604091829020600a01805483518184028101840190945280845292945092508301828280156145e657602002820191906000526020600020905b8154815260200190600101908083116145d2575b50505060008e8152600e60205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b0316613da6565b600060098260ff161161463957506030810160f81b6114ec565b8160ff16600a111580156146515750600f8260ff1611155b1561028b57506057810160f81b6114ec565b6000614671858585856149fc565b156146ac576040805162461bcd60e51b8152602060048201526006602482015265131bd8dad95960d21b604482015290519081900360640190fd5b613b0085858585614a34565b600081848411156147475760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561470c5781810151838201526020016146f4565b50505050905090810190601f1680156147395780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60003411801561475f5750600081115b156147ab576001600160a01b0382166000908152600d602052604090206001015461478a90826113d4565b6001600160a01b0383166000908152600d6020526040902060010155611c69565b34611c69576001600160a01b03919091166000908152600d6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081158015906128cc5750141592915050565b6000828152600e6020526040902060060154600160a01b900460ff16158061485d57506000828152600e602090815260408083206001600160a01b038716845260070190915290206002015462010000900460ff165b6148a5576040805162461bcd60e51b81526020600482015260146024820152731059191c995cdcc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b6124ca838383614b88565b600081836148ff5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561470c5781810151838201526020016146f4565b50600083858161490b57fe5b0495945050505050565b6000805b600a8110156149f2576000600282600a811061493157fe5b01546001600160a01b0316146149ea576000600282600a811061495057fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b1580156149a257600080fd5b505afa1580156149b6573d6000803e3d6000fd5b505050506040513d60208110156149cc57600080fd5b50516001600160a01b031614156149e857600192505050611431565b505b600101614919565b5060009392505050565b6000614a0783613a09565b80614a165750614a1685613f0f565b80614a255750614a2584613f0f565b80613b00575050159392505050565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152600e82528381206001600160a01b038916825260070190915291822054614a8f9184906146b8565b6000848152600e602090815260408083206001600160a01b038a168452600701909152902055614ac0848484614807565b614acb858484613f32565b905060005b6000848152600e6020526040902060090154811015613344576000848152600e60205260408120600901805483908110614b0657fe5b6000918252602080832090910154878352600e90915260408220600a0180546001600160a01b0390921693509084908110614b3d57fe5b6000918252602090912001549050614b5b612710612a148684614114565b6001600160a01b039092166000908152600d60205260409020600190810180549093019092555001614ad0565b6000828152600e602090815260408083206001600160a01b0387168452600701909152812054614bb890836113d4565b6000848152600e602090815260408083206001600160a01b0389168452600701909152902054909150614cb5576000838152600e602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16614c84576001600160a01b0384166000818152600d6020908152604080832060020180546001818101835591855283852001889055878452600e83529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b6000838152600e602090815260408083206001600160a01b0388168452600701909152902042600190910155614d56565b6000838152600e602090815260408083206001600160a01b0388168452600701909152812060010154614ce9904290613915565b6000858152600e602090815260408083206001600160a01b038a16845260070190915281205491925090614d23908490612a149085614114565b6000868152600e602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b6000928352600e602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b604051806101800160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600015158152602001600015158152602001600015158152602001600015158152602001606081525090565b82600a8101928215614e42579160200282015b82811115614e4257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614e0d565b50614e4e929150614f1a565b5090565b828054828255906000526020600020908101928215614e425791602002820182811115614e4257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190614e0d565b8260028101928215614ed4579160200282015b82811115614ed4578251825591602001919060010190614eb9565b50614e4e929150614f39565b828054828255906000526020600020908101928215614ed45791602002820182811115614ed4578251825591602001919060010190614eb9565b5b80821115614e4e5780546001600160a01b0319168155600101614f1b565b5b80821115614e4e5760008155600101614f3a56fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373496e73756666696369656e74207065726d697373696f6e0000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736ce984c7277c5fe8f47fdf17245300ed19587e3bc1041342d79726b2b2f1dc0b455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77496e73756666696369656e742063616c6c6261636b2c207065726d697373696f6e206f7220657363726f77656420616d6f756e744f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a26469706673582212202d2581029e022b60f0412722ec4eeaa3e112c4a8538901cb286171505db1327364736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "211:605:0:-:0;;;423:174;;;;;;;;;-1:-1:-1;637:30:13;656:10;637:18;:30::i;:::-;490:2:0;448:7;:44;502:48;;;;;;;;;;;;;;;;;;;;;;;:15;;:48;:::i;:::-;-1:-1:-1;560:30:0;579:10;560:18;:30::i;:::-;211:605;;1677:239:13;-1:-1:-1;;;;;1750:22:13;;1742:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1851:13;;1830:45;;-1:-1:-1;;;;;1830:45:13;;;;1851:13;;1830:45;;1851:7;;1830:45;1885:13;:24;;-1:-1:-1;;;;;;1885:24:13;-1:-1:-1;;;;;1885:24:13;;;;;;;;;;1677:239::o;211:605:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;211:605:0;;;-1:-1:-1;211:605:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "211:605:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:10:16;1226:18;;;;:6;:18;;;;;:29;;;:44;;1260:9;1226:33;:44::i;:::-;1201:10;1194:18;;;;:6;:18;;;;;:29;;:76;211:605:0;;;;;1575:234:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1575:234:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;980:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;980:255:12;-1:-1:-1;;;;;;980:255:12;;:::i;:::-;;;;;;;;;;;;;;;;;;671:141:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;671:141:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5755:770:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;-1:-1:-1;5755:770:12;;-1:-1:-1;5755:770:12;-1:-1:-1;5755:770:12;:::i;:::-;;2016:22:8;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2016:22:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3057:453:6;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3057:453:6;;:::i;977:99:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;977:99:9;-1:-1:-1;;;;;977:99:9;;:::i;536:144:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;536:144:6;;:::i;2044:39:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2044:39:8;-1:-1:-1;;;;;2044:39:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2136:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2136:47:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2136:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;465:151:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:151:15;;-1:-1:-1;465:151:15;;-1:-1:-1;;;;465:151:15:i;2251:823:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;2251:823:10;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;-1:-1:-1;;;;;2251:823:10;;:::i;2133:631:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2133:631:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2133:631:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2133:631:12;;;;;;;;-1:-1:-1;2133:631:12;;-1:-1:-1;;;;;2133:631:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2133:631:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2133:631:12;;-1:-1:-1;2133:631:12;;-1:-1:-1;;;;;2133:631:12:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:161:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;949:161:7;;;;;;;;:::i;1412:132:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1412:132:10;;;;;;-1:-1:-1;;;;;1412:132:10;;:::i;388:140:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:140:14;;;;;;-1:-1:-1;;;;;388:140:14;;:::i;684:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;684:140:14;;;;;;-1:-1:-1;;;;;684:140:14;;:::i;629:119:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;629:119:11;-1:-1:-1;;;;;629:119:11;;:::i;885:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;885:117:11;-1:-1:-1;;;;;885:117:11;;:::i;731:144:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;731:144:10;;;;;;-1:-1:-1;;;;;731:144:10;;:::i;1123:93:13:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1123:93:13;;;;;;;;;;;;;;2325:630:6;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2325:630:6;;:::i;3242:302:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3242:302:12;;;;;;;;;;:::i;537:129:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;537:129:9;;;;;;;:::i;1182:102::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1182:102:9;-1:-1:-1;;;;;1182:102:9;;:::i;320:125::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;320:125:9;;;;;;;:::i;770:105::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;770:105:9;;:::i;1148:116:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1148:116:11;-1:-1:-1;;;;;1148:116:11;;:::i;3611:1066:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3611:1066:6;;:::i;2103:1038:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2103:1038:11;;;;;;;;-1:-1:-1;2103:1038:11;;-1:-1:-1;;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2103:1038:11;;;;;;;;-1:-1:-1;2103:1038:11;;-1:-1:-1;;;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2103:1038:11;;-1:-1:-1;;2103:1038:11;;;-1:-1:-1;;;2103:1038:11;;;;;;;;;;-1:-1:-1;;;;;2103:1038:11;;:::i;1401:113:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1401:113:9;-1:-1:-1;;;;;1401:113:9;;:::i;552:159:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;552:159:7;;;;;;;;;;;;;:::i;1044:142:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1044:142:10;;;;;;-1:-1:-1;;;;;1044:142:10;;:::i;1030:1166:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1030:1166:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1030:1166:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1030:1166:6;;-1:-1:-1;;1030:1166:6;;;-1:-1:-1;1030:1166:6;;-1:-1:-1;;1030:1166:6:i;3825:157:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3825:157:12;;;;;;;;;;:::i;2089:41:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2089:41:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2089:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;4536:630:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4536:630:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4536:630:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4536:630:12;;;;;;;;;;-1:-1:-1;4536:630:12;;-1:-1:-1;4536:630:12;-1:-1:-1;4536:630:12;:::i;1365:116:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1365:116:13;-1:-1:-1;;;;;1365:116:13;;:::i;879:123:16:-;;;;;;;;;;;;;;;;-1:-1:-1;879:123:16;-1:-1:-1;;;;;879:123:16;;:::i;459:279::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;459:279:16;;;;;;;;:::i;3368:645:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3368:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3368:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3368:645:11;;;;;;;;-1:-1:-1;3368:645:11;;-1:-1:-1;;;;;3368:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3368:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3368:645:11;;-1:-1:-1;3368:645:11;;-1:-1:-1;;;;;3368:645:11:i;4901:464:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4901:464:6;;;;;;;:::i;867:176:18:-;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;-1:-1:-1;867:176:18;;;;;:::o;1575:234:12:-;1653:7;-1:-1:-1;;;;;1680:21:12;;1672:77;;;;-1:-1:-1;;;1672:77:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1766:11:12;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1766:28:12;;;;;;:19;;;;:28;;;:36;;1575:234::o;980:255::-;1060:4;-1:-1:-1;;;;;;1078:42:12;;-1:-1:-1;;;1078:42:12;;:99;;-1:-1:-1;;;;;;;1134:43:12;;-1:-1:-1;;;1134:43:12;1078:99;1074:135;;;-1:-1:-1;1196:4:12;1189:11;;1074:135;-1:-1:-1;1223:5:12;980:255;;;;:::o;671:141:0:-;771:15;760:45;;;;;;;;;;;;;-1:-1:-1;;760:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;728:13;;760:45;;;;771:15;;760:45;;771:15;760:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;788:16;801:2;788:12;:16::i;:::-;760:10;:45::i;5755:770:12:-;5986:27;;;5978:86;;;;-1:-1:-1;;;5978:86:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6082:16:12;;6074:69;;;;-1:-1:-1;;;6074:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6174:18:12;;6182:10;6174:18;;:64;;;6196:34;6213:4;6219:10;6196:16;:34::i;:::-;:42;;6234:4;6196:42;6174:64;6153:166;;;;-1:-1:-1;;;6153:166:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6330:37;6345:4;6351:2;6355:3;;6330:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6330:37:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6360:6:12;;-1:-1:-1;6360:6:12;;;;6330:37;;;6360:6;;6330:37;6360:6;6330:37;;;;;;;;;-1:-1:-1;6330:14:12;;-1:-1:-1;;;6330:37:12:i;:::-;6415:2;-1:-1:-1;;;;;6383:48:12;6409:4;-1:-1:-1;;;;;6383:48:12;6397:10;-1:-1:-1;;;;;6383:48:12;;6419:3;;6424:6;;6383:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6383:48:12;;;;;;;;;;;;;;;;;-1:-1:-1;6383:48:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6383:48:12;;;;;;;;-1:-1:-1;6383:48:12;;-1:-1:-1;;;;;;;6383:48:12;6442:76;6478:10;6490:4;6496:2;6500:3;;6442:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6442:76:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6505:6:12;;-1:-1:-1;6505:6:12;;;;6442:76;;;6505:6;;6442:76;6505:6;6442:76;;;;;;;;;-1:-1:-1;;6442:76:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6513:4:12;;-1:-1:-1;6513:4:12;;;;6442:76;;6513:4;;;;6442:76;;;;;;;;;-1:-1:-1;6442:35:12;;-1:-1:-1;;;6442:76:12:i;:::-;5755:770;;;;;;;;:::o;2016:22:8:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;2016:22:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2016:22:8;;;;;;;-1:-1:-1;;;;;;;2016:22:8;;:::o;3057:453:6:-;3121:24;;:::i;:::-;3148:22;;;;:10;:22;;;;;;;;;3121:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3121:49:6;;;;;;;-1:-1:-1;;;3121:49:6;;;;;;;;;;-1:-1:-1;;;3121:49:6;;;;;;;;;;-1:-1:-1;;;3121:49:6;;;;;;;;;;-1:-1:-1;;;3121:49:6;;;;;;;;;;-1:-1:-1;;;3121:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3148:22;;3121:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3121:49:6;;;;;;;;;;;;;;;;-1:-1:-1;;;3121:49:6;;;;-1:-1:-1;;3189:16:6;;3121:49;;-1:-1:-1;;3189:21:6;;;;:88;;-1:-1:-1;3248:16:6;;3230:47;;3266:10;3230:17;:47::i;:::-;3189:133;;;;-1:-1:-1;3297:16:6;;;;:25;3189:133;:179;;;;-1:-1:-1;3342:17:6;;;;:26;3189:179;3181:223;;;;;-1:-1:-1;;;3181:223:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3415:22;;;;:10;:22;;;;;;:38;;:45;;-1:-1:-1;;;;3415:45:6;-1:-1:-1;;;3415:45:6;;;3476:27;3426:10;;-1:-1:-1;;;;;;;;;;;3476:27:6;;3057:453;;:::o;977:99:9:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;1041:12:9::1;;::::0;;;:6:::1;:12;::::0;;;;:28;;-1:-1:-1;;1041:28:9::1;;;::::0;;977:99::o;536:144:6:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;625:7:6::1;:48:::0;536:144::o;2044:39:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2136:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2136:47:8;;;;-1:-1:-1;;;2136:47:8;;;;;-1:-1:-1;;;2136:47:8;;;;;-1:-1:-1;;;2136:47:8;;;;;-1:-1:-1;;;2136:47:8;;;;;-1:-1:-1;;;2136:47:8;;;;;:::o;465:151:15:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;562:47:15::1;:30;595:14:::0;562:47:::1;;:::i;:::-;;465:151:::0;:::o;2251:823:10:-;2686:2;427:28;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:64:10;;;;;;;;;;;;;;;2729:1:::1;2708:11:::0;;;:7:::1;:11;::::0;;;;:18;2700:48:::1;;;::::0;;-1:-1:-1;;;2700:48:10;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2700:48:10;;;;;;;;;;;;;::::1;;2759:262;2769:2;2791:12;2823:15;2858:14;2892:24;2936:21;2977:9;3006:14;2759:9;:262::i;:::-;3037:30;::::0;;;;;;;3050:2;;3037:30:::1;::::0;;;;;::::1;::::0;;::::1;2251:823:::0;;;;;;;;;:::o;2133:631:12:-;2282:16;2341:3;:10;2322:8;:15;:29;2314:90;;;;-1:-1:-1;;;2314:90:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:30;2462:8;:15;2448:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2448:30:12;;2415:63;;2494:9;2489:238;2513:8;:15;2509:1;:19;2489:238;;;2580:1;-1:-1:-1;;;;;2557:25:12;:8;2566:1;2557:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2557:25:12;;;2549:90;;;;-1:-1:-1;;;2549:90:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2672:7;:15;2680:3;2684:1;2680:6;;;;;;;;;;;;;;2672:15;;;;;;;;;;;:23;;:36;2696:8;2705:1;2696:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2672:36:12;-1:-1:-1;;;;;2672:36:12;;;;;;;;;;;;:44;;;2653:13;2667:1;2653:16;;;;;;;;;;;;;;;;;:63;2530:3;;2489:238;;;-1:-1:-1;2744:13:12;2133:631;-1:-1:-1;;;2133:631:12:o;949:161:7:-;1019:7;1065:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1065:28:7;;;;:19;;:28;;;;;:37;;;1045:58;;:15;;:19;:58::i;1412:132:10:-;1487:4;1510:27;1523:2;1527:9;1510:12;:27::i;388:140:14:-;462:2;427:28:10;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:64:10;;;;;;;;;;;;;;;-1:-1:-1;476:11:14::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;476:27:14;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:45:::0;;-1:-1:-1;;476:45:14::1;::::0;::::1;::::0;;388:140::o;684:::-;757:2;427:28:10;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:64:10;;;;;;;;;;;;;;;-1:-1:-1;812:5:14::1;771:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;771:27:14;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:46:::0;;-1:-1:-1;;771:46:14::1;::::0;;684:140::o;629:119:11:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:17:11::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;705:36:11::1;737:4;705:36;::::0;;629:119::o;885:117::-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;958:17:11::1;990:5;958:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;958:37:11::1;::::0;;885:117::o;731:144:10:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;819:11:10::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;819:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;819:49:10::1;864:4;819:49;::::0;;731:144::o;1123:93:13:-;1196:13;;-1:-1:-1;;;;;1196:13:13;1123:93;:::o;2325:630:6:-;2388:24;;:::i;:::-;2415:22;;;;:10;:22;;;;;;;;;2388:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2388:49:6;;;;;;;-1:-1:-1;;;2388:49:6;;;;;;;;;;-1:-1:-1;;;2388:49:6;;;;;;;;;;-1:-1:-1;;;2388:49:6;;;;;;;;;;-1:-1:-1;;;2388:49:6;;;;;;;;;;-1:-1:-1;;;2388:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:22;;2388:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2388:49:6;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:49:6;;;;-1:-1:-1;;2456:16:6;;2388:49;;-1:-1:-1;;2456:21:6;;;;:66;;-1:-1:-1;2497:16:6;;;;:25;2456:66;:112;;;;-1:-1:-1;2542:17:6;;;;:26;2456:112;:294;;;;-1:-1:-1;2602:16:6;;2589:42;;2620:10;2589:12;:42::i;:::-;:110;;;-1:-1:-1;2670:16:6;;2652:47;;2688:10;2652:17;:47::i;:::-;2589:160;;;;2734:8;:15;;;-1:-1:-1;;;;;2720:29:6;:10;-1:-1:-1;;;;;2720:29:6;;2589:160;2448:338;;;;;-1:-1:-1;;;2448:338:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;2797:22;;;;:10;:22;;;;;;;;:30;;:37;;-1:-1:-1;;;;2797:37:6;-1:-1:-1;;;2797:37:6;;;2882:23;;;;2851:15;;;;-1:-1:-1;;;;;2844:23:6;;;:6;:23;;;;;;2830:4;2844:34;:61;;;;;;;;2921:27;2808:10;;-1:-1:-1;;;;;;;;;;;2921:27:6;;2325:630;;:::o;3242:302:12:-;3338:10;-1:-1:-1;;;;;3338:22:12;;;;3330:79;;;;-1:-1:-1;;;3330:79:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3426:10;3419:18;;;;:6;:18;;;;;;;;-1:-1:-1;;;;;3419:46:12;;;;;:36;;;;:46;;;;;;:57;;-1:-1:-1;;3419:57:12;;;;;;;;;;3491:46;;;;;;;3419;;3426:10;3491:46;;;;;;;;;;;3242:302;;:::o;537:129:9:-;615:2;427:28:10;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:64:10;;;;;;;;;;;;;;;629:30:9::1;642:2;646:12;629;:30::i;:::-;537:129:::0;;;:::o;1182:102::-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;1248:12:9::1;1272:5;1248:12:::0;;;:6:::1;:12;::::0;;;;:29;;-1:-1:-1;;1248:29:9::1;::::0;;1182:102::o;320:125::-;396:2;427:28:10;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:64:10;;;;;;;;;;;;;;;410:28:9::1;421:2;425:12;410:10;:28::i;770:105::-:0;828:4;850:18;865:2;850:14;:18::i;1148:116:11:-;1211:4;1234:23;1247:9;1234:12;:23::i;3611:1066:6:-;3674:24;;:::i;:::-;3701:22;;;;:10;:22;;;;;;;;;3674:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3674:49:6;;;;;;;-1:-1:-1;;;3674:49:6;;;;;;;;;;-1:-1:-1;;;3674:49:6;;;;;;;;;;-1:-1:-1;;;3674:49:6;;;;;;;;;;-1:-1:-1;;;3674:49:6;;;;;;;;;;-1:-1:-1;;;3674:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3701:22;;3674:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3674:49:6;;;;;;;;;;;;;;;;-1:-1:-1;;;3674:49:6;;;;-1:-1:-1;;3742:16:6;;3674:49;;-1:-1:-1;;3742:21:6;;;;:83;;-1:-1:-1;3796:16:6;;3783:42;;3814:10;3783:12;:42::i;:::-;3742:160;;;;;3847:8;:26;;;3846:27;:55;;;;3877:8;:24;;;3846:55;3742:205;;;;-1:-1:-1;3922:16:6;;;;:25;3742:205;:251;;;;-1:-1:-1;3967:17:6;;;;:26;3742:251;:364;;;;;4040:66;4055:8;:16;;;4073:8;:14;;;4089:8;:16;;;4040:14;:66::i;:::-;4013:8;:23;;;:93;;3742:364;3734:445;;;;-1:-1:-1;;;3734:445:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4190:22;;;;:10;:22;;;;;;:31;;:38;;-1:-1:-1;;;;4190:38:6;-1:-1:-1;;;4190:38:6;;;4244:27;4201:10;;-1:-1:-1;;;;;;;;;;;4244:27:6;;4286:16;;;;:23;:27;4282:389;;4329:53;4346:10;4358:8;:16;;;:23;4329:16;:53::i;:::-;4282:389;;;4450:7;:39;;4411:16;;4403:25;;:7;:25;;;;;;:36;;:43;:86;4399:272;;4542:16;;4534:25;;;;:7;:25;;;;;:36;;:43;4505:73;;4522:10;;4505:16;:73::i;4399:272::-;4609:51;4620:8;:16;;;4638:8;:21;;;4609:10;:51::i;2103:1038:11:-;331:24;344:10;331:12;:24::i;:::-;323:60;;;;;-1:-1:-1;;;323:60:11;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;323:60:11;;;;;;;;;;;;;;;2680:378:::1;2693:9;2725:2;2750:6;2779:8;2810:12;2845:15;2883:14;2920:24;2967:21;3011:9;3043:14;2680:12;:378::i;:::-;3073:61;::::0;;;;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;3073:61:11;::::1;::::0;3108:1:::1;::::0;3088:10:::1;::::0;-1:-1:-1;;;;;;;;;;;3073:61:11;;;;;;;;;::::1;2103:1038:::0;;;;;;;;;;;:::o;1401:113:9:-;1463:4;1485:22;1502:4;1485:16;:22::i;552:159:7:-;642:7;668:36;685:7;694:2;698:5;668:16;:36::i;:::-;661:43;552:159;-1:-1:-1;;;;552:159:7:o;1044:142:10:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;1174:5:10::1;1129:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1129:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1129:50:10::1;::::0;;1044:142::o;1030:1166:6:-;1190:22;;;;:10;:22;;;;;:30;:35;:66;;;;-1:-1:-1;1255:1:6;1229:16;;;:7;:16;;;;;:23;:27;;1190:66;:138;;;;;1289:39;1304:7;1313:5;1320:7;1289:14;:39::i;:::-;1276:9;:52;;1190:138;:215;;;;-1:-1:-1;1366:7:6;:39;1348:14;;:57;;1190:215;1182:254;;;;;-1:-1:-1;;;1182:254:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:18;1497:16;;;:7;:16;;;;;:38;;;;1469:23;;1468:80;;1542:5;;1469:67;;:27;:67::i;:::-;1468:73;;:80::i;:::-;1447:101;;1584:562;;;;;;;;1616:7;1584:562;;;;1706:5;1584:562;;;;1741:9;1584:562;;;;2064:1;1584:562;;;;2123:12;1584:562;;;;1645:10;-1:-1:-1;;;;;1584:562:6;;;;;1784:5;1793:1;1784:10;1783:106;;;-1:-1:-1;1831:16:6;;;;:7;:16;;;;;;;;1856:10;1831:36;;:24;;:36;;;;;:44;:57;-1:-1:-1;1783:106:6;:161;;;;1942:1;1925:7;:14;:18;1783:161;1584:562;;;;1975:5;1584:562;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:22;;;:10;:22;;;;;;:587;;;;;;;;1584:562;1559:587;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1559:587:6;-1:-1:-1;;;;1559:587:6;;;-1:-1:-1;;;1559:587:6;-1:-1:-1;;;;1559:587:6;;;-1:-1:-1;;;1559:587:6;-1:-1:-1;;;;1559:587:6;;;-1:-1:-1;;;1559:587:6;-1:-1:-1;;;;1559:587:6;;;-1:-1:-1;;;1559:587:6;-1:-1:-1;;;;;;;;;1559:587:6;;;-1:-1:-1;;;;;;1559:587:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;:587;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2162:27:6;;2178:10;;-1:-1:-1;;;;;;;;;;;;2162:27:6;;;;1030:1166;;;;;;:::o;3825:157:12:-;3916:4;3939:36;3957:7;3966:8;3939:17;:36::i;2089:41:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2089:41:8;;;;-1:-1:-1;;;2089:41:8;;;;;-1:-1:-1;;;2089:41:8;;;;:::o;4536:630:12:-;-1:-1:-1;;;;;4738:16:12;;4730:69;;;;-1:-1:-1;;;4730:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4830:18:12;;4838:10;4830:18;;:64;;;4852:34;4869:4;4875:10;4852:16;:34::i;:::-;:42;;4890:4;4852:42;4830:64;4809:166;;;;-1:-1:-1;;;4809:166:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4986:30;4996:4;5002:2;5006;5010:5;4986:9;:30::i;:::-;5065:2;-1:-1:-1;;;;;5032:47:12;5059:4;-1:-1:-1;;;;;5032:47:12;5047:10;-1:-1:-1;;;;;5032:47:12;-1:-1:-1;;;;;;;;;;;5069:2:12;5073:5;5032:47;;;;;;;;;;;;;;;;;;;;;;;;5090:69;5121:10;5133:4;5139:2;5143;5147:5;5154:4;;5090:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5090:30:12;;-1:-1:-1;;;5090:69:12:i;:::-;4536:630;;;;;;:::o;1365:116:13:-;887:10;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;1446:28:::1;1465:8;1446:18;:28::i;:::-;1365:116:::0;:::o;879:123:16:-;-1:-1:-1;;;;;959:10:16;;;;;;:6;:10;;;;;:21;;;:36;;985:9;959:25;:36::i;:::-;-1:-1:-1;;;;;935:10:16;;;;;;;:6;:10;;;;;:21;;:60;879:123::o;459:279::-;-1:-1:-1;;;;;532:10:16;;;;;;:6;:10;;;;;:21;;;:31;-1:-1:-1;532:31:16;524:64;;;;;-1:-1:-1;;;524:64:16;;;;;;;;;;;;-1:-1:-1;;;524:64:16;;;;;;;;;;;;;;;617:26;;599:12;;-1:-1:-1;;;;;617:7:16;;;632:6;;599:12;617:26;599:12;617:26;632:6;617:7;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:45;;;661:7;653:37;;;;;-1:-1:-1;;;653:37:16;;;;;;;;;;;;-1:-1:-1;;;653:37:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;;700:10:16;;;;;;;:6;:10;;;;;:21;;:31;;;;;;;;459:279::o;3368:645:11:-;331:24;344:10;331:12;:24::i;:::-;323:60;;;;;-1:-1:-1;;;323:60:11;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;323:60:11;;;;;;;;;;;;;;;3569:1:::1;3548:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;3604:14;:21;3590:3;:10;:35;3548:77;3540:107;;;::::0;;-1:-1:-1;;;3540:107:11;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3540:107:11;;;;;;;;;;;;;::::1;;3663:9;3658:349;3682:3;:10;3678:1;:14;3658:349;;;3713:42;3725:2;3729:3;3733:1;3729:6;;;;;;;;;;;;;;3737:14;3752:1;3737:17;;;;;;;;;;;;;;3713:11;:42::i;:::-;3878:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;3937:6;;-1:-1:-1;;;;;3878:25:11;;::::1;::::0;;3790:10:::1;::::0;-1:-1:-1;;;;;;;;;;;3775:221:11;3937:3;;3941:1;;3937:6;::::1;;;;;;;;;;;3977:7;:11;3985:2;3977:11;;;;;;;;;;;:18;;;3775:221;;;;;;;;;;;;;;;;;;;;;;;;3694:3;;3658:349;;;;3368:645:::0;;;:::o;4901:464:6:-;4982:24;;:::i;:::-;5009:22;;;;:10;:22;;;;;;;;;4982:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4982:49:6;;;;;;;-1:-1:-1;;;4982:49:6;;;;;;;;;;-1:-1:-1;;;4982:49:6;;;;;;;;;;-1:-1:-1;;;4982:49:6;;;;;;;;;;-1:-1:-1;;;4982:49:6;;;;;;;;;;-1:-1:-1;;;4982:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5009:22;;4982:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4982:49:6;;;;;;;;;;;;;;;;-1:-1:-1;;;4982:49:6;;;;-1:-1:-1;;5050:16:6;;4982:49;;-1:-1:-1;;5050:21:6;;;;:66;;-1:-1:-1;5091:17:6;;;;:25;;5112:4;5091:25;5050:66;:113;;;;-1:-1:-1;5136:18:6;;;;:27;5050:113;5042:142;;;;;-1:-1:-1;;;5042:142:6;;;;;;;;;;;;-1:-1:-1;;;5042:142:6;;;;;;;;;;;;;;;5195:37;5212:10;5224:7;5195:16;:37::i;:::-;5247:22;;;;:10;:22;;;;;:32;;;-1:-1:-1;;;5247:32:6;;;;5243:116;;;5295:53;5308:8;:16;;;5326:8;:21;;;5295:12;:53::i;933:419:19:-;986:13;1011:10;1044:1;1055:68;1062:6;;1055:68;;1084:7;;;;;;1110:2;1105:7;;1055:68;;;1132:16;1161:5;1151:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16:19;;1132:35;;1182:6;1177:141;1194:5;1192:1;:7;1177:141;;;1228:2;1224:1;:6;1220:10;;1265:21;1283:1;1265:11;:21::i;:::-;1244:3;1260:1;1256;1248:5;:9;:13;1244:18;;;;;;;;;;;:42;-1:-1:-1;;;;;1244:42:19;;;;;;;;-1:-1:-1;1305:2:19;1300:7;;;-1:-1:-1;1201:3:19;;1177:141;;;-1:-1:-1;1341:3:19;933:419;-1:-1:-1;;;;933:419:19:o;86:515::-;305:10;;292;;163:13;;213:1;;250;;163:13;;292:23;281:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:35:19;-1:-1:-1;262:54:19;-1:-1:-1;262:54:19;365:6;;405:76;421:3;:10;417:1;:14;405:76;;;464:3;468:1;464:6;;;;;;;;;;;;;;;;452:4;457:3;;;;;;452:9;;;;;;;;;;;:18;-1:-1:-1;;;;;452:18:19;;;;;;;;-1:-1:-1;433:3:19;;405:76;;;-1:-1:-1;499:1:19;490:76;506:3;:10;502:1;:14;490:76;;;549:3;553:1;549:6;;;;;;;;;;;;;;;;537:4;542:3;;;;;;537:9;;;;;;;;;;;:18;-1:-1:-1;;;;;537:18:19;;;;;;;;-1:-1:-1;518:3:19;;490:76;;;-1:-1:-1;589:4:19;;86:515;-1:-1:-1;;;;;;;86:515:19:o;4759:404:7:-;4875:19;4909:1;4897:9;:13;:51;;-1:-1:-1;;;;;4925:12:7;;;;;;:6;:12;;;;;:23;;;4897:51;;;4913:9;4897:51;4875:73;;4963:9;4958:157;4982:3;:10;4978:1;:14;4958:157;;;5027:77;5043:40;5055:4;5061:2;5065:3;5069:1;5065:6;;;;;;;;;;;;;;5073;5080:1;5073:9;;;;;;;;;;;;;;5043:11;:40::i;:::-;5027:77;;;;;;;;;;;;-1:-1:-1;;;5027:77:7;;;;:11;;:77;:15;:77::i;:::-;5013:91;-1:-1:-1;4994:3:7;;4958:157;;;;5124:32;5138:4;5144:11;5124:13;:32::i;:::-;4759:404;;;;;:::o;7148:558:12:-;7391:15;:2;-1:-1:-1;;;;;7391:13:12;;:15::i;:::-;7388:312;;;7549:52;;;-1:-1:-1;;;;;7447:154:12;;7464:2;-1:-1:-1;;;;;7447:43:12;;7491:8;7501:4;7507:3;7512:6;7520:4;7447:78;;;;;;;;;;;;;-1:-1:-1;;;;;7447:78:12;;;;;;-1:-1:-1;;;;;7447:78:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7447:78:12;-1:-1:-1;;;;;;7447:154:12;;7422:267;;;;-1:-1:-1;;;7422:267:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7535:160:6;7621:4;7644:11;;;:7;:11;;;;;;:26;;;-1:-1:-1;;;;;7644:44:6;;;:26;;:44;;7535:160::o;1999:100:13:-;2079:13;;-1:-1:-1;;;;;2079:13:13;2065:10;:27;;1999:100::o;3175:162:10:-;3251:4;3274:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3274:30:10;;;;:19;;:30;;;;;:42;;;;;;:56;;;3320:10;:8;:10::i;4257:1359:11:-;4676:23;4718:9;4713:120;4737:24;:31;4733:1;:35;4713:120;;;4806:24;4831:1;4806:27;;;;;;;;;;;;;;4787:46;;;;4770:3;;;;;4713:120;;;;4876:1;4852:14;:21;:25;:75;;;;-1:-1:-1;4881:46:11;4852:75;:119;;;;;4947:15;4966:5;4947:24;4852:119;:168;;;;;5015:5;4991:21;:29;4852:168;4844:214;;;;;-1:-1:-1;;;4844:214:11;;;;;;;;;;;;-1:-1:-1;;;4844:214:11;;;;;;;;;;;;;;;5069:11;;;;:7;:11;;;;;;;;:24;;;:39;;;5155:18;;5118:34;;;;:55;;;;5218:18;;;;-1:-1:-1;5183:32:11;;:53;5246:74;;;;;;;5283:15;5246:74;;5300:18;;;;5246:74;;;;:30;;;;:74;;5234:1;5246:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5330:11:11;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;5383:11:11;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;5456:11:11;;;;:7;:11;;;;;;:33;;;:57;;;;5523:21;;;;:33;;-1:-1:-1;;;;5523:33:11;-1:-1:-1;;;5523:33:11;;;;;;;;;;;-1:-1:-1;;;;;;5566:43:11;-1:-1:-1;;;;;5566:43:11;;;;;;;;;;-1:-1:-1;;;;4257:1359:11:o;1307:134:18:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;1771:153:9:-;1867:5;1846:11;;;:7;:11;;;;;;;;;:18;;:26;;-1:-1:-1;;;;1846:26:9;;;1887:30;;;;;;;1854:2;;1887:30;;;;;;;;;1771:153;;:::o;1615:150::-;1688:11;;;;:7;:11;;;;;;;;;:18;;:25;;-1:-1:-1;;;;1688:25:9;-1:-1:-1;;;1688:25:9;;;1728:30;;;;;;;1696:2;;1728:30;;;;;;;;;1615:150;;:::o;1930:107::-;1989:4;2012:11;;;:7;:11;;;;;:18;;;-1:-1:-1;;;2012:18:9;;;;;1930:107::o;4114:137:11:-;-1:-1:-1;;;;;4201:17:11;;4178:4;4201:17;;;:6;:17;;;;;:29;;;;:43;;;4234:10;:8;:10::i;7018:511:6:-;7182:14;;7123:7;;;;7178:303;;7262:16;;;;:7;:16;;;;;;;;7287:10;7262:36;;:24;;;:36;;;;;:44;7234:16;;;;;;;:23;:73;;:27;:73::i;:::-;7217:90;;7178:303;;;7343:6;7338:133;7355:7;:14;7351:1;:18;7338:133;;;7412:7;:16;7420:7;7412:16;;;;;;;;;;;:24;;:36;7437:7;7445:1;7437:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7412:36:6;;;;;;;;;;;-1:-1:-1;7412:36:6;:44;7394:62;;;;;7371:3;;7338:133;;;;7178:303;7497:25;:14;7516:5;7497:18;:25::i;:::-;7490:32;7018:511;-1:-1:-1;;;;;7018:511:6:o;5466:1546::-;5548:15;5566:22;;;:10;:22;;;;;:30;;5634;;;;:37;5607:24;;5634:174;;5781:16;;;;:7;:16;;;;;:27;;5634:174;;;5713:22;;;;:10;:22;;;;;:30;;5634:174;5607:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5607:201:6;;;;;;;;;;;;;;;;-1:-1:-1;;5833:14:6;;5819:11;5877:22;;;:10;:22;;;;;:34;;;5607:201;;-1:-1:-1;;;5833:18:6;;;;5877:34;-1:-1:-1;5819:11:6;-1:-1:-1;;5935:15:6;;;:22;-1:-1:-1;5935:46:6;;5978:3;5935:46;;;5968:7;5960:5;:15;5935:46;5921:60;-1:-1:-1;5992:22:6;6045:5;6028:713;6057:3;6052:1;:8;6028:713;;6081:14;6098:7;6106:1;6098:10;;;;;;;;;;;;;;;;;;;6169:1;6126:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6126:32:6;;;;:24;;:32;;;;;;;:40;6098:10;;-1:-1:-1;6126:44:6;6122:609;;6208:16;;;;:7;:16;;;;;;;;-1:-1:-1;;;;;6208:32:6;;;;;:24;;;;:32;;;;;;:40;6340:22;;;:10;:22;;;;;:28;;;6295:32;;;;;;;;6190:58;;;;6295:74;;:44;:74::i;:::-;-1:-1:-1;;;;;6266:14:6;;;;;;;:6;:14;;;;;;;;:25;;:103;;;;;;;;6500:22;;;:10;:22;;;;;:29;;;6612:16;;;:7;:16;;;;;:32;;;:24;;:32;;;;;;:40;6393:260;;;;;;;;;;;6500:29;;;;;6266:14;;6408:10;;-1:-1:-1;;;;;;;;;;;6393:260:6;;;;;;;;6715:1;6672:16;;;:7;:16;;;;;;;;-1:-1:-1;;;;;6672:32:6;;;;:24;;:32;;;;;:44;6122:609;-1:-1:-1;6062:3:6;;6028:713;;;-1:-1:-1;6764:22:6;;;;:10;:22;;;;;:29;;;6750:69;;-1:-1:-1;;;;;6764:29:6;6795:7;6804:14;6750:13;:69::i;:::-;6830:22;;;;:10;:22;;;;;:34;;:40;;;6884:10;;;6880:126;;;6910:22;;;;:10;:22;;;;;;:32;;:39;;-1:-1:-1;;;;6910:39:6;-1:-1:-1;;;6910:39:6;;;6968:27;6921:10;;-1:-1:-1;;;;;;;;;;;6968:27:6;;5466:1546;;;;;;;;:::o;5623:1165:11:-;6205:11;;;;:7;:11;;;;;:18;:23;:37;;;;;6241:1;6232:6;:10;6205:37;6197:67;;;;;-1:-1:-1;;;6197:67:11;;;;;;;;;;;;-1:-1:-1;;;6197:67:11;;;;;;;;;;;;;;;6296:6;6275:7;:11;6283:2;6275:11;;;;;;;;;;;:18;;:27;;;;6335:8;6312:7;:11;6320:2;6312:11;;;;;;;;;;;:20;;:31;;;;6399:4;6353:7;:11;6361:2;6353:11;;;;;;;;;;;:19;;:31;6373:10;-1:-1:-1;;;;;6353:31:11;-1:-1:-1;;;;;6353:31:11;;;;;;;;;;;;:43;;;:50;;;;;;;;;;;;;;;;;;6457:4;6413:7;:11;6421:2;6413:11;;;;;;;;;;;:19;;:30;6433:9;-1:-1:-1;;;;;6413:30:11;-1:-1:-1;;;;;6413:30:11;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;6472:262;6482:2;6504:12;6536:15;6571:14;6605:24;6649:21;6690:9;6719:14;6472:9;:262::i;:::-;6745:36;6759:9;6770:2;6774:6;6745:13;:36::i;:::-;5623:1165;;;;;;;;;;;:::o;2043:114:9:-;-1:-1:-1;;;;;2129:12:9;2106:4;2129:12;;;:6;:12;;;;;:21;;;;;;;2043:114::o;2336:1317:7:-;2429:7;2540:11;;;:7;:11;;;;;:30;;:37;2429:7;;2500:15;;-1:-1:-1;;2540:41:7;2526:835;2611:19;2633:11;;;:7;:11;;;;;:30;;:33;;2664:1;;2633:33;;;;;;;;;;;;;;;;;;:36;;2683:12;2698:11;;;:7;:11;;;;;:30;;:33;;2633:36;;-1:-1:-1;2683:12:7;;2729:1;;2698:33;;;;;;;;;;;;;;;;2732:1;2698:36;;;;;;;;;2748:19;2786:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2786:28:7;;;;:19;;:28;;;;;:37;;;2698:36;;-1:-1:-1;2748:19:7;2786:52;-1:-1:-1;2782:569:7;;2888:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2888:28:7;;;;:19;;:28;;;;;:37;;;2872:66;;2932:5;;2873:53;;:10;;:14;:53::i;2872:66::-;2858:80;-1:-1:-1;2960:16:7;2956:37;;-1:-1:-1;2992:1:7;2956:37;3024:34;3052:5;3025:21;:11;3041:4;3025:15;:21::i;:::-;3024:27;;:34::i;:::-;3011:47;;;;3076:5;;;;;2782:569;3134:40;3168:5;3135:27;:10;3150:11;3135:14;:27::i;3134:40::-;3120:54;-1:-1:-1;3196:16:7;3192:37;;-1:-1:-1;3228:1:7;3192:37;3260:11;;-1:-1:-1;3260:11:7;;3302:34;3330:5;3303:21;:11;3319:4;3303:15;:21::i;3302:34::-;3289:47;;;;-1:-1:-1;;;;;2591:3:7;2526:835;;;-1:-1:-1;3418:11:7;;;;:7;:11;;;;;:20;;;3400:39;;:9;;3414:2;:24;3400:13;:39::i;:::-;3489:17;3520:11;;;:7;:11;;;;;:32;;;3388:51;;-1:-1:-1;3489:17:7;3509:56;;3559:5;;3510:43;;:5;;:9;:43::i;3509:56::-;3596:11;;;;:7;:11;;;;;:34;;;3489:76;;-1:-1:-1;3582:64:7;;3596:49;;3489:76;3596:38;:49::i;:::-;3582:9;;:13;:64::i;:::-;3575:71;2336:1317;-1:-1:-1;;;;;;;2336:1317:7:o;2304:459:18:-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:18;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:130;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;1239:203:15:-;1324:4;1347:41;1370:7;1379:8;1347:22;:41::i;:::-;:88;;;-1:-1:-1;;;;;;;1392:15:15;;;;;;;:6;:15;;;;;;;;:43;;;;;;:33;;;;:43;;;;;;;;1239:203::o;4395:306:7:-;4486:19;4520:1;4508:9;:13;:51;;-1:-1:-1;;;;;4536:12:7;;;;;;:6;:12;;;;;:23;;;4508:51;;;4524:9;4508:51;4486:73;;4583:69;4599:32;4611:4;4617:2;4621;4625:5;4599:11;:32::i;:::-;4583:69;;;;;;;;;;;;-1:-1:-1;;;4583:69:7;;;;:11;;:69;:15;:69::i;:::-;4569:83;;4662:32;4676:4;4682:11;4662:13;:32::i;6626:516:12:-;6844:15;:2;-1:-1:-1;;;;;6844:13:12;;:15::i;:::-;6841:295;;;6995:47;;;-1:-1:-1;;;;;6900:142:12;;6917:2;-1:-1:-1;;;;;6900:38:12;;6939:8;6949:4;6955:2;6959:5;6966:4;6900:71;;;;;;;;;;;;;-1:-1:-1;;;;;6900:71:12;;;;;;-1:-1:-1;;;;;6900:71:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6900:71:12;-1:-1:-1;;;;;;6900:142:12;;6875:250;;;;-1:-1:-1;;;6875:250:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1677:239:13;-1:-1:-1;;;;;1750:22:13;;1742:73;;;;-1:-1:-1;;;1742:73:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1851:13;;1830:45;;-1:-1:-1;;;;;1830:45:13;;;;1851:13;;1830:45;;1851:7;;1830:45;1885:13;:24;;-1:-1:-1;;;;;;1885:24:13;-1:-1:-1;;;;;1885:24:13;;;;;;;;;;1677:239::o;6794:766:11:-;6898:11;;;;:7;:11;;;;;:22;;:25;;6885:668;;6898:11;:25;;;;;;;;;;;;;;;;6976:11;;;:7;:11;;;;;;;:18;;6898:25;7017:20;;;6885:668;;;;;;;7120:34;;;;6885:668;;7179:32;;;;6885:668;;;;7236:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;6898:25:11;;;;6946:7;;6976:18;;7017:20;;7060:12;;6885:668;;;;;;7236:30;6898:25;7236:33;;;;;;;;;;;;;;7270:1;7236:36;;;;;;;;;6885:668;;7318:11;;;;:7;:11;;;;;;;;;:26;;6885:668;;;;;;;;;;;;;;;;;7318:26;;6885:668;;7318:26;6885:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6885:668:11;;;;;;;;;;;;;;;;-1:-1:-1;;;7367:11:11;;;;:7;:11;;;;;;;;;:36;;6885:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;7367:36:11;-1:-1:-1;6885:668:11;;7367:36;6885:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7426:11:11;;;;:7;:11;;;;;:33;;;;7482:21;;;;;7426:33;;-1:-1:-1;7482:21:11;-1:-1:-1;;;7482:21:11;;;;-1:-1:-1;;;;;;7526:26:11;6885:12;:668::i;607:320:19:-;660:4;695:1;690;:6;;;676:187;;-1:-1:-1;724:16:19;:20;;:16;719:26;712:33;;676:187;778:1;766:14;;:2;:14;;:32;;;;;796:2;790:1;784:14;;;;766:32;762:101;;;-1:-1:-1;826:25:19;;;:16;821:31;814:38;;2429:241:9;2530:12;2563:34;2577:4;2583:2;2587;2591:5;2563:13;:34::i;:::-;2562:35;2554:54;;;;;-1:-1:-1;;;2554:54:9;;;;;;;;;;;;-1:-1:-1;;;2554:54:9;;;;;;;;;;;;;;;2625:38;2643:4;2649:2;2653;2657:5;2625:17;:38::i;1877:187:18:-;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:18;;;1877:187::o;5169:290:7:-;5260:1;5248:9;:13;:32;;;;;5279:1;5265:11;:15;5248:32;5244:209;;;-1:-1:-1;;;;;5320:12:7;;;;;;:6;:12;;;;;:23;;;:40;;5348:11;5320:27;:40::i;:::-;-1:-1:-1;;;;;5294:12:7;;;;;;:6;:12;;;;;:23;;:66;5244:209;;;5379:9;5375:78;;-1:-1:-1;;;;;5407:12:7;;;;;;;;:6;:12;;;;;:23;;:37;5169:290::o;590:797:17:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:17;;;1329:51;-1:-1:-1;;590:797:17:o;976:255:14:-;1082:11;;;;:7;:11;;;;;:21;;;-1:-1:-1;;;1082:21:14;;;;1081:22;;:67;;-1:-1:-1;1107:11:14;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1107:30:14;;;;:19;;:30;;;;;:41;;;;;;;;1081:67;1073:100;;;;;-1:-1:-1;;;1073:100:14;;;;;;;;;;;;-1:-1:-1;;;1073:100:14;;;;;;;;;;;;;;;1183:41;1203:9;1214:2;1218:5;1183:19;:41::i;3969:338:18:-;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:18:o;717:516:15:-;807:4;;823:382;847:37;843:1;:41;823:382;;;954:1;909:30;940:1;909:33;;;;;;;;;-1:-1:-1;;;;;909:33:15;:47;905:290;;976:27;1020:30;1051:1;1020:33;;;;;;;;;1084:30;;;-1:-1:-1;;;1084:30:15;;-1:-1:-1;;;;;1084:30:15;;;;;;;;;1020:33;;;;-1:-1:-1;1076:51:15;;;;1020:33;;1084:21;;:30;;;;;;;;;;;;;;1020:33;1084:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1084:30:15;-1:-1:-1;;;;;1076:51:15;;1072:109;;;1158:4;1151:11;;;;;;1072:109;905:290;;886:3;;823:382;;;-1:-1:-1;1221:5:15;;717:516;-1:-1:-1;;;717:516:15:o;2163:213:9:-;2262:4;2285:18;2300:2;2285:14;:18::i;:::-;:44;;;;2307:22;2324:4;2307:16;:22::i;:::-;2285:68;;;;2333:20;2350:2;2333:16;:20::i;:::-;2285:84;;;-1:-1:-1;;2358:10:9;;2163:213;-1:-1:-1;;;2163:213:9:o;3659:683:7:-;3819:68;;;;;;;;;;;-1:-1:-1;;;3819:68:7;;;;;;;;3759:12;3819:11;;;:7;:11;;;;;-1:-1:-1;;;;;3819:25:7;;;;:19;;:25;;;;;;:33;:68;;3857:5;;3819:37;:68::i;:::-;3783:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3783:25:7;;;;:19;;:25;;;;;:104;3897:28;3911:2;3791;3919:5;3897:13;:28::i;:::-;3943:33;3960:4;3966:2;3970:5;3943:16;:33::i;:::-;3936:40;;3992:9;3987:327;4011:11;;;;:7;:11;;;;;:26;;:33;4007:37;;3987:327;;;4065:21;4089:11;;;:7;:11;;;;;:26;;:29;;4116:1;;4089:29;;;;;;;;;;;;;;;;;;4167:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;4089:29:7;;;;-1:-1:-1;4167:36:7;4204:1;;4167:39;;;;;;;;;;;;;;;;;-1:-1:-1;4256:47:7;4297:5;4257:34;:4;4167:39;4257:8;:34::i;4256:47::-;-1:-1:-1;;;;;4220:21:7;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;4046:3:7;3987:327;;1290:1006;1386:18;1407:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1407:30:7;;;;:19;;:30;;;;;:38;:49;;1450:5;1407:42;:49::i;:::-;1471:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1471:30:7;;;;:19;;:30;;;;;:38;1386:70;;-1:-1:-1;1467:761:7;;1536:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1536:30:7;;;;:19;;:30;;;;;:39;;;;;;;;1531:225;;-1:-1:-1;;;;;1595:17:7;;;;;;:6;:17;;;;;;;;:24;;:33;;;;;;;;;;;;;;;;;;1646:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1646:38:7;;;;;1702:30;;;;:19;;;;:30;;1531:225;1770:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1770:30:7;;;;:19;;:30;;;;;1812:15;1770:39;;;;:57;1467:761;;;1938:20;1981:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1981:30:7;;;;:19;;:30;;;;;:39;;;1961:60;;:15;;:19;:60::i;:::-;2035:19;2058:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2058:30:7;;;;:19;;:30;;;;;:38;1938:83;;-1:-1:-1;2035:19:7;2057:74;;2120:10;;2058:56;;1938:83;2058:42;:56::i;2057:74::-;2146:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2146:30:7;;;;:19;;:30;;;;;2188:15;:29;;;;2146:39;;;;:71;-1:-1:-1;;1467:761:7;2238:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2238:30:7;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;1290:1006:7:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport './interfaces/IERC1155Metadata.sol';\nimport './utils/StringUtils.sol';\nimport './lib/Callable.sol';\nimport './lib/Withdrawable.sol';\n\ncontract StashBlox is Callable, Withdrawable, IERC1155Metadata, StringUtils {\n\n    using SafeMath for uint256;\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        _config.callbackAutoExecuteMaxAddresses = 50;\n        _config.baseURI = \"http://stashblox.com/tokens/\";\n        _transferOwnership(msg.sender);\n    }\n\n    /**\n     * @param id Token ID\n     * @return URI string\n     */\n    function uri(uint256 id) external view override returns (string memory) {\n        return _strConcat(_config.baseURI, _toHexString(id));\n    }\n\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol",
    "exportedSymbols": {
      "StashBlox": [
        57
      ]
    },
    "id": 58,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Metadata.sol",
        "file": "./interfaces/IERC1155Metadata.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 189,
        "src": "70:43:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/utils/StringUtils.sol",
        "file": "./utils/StringUtils.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 4000,
        "src": "114:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Callable.sol",
        "file": "./lib/Callable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 958,
        "src": "148:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol",
        "file": "./lib/Withdrawable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 3437,
        "src": "177:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Callable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 957,
              "src": "233:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Callable_$957",
                "typeString": "contract Callable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "233:8:0"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3436,
              "src": "243:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$3436",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "243:12:0"
          },
          {
            "baseName": {
              "id": 10,
              "name": "IERC1155Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 188,
              "src": "257:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1155Metadata_$188",
                "typeString": "contract IERC1155Metadata"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "257:16:0"
          },
          {
            "baseName": {
              "id": 12,
              "name": "StringUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3999,
              "src": "275:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StringUtils_$3999",
                "typeString": "contract StringUtils"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "275:11:0"
          }
        ],
        "contractDependencies": [
          176,
          188,
          238,
          261,
          957,
          1578,
          1700,
          1929,
          2089,
          2610,
          3050,
          3148,
          3234,
          3344,
          3436,
          3999
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57,
          3999,
          188,
          3436,
          957,
          1929,
          3234,
          2089,
          2610,
          3050,
          3344,
          3148,
          1578,
          1700,
          261,
          176,
          238
        ],
        "name": "StashBlox",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 16,
            "libraryName": {
              "id": 14,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3679,
              "src": "300:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3679",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "294:27:0",
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "313:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "438:159:0",
              "statements": [
                {
                  "expression": {
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 20,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "448:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1653_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "callbackAutoExecuteMaxAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1644,
                      "src": "448:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530",
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "490:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "448:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "448:44:0"
                },
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 26,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "502:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1653_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "baseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1646,
                      "src": "502:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "687474703a2f2f7374617368626c6f782e636f6d2f746f6b656e732f",
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "520:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_699ad49e673d0ba571e0814a1cc2e9c5b4688dea54cab55db91df34a385ab8a4",
                        "typeString": "literal_string \"http://stashblox.com/tokens/\""
                      },
                      "value": "http://stashblox.com/tokens/"
                    },
                    "src": "502:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "502:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "579:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "579:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 32,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3134,
                      "src": "560:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "560:30:0"
                }
              ]
            },
            "documentation": {
              "id": 17,
              "nodeType": "StructuredDocumentation",
              "src": "327:91:0",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 38,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:0:0"
            },
            "scope": 57,
            "src": "423:174:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              187
            ],
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "743:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48,
                          "name": "_config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "771:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$1653_storage",
                            "typeString": "struct Data.Config storage ref"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "baseURI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1646,
                        "src": "771:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "801:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 50,
                          "name": "_toHexString",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "788:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "788:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 47,
                      "name": "_strConcat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3780,
                      "src": "760:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "760:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 46,
                  "id": 54,
                  "nodeType": "Return",
                  "src": "753:52:0"
                }
              ]
            },
            "documentation": {
              "id": 39,
              "nodeType": "StructuredDocumentation",
              "src": "603:63:0",
              "text": " @param id Token ID\n @return URI string"
            },
            "functionSelector": "0e89341c",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 43,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "710:8:0"
            },
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "684:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:12:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "728:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:15:0"
            },
            "scope": 57,
            "src": "671:141:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 58,
        "src": "211:605:0"
      }
    ],
    "src": "45:772:0"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol",
    "exportedSymbols": {
      "StashBlox": [
        57
      ]
    },
    "id": 58,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Metadata.sol",
        "file": "./interfaces/IERC1155Metadata.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 189,
        "src": "70:43:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/utils/StringUtils.sol",
        "file": "./utils/StringUtils.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 4000,
        "src": "114:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Callable.sol",
        "file": "./lib/Callable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 958,
        "src": "148:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol",
        "file": "./lib/Withdrawable.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 3437,
        "src": "177:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Callable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 957,
              "src": "233:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Callable_$957",
                "typeString": "contract Callable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "233:8:0"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3436,
              "src": "243:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$3436",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "243:12:0"
          },
          {
            "baseName": {
              "id": 10,
              "name": "IERC1155Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 188,
              "src": "257:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1155Metadata_$188",
                "typeString": "contract IERC1155Metadata"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "257:16:0"
          },
          {
            "baseName": {
              "id": 12,
              "name": "StringUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3999,
              "src": "275:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StringUtils_$3999",
                "typeString": "contract StringUtils"
              }
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "275:11:0"
          }
        ],
        "contractDependencies": [
          176,
          188,
          238,
          261,
          957,
          1578,
          1700,
          1929,
          2089,
          2610,
          3050,
          3148,
          3234,
          3344,
          3436,
          3999
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57,
          3999,
          188,
          3436,
          957,
          1929,
          3234,
          2089,
          2610,
          3050,
          3344,
          3148,
          1578,
          1700,
          261,
          176,
          238
        ],
        "name": "StashBlox",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 16,
            "libraryName": {
              "id": 14,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3679,
              "src": "300:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3679",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "294:27:0",
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "313:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "438:159:0",
              "statements": [
                {
                  "expression": {
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 20,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "448:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1653_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "callbackAutoExecuteMaxAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1644,
                      "src": "448:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530",
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "490:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "448:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "448:44:0"
                },
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 26,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "502:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1653_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "baseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1646,
                      "src": "502:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "687474703a2f2f7374617368626c6f782e636f6d2f746f6b656e732f",
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "520:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_699ad49e673d0ba571e0814a1cc2e9c5b4688dea54cab55db91df34a385ab8a4",
                        "typeString": "literal_string \"http://stashblox.com/tokens/\""
                      },
                      "value": "http://stashblox.com/tokens/"
                    },
                    "src": "502:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "502:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "579:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "579:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 32,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3134,
                      "src": "560:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "560:30:0"
                }
              ]
            },
            "documentation": {
              "id": 17,
              "nodeType": "StructuredDocumentation",
              "src": "327:91:0",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 38,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:0:0"
            },
            "scope": 57,
            "src": "423:174:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              187
            ],
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "743:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48,
                          "name": "_config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1687,
                          "src": "771:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$1653_storage",
                            "typeString": "struct Data.Config storage ref"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "baseURI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1646,
                        "src": "771:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 51,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "801:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 50,
                          "name": "_toHexString",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "788:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "788:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 47,
                      "name": "_strConcat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3780,
                      "src": "760:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "760:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 46,
                  "id": 54,
                  "nodeType": "Return",
                  "src": "753:52:0"
                }
              ]
            },
            "documentation": {
              "id": 39,
              "nodeType": "StructuredDocumentation",
              "src": "603:63:0",
              "text": " @param id Token ID\n @return URI string"
            },
            "functionSelector": "0e89341c",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 43,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "710:8:0"
            },
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "684:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "683:12:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "728:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:15:0"
            },
            "scope": 57,
            "src": "671:141:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 58,
        "src": "211:605:0"
      }
    ],
    "src": "45:772:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-21T19:56:31.223Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptCallback(uint256)": {
        "details": "Accept a callback",
        "params": {
          "callbackId": "callback proposition ID"
        }
      },
      "approveCallback(uint256)": {
        "details": "Approve a callback",
        "params": {
          "callbackId": "callback proposition ID"
        }
      },
      "approveHolder(uint256,address)": {
        "details": "Function to approve holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "averageAge(address,uint256)": {
        "details": "Function to get the average age of the token for the given address.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID"
        },
        "returns": {
          "_0": "average age in seconds"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "constructor": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "deposit(address)": {
        "details": "Function to make an ETH deposit that can be used to pay token transfer .",
        "params": {
          "to": "recipent address"
        }
      },
      "executeCallback(uint256,uint256)": {
        "details": "Accept a callback. Caller need to recall the function to continue the callback until completed.",
        "params": {
          "callbackId": "callback proposition ID",
          "maxCall": "maximal call to excute"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isLockedAddress(address)": {
        "details": "Function to check if an address is lockec.",
        "params": {
          "addr": "The address to check"
        }
      },
      "isLockedToken(uint256)": {
        "details": "Function to check if a token is locked.",
        "params": {
          "id": "The token ID"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "lockAddress(address)": {
        "details": "Function to lock an address.",
        "params": {
          "addr": "The address to lock"
        }
      },
      "lockToken(uint256,uint256)": {
        "details": "Function to lock a token.",
        "params": {
          "id": "The token ID"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "proposeCallback(uint256,uint256,uint256,address[],uint256)": {
        "details": "Propose to buy the whole supply of a token. The proposer must hold minHoldingForCallback% of the total supply. StashBlox must approve the price with acceptCallback();",
        "params": {
          "callees": "list of calless. Empty list means all holders.",
          "price": "proposed price",
          "tokenId": "Token ID"
        }
      },
      "refuseCallback(uint256)": {
        "details": "Refuse a callback if the price is not enough.",
        "params": {
          "callbackId": "callback proposition ID"
        }
      },
      "revokeHolder(uint256,address)": {
        "details": "Function to revoke holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setCallbackAutoExecuteMaxAddresses(uint256)": {
        "details": "Maximum addresses to execute automatically the callback when is accepted.",
        "params": {
          "newMax": "new maximum"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        },
        "returns": {
          "_0": "transfer price"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlockAddress(address)": {
        "details": "Function to unlock an address.",
        "params": {
          "addr": "The address to unlock"
        }
      },
      "unlockToken(uint256,uint256)": {
        "details": "Function to unlock a token.",
        "params": {
          "id": "The token ID"
        }
      },
      "updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to update a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be updated",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "uri(uint256)": {
        "params": {
          "id": "Token ID"
        },
        "returns": {
          "_0": "URI string"
        }
      },
      "withdraw(address,uint256)": {
        "details": "Function to withdraw ETH from the contract. TODO: Add permission ??",
        "params": {
          "amount": "amount to withdraw",
          "to": "recipent address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}