{
  "contractName": "StashBlox",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_callbackId",
          "type": "uint256"
        }
      ],
      "name": "CallbackUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        }
      ],
      "name": "acceptCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        }
      ],
      "name": "approveCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "approveHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "averageAge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxCall",
          "type": "uint256"
        }
      ],
      "name": "executeCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isLockedAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "isLockedToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "lockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "lockToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "callees",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "proposeCallback",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callbackId",
          "type": "uint256"
        }
      ],
      "name": "refuseCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "revokeHolder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMax",
          "type": "uint256"
        }
      ],
      "name": "setCallbackAutoExecuteMaxAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "unlockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "unlockToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_callbackId\",\"type\":\"uint256\"}],\"name\":\"CallbackUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"}],\"name\":\"acceptCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"}],\"name\":\"approveCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"approveHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"averageAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCall\",\"type\":\"uint256\"}],\"name\":\"executeCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isLockedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isLockedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"lockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"callees\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"proposeCallback\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackId\",\"type\":\"uint256\"}],\"name\":\"refuseCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"revokeHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMax\",\"type\":\"uint256\"}],\"name\":\"setCallbackAutoExecuteMaxAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"unlockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"unlockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptCallback(uint256)\":{\"details\":\"Accept a callback\",\"params\":{\"callbackId\":\"callback proposition ID\"}},\"approveCallback(uint256)\":{\"details\":\"Approve a callback\",\"params\":{\"callbackId\":\"callback proposition ID\"}},\"approveHolder(uint256,address)\":{\"details\":\"Function to approve holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"averageAge(address,uint256)\":{\"details\":\"Function to get the average age of the token for the given address.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\"},\"returns\":{\"_0\":\"average age in seconds\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"deposit(address)\":{\"details\":\"Function to make an ETH deposit that can be used to pay token transfer .\",\"params\":{\"to\":\"recipent address\"}},\"executeCallback(uint256,uint256)\":{\"details\":\"Accept a callback. Caller need to recall the function to continue the callback until completed.\",\"params\":{\"callbackId\":\"callback proposition ID\",\"maxCall\":\"maximal call to excute\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isLockedAddress(address)\":{\"details\":\"Function to check if an address is lockec.\",\"params\":{\"addr\":\"The address to check\"}},\"isLockedToken(uint256)\":{\"details\":\"Function to check if a token is locked.\",\"params\":{\"id\":\"The token ID\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"lockAddress(address)\":{\"details\":\"Function to lock an address.\",\"params\":{\"addr\":\"The address to lock\"}},\"lockToken(uint256,uint256)\":{\"details\":\"Function to lock a token.\",\"params\":{\"id\":\"The token ID\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proposeCallback(uint256,uint256,uint256,address[],uint256)\":{\"details\":\"Propose to buy the whole supply of a token. The proposer must hold minHoldingForCallback% of the total supply. StashBlox must approve the price with acceptCallback();\",\"params\":{\"callees\":\"list of calless. Empty list means all holders.\",\"price\":\"proposed price\",\"tokenId\":\"Token ID\"}},\"refuseCallback(uint256)\":{\"details\":\"Refuse a callback if the price is not enough.\",\"params\":{\"callbackId\":\"callback proposition ID\"}},\"revokeHolder(uint256,address)\":{\"details\":\"Function to revoke holder for a private token.\",\"params\":{\"holder\":\"The authorized address\",\"id\":\"the token id\"}},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setCallbackAutoExecuteMaxAddresses(uint256)\":{\"details\":\"Maximum addresses to execute automatically the callback when is accepted.\",\"params\":{\"newMax\":\"new maximum\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"},\"returns\":{\"_0\":\"transfer price\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockAddress(address)\":{\"details\":\"Function to unlock an address.\",\"params\":{\"addr\":\"The address to unlock\"}},\"unlockToken(uint256,uint256)\":{\"details\":\"Function to unlock a token.\",\"params\":{\"id\":\"The token ID\"}},\"updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to update a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be updated\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"uri(uint256)\":{\"params\":{\"id\":\"Token ID\"},\"returns\":{\"_0\":\"URI string\"}},\"withdraw(address,uint256)\":{\"details\":\"Function to withdraw ETH from the contract. TODO: Add permission ??\",\"params\":{\"amount\":\"amount to withdraw\",\"to\":\"recipent address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol\":\"StashBlox\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol\":{\"keccak256\":\"0x43df7d424f4e8619406fa331f622e8145e63296a2bf61b8645b431ebb8e47ac2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0545c57044c79f2e19b25a7d4ba6ce7689fbe9fc361e97a18f9d00fd39586f5e\",\"dweb:/ipfs/QmYbaGBaeUyYKEkAckk8cheKaGkkPPeyD71TXPVNssABZA\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Metadata.sol\":{\"keccak256\":\"0x121c132f1a15fafd91c187380702cb32d60beab1a4054670efc987e36bc2b70f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://425182c1ecd27456fc2f1c3fd82444b17a13f2e4e503bb3f7b973e83d2ceb1bb\",\"dweb:/ipfs/QmU54fpZCpdGtjUAbQkr4cYikCzKKQqjS3LPNQpYpJXiA8\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0xd73f72cf3f4a2f4cde3e8f3950d60202e1aa89405e5aaedf971ced063261edd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e01873a56115a6f3f1f6ce5dee198bbc2023ed36178ad693099de8b24baf2074\",\"dweb:/ipfs/QmQ4B48S3idc1CQtZyzQV3HH5tYPLk3ncRtS2ovUWxFsqW\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Callable.sol\":{\"keccak256\":\"0x3054f1906873f4c0e7730d32377b4c710e13b5e198b4f47fc357ae60873a377f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://13201ad22d9678af2267dcfbfdd201f7dae50dcd427fdc9fc4911521ed232656\",\"dweb:/ipfs/QmbgeMwCFWiC6Qq3kq4rPc9iBRpqcAh2wuBYS3jgELkm6V\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0x5dc5890c785dcc9b643865f204d6fa0a0586c22ee1ab3e782d4b1cd50055f440\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://55bd720c36892871232926d1faae17c715e6fce9cb232bc65ad7dcab5fa87cb9\",\"dweb:/ipfs/QmXoizxGSz2s1df7Snh6qNTqaN49YzgLEiS6Rw4g9Cbpzw\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol\":{\"keccak256\":\"0x43b948f9486cfb6b10424e77b6226187b41b13ef7e011ee37fdc74c876c7e71a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8538cd9833731ccd8872dab21f5f7767f29054c28d6c4af1f9afed3a6f0edc2e\",\"dweb:/ipfs/QmRhY6PVkyr5fUSHttfphASikz8mxjNiaaaS4bXCqLY6FT\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/GSNCapable.sol\":{\"keccak256\":\"0x9d2b49ab0fcef40fc062d2672f2f313b16c4d18474c40845c96bb609c23887db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e32a33579b880e60491a4d98d560912652ddd1c1bb871e6d5e501f7db8f575d0\",\"dweb:/ipfs/QmSGRU7bioBjq6RVnpvduuzYFsF9rrjhXUVEEQebZMkTcD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Lockable.sol\":{\"keccak256\":\"0x00364407db5b4d2bd9518aaaa84492c8c10bea5992b3eb827eaf89a5a340ccfa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7a4a3e17cc1b107a36621220f17f2dcd469eabbe69c253ea6743fbbec9889fb0\",\"dweb:/ipfs/QmfEno1Ai3ijUex6BRjcGkz8SJKrArbe6Kub3x7rXZ8Mfo\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x995c62950584716d782295bdc47ec89a822d1e856955e626461e55f7a78058ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7bdbc7822173239170c192563023beb95d31aeb0102c0f66cc12cedb506e6f89\",\"dweb:/ipfs/Qmb7WJEDHnXxRqDQumCGcDkAur1h1uPEomcWrqC2TRkRDF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0xd5019a259ee94a211172c19d30424b28a912d02507ab220a096046ac4fdd2068\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://daa7dc075a17ef143feca5828e939af66e383b404cce31fb47fafde265f03305\",\"dweb:/ipfs/QmaGPAikYBr8GmJUbzKTzRRtWLfqXwvAHwkZYcogZA4SdD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/MultiToken.sol\":{\"keccak256\":\"0x9a6d5d60c4a32fbf06e273fe77441f96c97f4b6c1e3442e499d47bcc2e5d59f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921dd08cc5e4ca464a3a8493a55566ba37d4242536e93b1a654b22c96918486e\",\"dweb:/ipfs/QmP8uEhiTmPdg6WSvfi3iTZiRZPTHGg6sfvJiq7jQnUCFd\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0x62250370e6f9abd908205ec912cf68a142c6d26cbb30451ad57a372bf73fd920\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71b29e832882282fca8dd49265c2d2fb6beecfe8bbf908b48c279506d8b2e572\",\"dweb:/ipfs/QmRpobgioqEYq1Utzoy9kno77v59gGhR5FpovkXmQgxsCh\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Privatizable.sol\":{\"keccak256\":\"0xd8b068c736d1b5ef364d6f73d6fef3788034d3250fb3cd9e8d44d099aaca7b52\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fae9426d967287250027a3fb45c6499614b3365ee98debed327affa09d254d08\",\"dweb:/ipfs/Qmf8ap2iGa8UK7wSzMTxMM2tp4MaTpm5WXZCwS41Uj9ZCg\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0x6e349cd9263193acda067d4b2fe7cebd1a0d169c7b4ab1fb38a664ecdb60065f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5eed5b309c557a2a496a87659ccbae4561ee0121326b30df10ea881fd71872bc\",\"dweb:/ipfs/QmeJRw3fSUAYb9roQpSh7KzpRwTpPcdW8bobg5qpFofFjF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol\":{\"keccak256\":\"0x18424710768201e6e5e569b935c2ecbe0cfa8dd2d837ba48ff737501c83b7d63\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ed9a5c331f12f2272de8151b447ccca2f43dd5e1eb4ad7ff1d09ef205ea55fe5\",\"dweb:/ipfs/QmcEGRidJnrnSwjxJaQgbGaYtDd9bmUMEnSutFytBYRbH5\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x700249db0ed6aa2be4fc7675c9cdb5cdcc4e49abec52eefa58c2b02092784188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8babf975072c842269b5cb10aedfed77307629626cc6ab6173e68462eaebb\",\"dweb:/ipfs/QmVSAHYR99a4Q6jrrSqvRxMEnD2dhNAUPLyGA9KGJGTLDL\"]}},\"version\":1}",
  "bytecode": "0x60c0604052601760808190527f312e302e302b6f70656e67736e2e7374617368626c6f7800000000000000000060a0908152620000409160019190620001c7565b503480156200004e57600080fd5b50620000636200005d620000c0565b620000f6565b603260025560408051808201909152601c8082527f687474703a2f2f7374617368626c6f782e636f6d2f746f6b656e732f000000006020909201918252620000ae91600391620001c7565b50620000ba33620000f6565b62000263565b600060183610801590620000da5750620000da33620001b3565b15620000f0575060131936013560601c620000f3565b50335b90565b6001600160a01b03811662000157576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180620057376026913960400191505060405180910390fd5b600e546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600e80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0390811691161490565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200020a57805160ff19168380011785556200023a565b828001600101855582156200023a579182015b828111156200023a5782518255916020019190600101906200021d565b50620002489291506200024c565b5090565b5b808211156200024857600081556001016200024d565b6154c480620002736000396000f3fe6080604052600436106102755760003560e01c80638aeba37e1161014f578063cba54e60116100c1578063f242432a1161007a578063f242432a146111f2578063f2fde38b14611285578063f340fa01146112b8578063f3fef3a3146112de578063f8a5a07c14611317578063fc3fcec71461144e576102d8565b8063cba54e6014610fd8578063d1660e181461100b578063d41d0aa31461104a578063d842b67314611083578063e985e9c514611139578063ed70554d14611174576102d8565b8063b7eb5e0a11610113578063b7eb5e0a14610d51578063baa3411014610d84578063bba75c8314610db4578063c02f303c14610dde578063c255620a14610e11578063c40b87ae14610e3b576102d8565b80638aeba37e14610c6e5780638da5cb5b14610ca75780638f96f13114610cbc578063a22cb46514610ce6578063aba7fe8a14610d21576102d8565b8063486ff0cd116101e85780635dafec1b116101ac5780635dafec1b14610b2c5780635dd2b9a614610b65578063759c521414610b9e5780637627b73214610bd75780637da0a87714610c0a5780638870147b14610c3b576102d8565b8063486ff0cd146107a95780634ab0d253146107be5780634e1273f414610940578063572b6c0514610ac0578063585941d514610af3576102d8565b806331d5f78c1161023a57806331d5f78c146105dc57806334a90d0214610606578063369c37e9146106395780633cacd7d614610663578063414ed0ce146106b65780634392e57714610748576102d8565b8062fdd58e146102dd57806301ffc9a7146103285780630e89341c146103705780632eb2c2d61461040f5780632ed42bf714610538576102d8565b366102d8576102ad34600f600061028a61147e565b6001600160a01b03168152602081019190915260400160002060010154906114af565b600f60006102b961147e565b6001600160a01b03168152602081019190915260400160002060010155005b600080fd5b3480156102e957600080fd5b506103166004803603604081101561030057600080fd5b506001600160a01b038135169060200135611512565b60408051918252519081900360200190f35b34801561033457600080fd5b5061035c6004803603602081101561034b57600080fd5b50356001600160e01b031916611585565b604080519115158252519081900360200190f35b34801561037c57600080fd5b5061039a6004803603602081101561039357600080fd5b50356115cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103d45781810151838201526020016103bc565b50505050905090810190601f1680156104015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610536600480360360a081101561042557600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561045857600080fd5b82018360208201111561046a57600080fd5b803590602001918460208302840111600160201b8311171561048b57600080fd5b919390929091602081019035600160201b8111156104a857600080fd5b8201836020820111156104ba57600080fd5b803590602001918460208302840111600160201b831117156104db57600080fd5b919390929091602081019035600160201b8111156104f857600080fd5b82018360208201111561050a57600080fd5b803590602001918460018302840111600160201b8311171561052b57600080fd5b50909250905061166e565b005b34801561054457600080fd5b5061054d611941565b6040518084815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b8381101561059f578181015183820152602001610587565b50505050905090810190601f1680156105cc5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156105e857600080fd5b50610536600480360360208110156105ff57600080fd5b50356119e4565b34801561061257600080fd5b506105366004803603602081101561062957600080fd5b50356001600160a01b0316611bc9565b34801561064557600080fd5b506105366004803603602081101561065c57600080fd5b5035611c36565b34801561066f57600080fd5b506106966004803603602081101561068657600080fd5b50356001600160a01b0316611c82565b604080519315158452911515602084015282820152519081900360600190f35b3480156106c257600080fd5b506106e0600480360360208110156106d957600080fd5b5035611ca8565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561075457600080fd5b50610536600480360361014081101561076c57600080fd5b81019080806101400190600a806020026040519081016040528092919082600a60200280828437600092019190915250919450611d1b9350505050565b3480156107b557600080fd5b5061039a611d73565b3480156107ca57600080fd5b5061053660048036036101408110156107e257600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b81111561083757600080fd5b82018360208201111561084957600080fd5b803590602001918460208302840111600160201b8311171561086a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156108b957600080fd5b8201836020820111156108cb57600080fd5b803590602001918460208302840111600160201b831117156108ec57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611e00565b34801561094c57600080fd5b50610a706004803603604081101561096357600080fd5b810190602081018135600160201b81111561097d57600080fd5b82018360208201111561098f57600080fd5b803590602001918460208302840111600160201b831117156109b057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156109ff57600080fd5b820183602082011115610a1157600080fd5b803590602001918460208302840111600160201b83111715610a3257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611ef2945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610aac578181015183820152602001610a94565b505050509050019250505060405180910390f35b348015610acc57600080fd5b5061035c60048036036020811015610ae357600080fd5b50356001600160a01b0316612076565b348015610aff57600080fd5b5061031660048036036040811015610b1657600080fd5b506001600160a01b03813516906020013561208a565b348015610b3857600080fd5b5061035c60048036036040811015610b4f57600080fd5b50803590602001356001600160a01b03166120be565b348015610b7157600080fd5b5061053660048036036040811015610b8857600080fd5b50803590602001356001600160a01b03166120ca565b348015610baa57600080fd5b5061053660048036036040811015610bc157600080fd5b50803590602001356001600160a01b0316612152565b348015610be357600080fd5b5061053660048036036020811015610bfa57600080fd5b50356001600160a01b03166121d5565b348015610c1657600080fd5b50610c1f612240565b604080516001600160a01b039092168252519081900360200190f35b348015610c4757600080fd5b5061053660048036036020811015610c5e57600080fd5b50356001600160a01b031661224f565b348015610c7a57600080fd5b5061053660048036036040811015610c9157600080fd5b50803590602001356001600160a01b03166122b7565b348015610cb357600080fd5b50610c1f612335565b348015610cc857600080fd5b5061053660048036036020811015610cdf57600080fd5b5035612344565b348015610cf257600080fd5b5061053660048036036040811015610d0957600080fd5b506001600160a01b0381351690602001351515612588565b348015610d2d57600080fd5b5061053660048036036040811015610d4457600080fd5b508035906020013561267b565b348015610d5d57600080fd5b5061053660048036036020811015610d7457600080fd5b50356001600160a01b03166126d6565b348015610d9057600080fd5b5061053660048036036040811015610da757600080fd5b508035906020013561273f565b348015610dc057600080fd5b5061035c60048036036020811015610dd757600080fd5b5035612795565b348015610dea57600080fd5b5061035c60048036036020811015610e0157600080fd5b50356001600160a01b03166127a0565b348015610e1d57600080fd5b5061053660048036036020811015610e3457600080fd5b50356127ab565b348015610e4757600080fd5b5061053660048036036101a0811015610e5f57600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610ecf57600080fd5b820183602082011115610ee157600080fd5b803590602001918460208302840111600160201b83111715610f0257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610f5157600080fd5b820183602082011115610f6357600080fd5b803590602001918460208302840111600160201b83111715610f8457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316612a1f565b348015610fe457600080fd5b5061035c60048036036020811015610ffb57600080fd5b50356001600160a01b0316612ad8565b34801561101757600080fd5b506103166004803603606081101561102e57600080fd5b506001600160a01b038135169060208101359060400135612ae3565b34801561105657600080fd5b506105366004803603604081101561106d57600080fd5b50803590602001356001600160a01b0316612af8565b610536600480360360a081101561109957600080fd5b81359160208101359160408201359190810190608081016060820135600160201b8111156110c657600080fd5b8201836020820111156110d857600080fd5b803590602001918460208302840111600160201b831117156110f957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250612b73915050565b34801561114557600080fd5b5061035c6004803603604081101561115c57600080fd5b506001600160a01b0381358116916020013516612e1e565b34801561118057600080fd5b5061119e6004803603602081101561119757600080fd5b5035612e2a565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b610536600480360360a081101561120857600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561124757600080fd5b82018360208201111561125957600080fd5b803590602001918460018302840111600160201b8311171561127a57600080fd5b509092509050612e86565b34801561129157600080fd5b50610536600480360360208110156112a857600080fd5b50356001600160a01b0316612feb565b610536600480360360208110156112ce57600080fd5b50356001600160a01b031661303e565b3480156112ea57600080fd5b506105366004803603604081101561130157600080fd5b506001600160a01b038135169060200135613083565b34801561132357600080fd5b506105366004803603606081101561133a57600080fd5b81359190810190604081016020820135600160201b81111561135b57600080fd5b82018360208201111561136d57600080fd5b803590602001918460208302840111600160201b8311171561138e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156113dd57600080fd5b8201836020820111156113ef57600080fd5b803590602001918460208302840111600160201b8311171561141057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506131ab945050505050565b34801561145a57600080fd5b506105366004803603604081101561147157600080fd5b508035906020013561333b565b600060183610801590611495575061149533612076565b156114a9575060131936013560601c6114ac565b50335b90565b600082820183811015611509576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b60006001600160a01b0383166115595760405162461bcd60e51b815260040180806020018281038252602b815260200180615205602b913960400191505060405180910390fd5b5060009081526010602090815260408083206001600160a01b0394909416835260079093019052205490565b60006001600160e01b031982166301ffc9a760e01b14806115b657506001600160e01b03198216636cdb3d1360e11b145b156115c3575060016115c7565b5060005b919050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815260609361150c939192909183018282801561165b5780601f106116305761010080835404028352916020019161165b565b820191906000526020600020905b81548152906001019060200180831161163e57829003601f168201915b5050505050611669846134ff565b6135bb565b8483146116ac5760405162461bcd60e51b815260040180806020018281038252602e815260200180615430602e913960400191505060405180910390fd5b6001600160a01b0387166116f15760405162461bcd60e51b81526004018080602001828103825260288152602001806152966028913960400191505060405180910390fd5b6116f961147e565b6001600160a01b0316886001600160a01b0316148061172a57506117248861171f61147e565b612e1e565b15156001145b6117655760405162461bcd60e51b81526004018080602001828103825260378152602001806153f96037913960400191505060405180910390fd5b6117d4888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a9182918501908490808284376000920191909152506136c592505050565b866001600160a01b0316886001600160a01b03166117f061147e565b6001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a461193761189761147e565b898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061377f92505050565b5050505050505050565b600280546003805460408051602060018416156101000260001901909316869004601f810184900484028201840190925281815293949392918301828280156119cb5780601f106119a0576101008083540402835291602001916119cb565b820191906000526020600020905b8154815290600101906020018083116119ae57829003601f168201915b505050600c90930154919250506001600160a01b031683565b6119ec61501c565b60008281526011602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b909104161515610140820152600682018054855181860281018601909652808652919492936101608601939290830182828015611af457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ad6575b50505091909252505081519192505015801590611b1f57508051611b1f90611b1a61147e565b613970565b8015611b2e5750610100810151155b8015611b3d5750610120810151155b611b8e576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c696420617267756d656e7473206f72207065726d697373696f6e00604482015290519081900360640190fd5b600082815260116020526040808220600501805460ff60a81b1916600160a81b17905551839160008051602061527683398151915291a25050565b611bd1613994565b611c10576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805461ff001916610100179055565b611c3e613994565b611c7d576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b600255565b600f602052600090815260409020805460019091015460ff808316926101009004169083565b60116020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b611d23613994565b611d62576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b611d6f600482600a615090565b5050565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611df85780601f10611dcd57610100808354040283529160200191611df8565b820191906000526020600020905b815481529060010190602001808311611ddb57829003601f168201915b505050505081565b87611e1281611e0d61147e565b6139ba565b611e51576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b600089815260106020526040902054611ea1576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b611eb189898989898989896139f4565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b60608151835114611f345760405162461bcd60e51b81526004018080602001828103825260308152602001806152ea6030913960400191505060405180910390fd5b6060835167ffffffffffffffff81118015611f4e57600080fd5b50604051908082528060200260200182016040528015611f78578160200160208202803683370190505b50905060005b845181101561206e5760006001600160a01b0316858281518110611f9e57fe5b60200260200101516001600160a01b03161415611fec5760405162461bcd60e51b81526004018080602001828103825260348152602001806153506034913960400191505060405180910390fd5b60106000858381518110611ffc57fe5b60200260200101518152602001908152602001600020600701600086838151811061202357fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061205b57fe5b6020908102919091010152600101611f7e565b509392505050565b6000546001600160a01b0390811691161490565b60008181526010602090815260408083206001600160a01b0386168452600701909152812060010154611509904290613b98565b600061150983836139ba565b816120d781611e0d61147e565b612116576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b5060009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805462ff0000191662010000179055565b8161215f81611e0d61147e565b61219e576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b5060009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805462ff000019169055565b6121dd613994565b61221c576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805460ff19166001179055565b6000546001600160a01b031681565b612257613994565b612296576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805460ff19169055565b6122bf613994565b6122fe576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b60009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600e546001600160a01b031690565b61234c61501c565b60008281526011602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b90910416151561014082015260068201805485518186028101860190965280865291949293610160860193929083018282801561245457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612436575b505050919092525050815191925050158015906124745750610100810151155b80156124835750610120810151155b80156124d35750805161249890611e0d61147e565b806124ac575080516124ac90611b1a61147e565b806124d357508060a001516001600160a01b03166124c861147e565b6001600160a01b0316145b612524576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c696420617267756d656e7473206f72207065726d697373696f6e00604482015290519081900360640190fd5b6000828152601160209081526040808320600501805460ff60b01b1916600160b01b1790558381015160a08501516001600160a01b03168452600f909252808320600101805490920190915551839160008051602061527683398151915291a25050565b816001600160a01b031661259a61147e565b6001600160a01b031614156125e05760405162461bcd60e51b815260040180806020018281038252602c8152602001806152be602c913960400191505060405180910390fd5b80600f60006125ed61147e565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825260039092019093529120805460ff19169215159290921790915561263561147e565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b8161268881611e0d61147e565b6126c7576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b6126d18383613bda565b505050565b6126de613994565b61271d576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805461ff0019169055565b8161274c81611e0d61147e565b61278b576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b6126d18383613c30565b600061150c82613c8c565b600061150c82613cab565b6127b361501c565b60008281526011602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b9091041615156101408201526006820180548551818602810186019096528086529194929361016086019392908301828280156128bb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161289d575b505050919092525050815191925050158015906128e1575080516128e190611e0d61147e565b80156128fa57508060c0015115806128fa57508060e001515b80156129095750610100810151155b80156129185750610120810151155b801561293f575061293781600001518260200151836101600151613cd5565b816040015110155b61297a5760405162461bcd60e51b81526004018080602001828103825260348152602001806153a56034913960400191505060405180910390fd5b600082815260116020526040808220600501805460ff60b81b1916600160b81b17905551839160008051602061527683398151915291a261016081015151156129d2576129cd8282610160015151613dac565b611d6f565b600254815160009081526010602052604090206008015411612a0d5780516000908152601060205260409020600801546129cd908390613dac565b611d6f81600001518260800151613c30565b612a2f612a2a61147e565b613cab565b612a6e576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b612a818b8b8b8b8b8b8b8b8b8b8b614065565b6001600160a01b038b166000612a9561147e565b6001600160a01b03166000805160206151e58339815191528d8d604051808381526020018281526020019250505060405180910390a45050505050505050505050565b600061150c826141a5565b6000612af08484846141c8565b949350505050565b612b00613994565b612b3f576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b60009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b600085815260116020526040902054158015612b9c575060008481526010602052604090205415155b8015612bb25750612bae848484613cd5565b3410155b8015612bc15750600254825111155b612c12576040805162461bcd60e51b815260206004820152601a60248201527f496e76616c696420617267756d656e7473206f722076616c7565000000000000604482015290519081900360640190fd5b600084815260106020526040812060048101549054612c3e9161271091612c38916143aa565b90614403565b905060405180610180016040528086815260200185815260200134815260200160008152602001838152602001612c7361147e565b6001600160a01b03168152602001851580612cc3575060008781526010602052604081208491600790910190612ca761147e565b6001600160a01b03168152602081019190915260400160002054105b80612ccf575060008551115b151581526000602080830182905260408084018390526060808501849052608080860185905260a09586018a90528c855260118452938290208651815586840151600182015591860151600283015585015160038201559184015160048301559183015160058201805460c086015160e08701516101008801516101208901516101408a01511515600160c01b0260ff60c01b19911515600160b81b0260ff60b81b19931515600160b01b0260ff60b01b19951515600160a81b0260ff60a81b19971515600160a01b0260ff60a01b196001600160a01b03909c166001600160a01b0319909a16999099179a909a16979097179590951697909717929092169390931792909216171691909117905561016083015180519192612dfa926006850192909101906150e8565b505060405187915060008051602061527683398151915290600090a2505050505050565b60006115098383614445565b601060205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516612ecb5760405162461bcd60e51b81526004018080602001828103825260288152602001806152966028913960400191505060405180910390fd5b612ed361147e565b6001600160a01b0316866001600160a01b03161480612eff5750612ef98661171f61147e565b15156001145b612f3a5760405162461bcd60e51b81526004018080602001828103825260378152602001806153f96037913960400191505060405180910390fd5b612f468686868661448a565b846001600160a01b0316866001600160a01b0316612f6261147e565b6001600160a01b03166000805160206151e58339815191528787604051808381526020018281526020019250505060405180910390a4612fe3612fa361147e565b8787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061450292505050565b505050505050565b612ff3613994565b613032576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b61303b81614677565b50565b6001600160a01b0381166000908152600f602052604090206001015461306490346114af565b6001600160a01b039091166000908152600f6020526040902060010155565b6001600160a01b0382166000908152600f60205260409020600101548111156130ea576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114613135576040519150601f19603f3d011682016040523d82523d6000602084013e61313a565b606091505b5050905080613184576040805162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015290519081900360640190fd5b506001600160a01b039091166000908152600f602052604090206001018054919091039055565b6131b6612a2a61147e565b6131f5576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b60008381526010602052604090205415801590613213575080518251145b613258576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015613335576132958484838151811061327457fe5b602002602001015184848151811061328857fe5b6020026020010151614718565b600084815260106020526040812060080180549091906132b157fe5b60009182526020822001546001600160a01b0316906132ce61147e565b6001600160a01b03166000805160206151e58339815191528685815181106132f257fe5b6020026020010151601060008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a460010161325b565b50505050565b61334361501c565b60008381526011602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b90910416151561014082015260068201805485518186028101860190965280865291949293610160860193929083018282801561344b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161342d575b5050509190925250508151919250501580159061346f575061012081015115156001145b801561347e5750610140810151155b6134c2576040805162461bcd60e51b815260206004820152601060248201526f496e76616c69642063616c6c6261636b60801b604482015290519081900360640190fd5b6134cc8383613dac565b600083815260116020526040902060050154600160c01b900460ff16156126d1576126d181600001518260800151613bda565b60606000825b801561351b576001919091019060109004613505565b60608267ffffffffffffffff8111801561353457600080fd5b506040519080825280601f01601f19166020018201604052801561355f576020820181803683370190505b50905060005b838110156135b25760108606925061357c836148b5565b826001838703038151811061358d57fe5b60200101906001600160f81b031916908160001a905350601086049550600101613565565b50949350505050565b805182516060918491849184910167ffffffffffffffff811180156135df57600080fd5b506040519080825280601f01601f19166020018201604052801561360a576020820181803683370190505b509050806000805b85518110156136635785818151811061362757fe5b602001015160f81c60f81b83838060010194508151811061364457fe5b60200101906001600160f81b031916908160001a905350600101613612565b5060005b84518110156136b85784818151811061367c57fe5b602001015160f81c60f81b83838060010194508151811061369957fe5b60200101906001600160f81b031916908160001a905350600101613667565b5090979650505050505050565b60008034116136ef576001600160a01b0385166000908152600f60205260409020600101546136f1565b345b905060005b835181101561376d57613763613734878787858151811061371357fe5b602002602001015187868151811061372757fe5b60200260200101516148f9565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b602082015284919061494e565b91506001016136f6565b5061377885826149e5565b5050505050565b613791846001600160a01b0316614a66565b15612fe35763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015613831578181015183820152602001613819565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015613870578181015183820152602001613858565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156138ac578181015183820152602001613894565b50505050905090810190601f1680156138d95780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156138fe57600080fd5b505af1158015613912573d6000803e3d6000fd5b505050506040513d602081101561392857600080fd5b50516001600160e01b03191614612fe35760405162461bcd60e51b815260040180806020018281038252603681526020018061531a6036913960400191505060405180910390fd5b600091825260106020526040909120600601546001600160a01b0391821691161490565b600e546000906001600160a01b03166139ab61147e565b6001600160a01b031614905090565b60008281526010602090815260408083206001600160a01b038516845260070190915281206002015460ff16806115095750611509613994565b6000805b8551811015613a2457858181518110613a0d57fe5b6020026020010151820191508060010190506139f8565b5060008651118015613a34575060015b8015613a41575080612710145b8015613a4e575061271084105b613a93576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152601060209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b909101805460018101825590855292909320613af393928302019161513c565b5060008981526010602090815260409091208751613b19926009909201918901906150e8565b5060008981526010602090815260409091208651613b3f92600a90920191880190615176565b505060009788526010602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b600061150983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061494e565b600082815260106020908152604091829020600601805460ff60a81b191690558151838152915184927f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd92908290030190a25050565b600082815260106020908152604091829020600601805460ff60a81b1916600160a81b1790558151838152915184927f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd92908290030190a25050565b600090815260106020526040902060060154600160a81b900460ff1690565b6001600160a01b0381166000908152600f602052604081205460ff168061150c575061150c613994565b80516000908190613d36576000858152601060205260408120613d2f91600790910190613d0061147e565b6001600160a01b0316815260208082019290925260409081016000908120548982526010909352205490613b98565b9050613d99565b60005b8351811015613d9757601060008781526020019081526020016000206007016000858381518110613d6657fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020549190910190600101613d39565b505b613da381856143aa565b95945050505050565b60008281526011602052604090208054600690910154606090613ddf576000828152601060205260409020600801613df1565b60008481526011602052604090206006015b805480602002602001604051908101604052809291908181526020018280548015613e4557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613e27575b505083516000898152601160205260408120600301549596506000199091019493509150508582018311613e795782613e7d565b8582015b90506000825b828111613fe1576000868281518110613e9857fe5b60209081029190910181015160008a81526010835260408082206001600160a01b0384168352600701909352919091205490915015613fd85760008881526010602090815260408083206001600160a01b0385168085526007909101808452828520548f86526011855292852060010154919094529290915293840193613f1e916143aa565b6001600160a01b038083166000818152600f6020908152604080832060010180549096019095558e82526011905292909220600501541690613f5e61147e565b60008b81526010602090815260408083206001600160a01b03888116855260079091018352928190205481518f815292830152805193909216926000805160206151e5833981519152929181900390910190a460008881526010602090815260408083206001600160a01b03851684526007019091528120555b50600101613e83565b50600088815260116020526040902060050154614008906001600160a01b03168783614a9d565b60008881526011602052604090206003018290558382141561193757600088815260116020526040808220600501805460ff60c01b1916600160c01b17905551899160008051602061527683398151915291a25050505050505050565b60008a8152601060205260409020541580156140815750600089115b6140c6576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60008a81526010602052604081208a815560018082018b9055916007909101906140ee61147e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001601060008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff02191690831515021790555061418d8a888888888888886139f4565b6141988b8b8b614a9d565b5050505050505050505050565b6001600160a01b03166000908152600f6020526040902054610100900460ff1690565b6000828152601060205260408120600b015481904290600019015b6000868152601060205260408120600b0180548390811061420057fe5b60009182526020822060029091020101546000888152601060205260408120600b01805492935090918490811061423357fe5b906000526020600020906002020160016002811061424d57fe5b015460008981526010602090815260408083206001600160a01b038e1684526007019091528120600101549192509083116142ea5760008981526010602090815260408083206001600160a01b038e1684526007019091529020600101546142bf906201518090612c38908890613b98565b9050806142ca575060015b6142de886142d883856143aa565b906143aa565b86019550505050614329565b6142fb62015180612c388786613b98565b905080614306575060015b9193508391614319886142d883856143aa565b90950194505050600019016141e3565b5060008581526010602052604090206001015461434a908390600a0a614403565b60008681526010602052604081206003015491935090614375906305f5e10090612c389088906143aa565b60008781526010602052604090206002015490915061439f9061439890836114af565b84906114af565b979650505050505050565b6000826143b95750600061150c565b828202828482816143c657fe5b04146115095760405162461bcd60e51b81526004018080602001828103825260218152602001806153846021913960400191505060405180910390fd5b600061150983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614b46565b60006144518383614bab565b806115095750506001600160a01b039182166000908152600f602090815260408083209390941682526003909201909152205460ff1690565b60008034116144b4576001600160a01b0385166000908152600f60205260409020600101546144b6565b345b90506144f66144c7868686866148f9565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b602082015283919061494e565b905061377885826149e5565b614514846001600160a01b0316614a66565b15612fe35763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156145b557818101518382015260200161459d565b50505050905090810190601f1680156145e25780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561460557600080fd5b505af1158015614619573d6000803e3d6000fd5b505050506040513d602081101561462f57600080fd5b50516001600160e01b03191614612fe35760405162461bcd60e51b815260040180806020018281038252603181526020018061545e6031913960400191505060405180910390fd5b6001600160a01b0381166146bc5760405162461bcd60e51b81526004018080602001828103825260268152602001806152506026913960400191505060405180910390fd5b600e546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600083815260106020526040812060080180546126d1929061473657fe5b600091825260208083209091015486835260108083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a9490939084019291906147a057fe5b90600052602060002090600202016001600281106147ba57fe5b0154905260008a8152601060209081526040918290206009018054835181840281018401909452808452909183018282801561481f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614801575b50505060008d815260106020908152604091829020600a018054835181840281018401909452808452929450925083018282801561487c57602002820191906000526020600020905b815481526020019060010190808311614868575b50505060008e8152601060205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b0316614065565b600060098260ff16116148cf57506030810160f81b6115c7565b8160ff16600a111580156148e75750600f8260ff1611155b156102d857506057810160f81b6115c7565b600061490785858585614c92565b15614942576040805162461bcd60e51b8152602060048201526006602482015265131bd8dad95960d21b604482015290519081900360640190fd5b613da385858585614cca565b600081848411156149dd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156149a257818101518382015260200161498a565b50505050905090810190601f1680156149cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000341180156149f55750600081115b15614a41576001600160a01b0382166000908152600f6020526040902060010154614a2090826114af565b6001600160a01b0383166000908152600f6020526040902060010155611d6f565b34611d6f576001600160a01b03919091166000908152600f6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590612af05750141592915050565b600082815260106020526040902060060154600160a01b900460ff161580614af3575060008281526010602090815260408083206001600160a01b038716845260070190915290206002015462010000900460ff165b614b3b576040805162461bcd60e51b81526020600482015260146024820152731059191c995cdcc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b6126d1838383614e1e565b60008183614b955760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156149a257818101518382015260200161498a565b506000838581614ba157fe5b0495945050505050565b6000805b600a811015614c88576000600482600a8110614bc757fe5b01546001600160a01b031614614c80576000600482600a8110614be657fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b158015614c3857600080fd5b505afa158015614c4c573d6000803e3d6000fd5b505050506040513d6020811015614c6257600080fd5b50516001600160a01b03161415614c7e5760019250505061150c565b505b600101614baf565b5060009392505050565b6000614c9d83613c8c565b80614cac5750614cac856141a5565b80614cbb5750614cbb846141a5565b80613da3575050159392505050565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152601082528381206001600160a01b038916825260070190915291822054614d2591849061494e565b60008481526010602090815260408083206001600160a01b038a168452600701909152902055614d56848484614a9d565b614d618584846141c8565b905060005b6000848152601060205260409020600901548110156135b2576000848152601060205260408120600901805483908110614d9c57fe5b6000918252602080832090910154878352601090915260408220600a0180546001600160a01b0390921693509084908110614dd357fe5b6000918252602090912001549050614df1612710612c3886846143aa565b6001600160a01b039092166000908152600f60205260409020600190810180549093019092555001614d66565b60008281526010602090815260408083206001600160a01b0387168452600701909152812054614e4e90836114af565b60008481526010602090815260408083206001600160a01b0389168452600701909152902054909150614f4b5760008381526010602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16614f1a576001600160a01b0384166000818152600f6020908152604080832060020180546001818101835591855283852001889055878452601083529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b60008381526010602090815260408083206001600160a01b0388168452600701909152902042600190910155614fec565b60008381526010602090815260408083206001600160a01b0388168452600701909152812060010154614f7f904290613b98565b60008581526010602090815260408083206001600160a01b038a16845260070190915281205491925090614fb9908490612c3890856143aa565b60008681526010602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b60009283526010602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b604051806101800160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600015158152602001600015158152602001600015158152602001600015158152602001606081525090565b82600a81019282156150d8579160200282015b828111156150d857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906150a3565b506150e49291506151b0565b5090565b8280548282559060005260206000209081019282156150d857916020028201828111156150d857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906150a3565b826002810192821561516a579160200282015b8281111561516a57825182559160200191906001019061514f565b506150e49291506151cf565b82805482825590600052602060002090810192821561516a579160200282018281111561516a57825182559160200191906001019061514f565b5b808211156150e45780546001600160a01b03191681556001016151b1565b5b808211156150e457600081556001016151d056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373496e73756666696369656e74207065726d697373696f6e0000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736ce984c7277c5fe8f47fdf17245300ed19587e3bc1041342d79726b2b2f1dc0b455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77496e73756666696369656e742063616c6c6261636b2c207065726d697373696f6e206f7220657363726f77656420616d6f756e744f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a2646970667358221220f9ec4da139413278f72f77deb7ee0a1d16f48a579f2d2a0d4a1e1857ec4a1e8064736f6c634300070100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106102755760003560e01c80638aeba37e1161014f578063cba54e60116100c1578063f242432a1161007a578063f242432a146111f2578063f2fde38b14611285578063f340fa01146112b8578063f3fef3a3146112de578063f8a5a07c14611317578063fc3fcec71461144e576102d8565b8063cba54e6014610fd8578063d1660e181461100b578063d41d0aa31461104a578063d842b67314611083578063e985e9c514611139578063ed70554d14611174576102d8565b8063b7eb5e0a11610113578063b7eb5e0a14610d51578063baa3411014610d84578063bba75c8314610db4578063c02f303c14610dde578063c255620a14610e11578063c40b87ae14610e3b576102d8565b80638aeba37e14610c6e5780638da5cb5b14610ca75780638f96f13114610cbc578063a22cb46514610ce6578063aba7fe8a14610d21576102d8565b8063486ff0cd116101e85780635dafec1b116101ac5780635dafec1b14610b2c5780635dd2b9a614610b65578063759c521414610b9e5780637627b73214610bd75780637da0a87714610c0a5780638870147b14610c3b576102d8565b8063486ff0cd146107a95780634ab0d253146107be5780634e1273f414610940578063572b6c0514610ac0578063585941d514610af3576102d8565b806331d5f78c1161023a57806331d5f78c146105dc57806334a90d0214610606578063369c37e9146106395780633cacd7d614610663578063414ed0ce146106b65780634392e57714610748576102d8565b8062fdd58e146102dd57806301ffc9a7146103285780630e89341c146103705780632eb2c2d61461040f5780632ed42bf714610538576102d8565b366102d8576102ad34600f600061028a61147e565b6001600160a01b03168152602081019190915260400160002060010154906114af565b600f60006102b961147e565b6001600160a01b03168152602081019190915260400160002060010155005b600080fd5b3480156102e957600080fd5b506103166004803603604081101561030057600080fd5b506001600160a01b038135169060200135611512565b60408051918252519081900360200190f35b34801561033457600080fd5b5061035c6004803603602081101561034b57600080fd5b50356001600160e01b031916611585565b604080519115158252519081900360200190f35b34801561037c57600080fd5b5061039a6004803603602081101561039357600080fd5b50356115cc565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103d45781810151838201526020016103bc565b50505050905090810190601f1680156104015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610536600480360360a081101561042557600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561045857600080fd5b82018360208201111561046a57600080fd5b803590602001918460208302840111600160201b8311171561048b57600080fd5b919390929091602081019035600160201b8111156104a857600080fd5b8201836020820111156104ba57600080fd5b803590602001918460208302840111600160201b831117156104db57600080fd5b919390929091602081019035600160201b8111156104f857600080fd5b82018360208201111561050a57600080fd5b803590602001918460018302840111600160201b8311171561052b57600080fd5b50909250905061166e565b005b34801561054457600080fd5b5061054d611941565b6040518084815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b8381101561059f578181015183820152602001610587565b50505050905090810190601f1680156105cc5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156105e857600080fd5b50610536600480360360208110156105ff57600080fd5b50356119e4565b34801561061257600080fd5b506105366004803603602081101561062957600080fd5b50356001600160a01b0316611bc9565b34801561064557600080fd5b506105366004803603602081101561065c57600080fd5b5035611c36565b34801561066f57600080fd5b506106966004803603602081101561068657600080fd5b50356001600160a01b0316611c82565b604080519315158452911515602084015282820152519081900360600190f35b3480156106c257600080fd5b506106e0600480360360208110156106d957600080fd5b5035611ca8565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561075457600080fd5b50610536600480360361014081101561076c57600080fd5b81019080806101400190600a806020026040519081016040528092919082600a60200280828437600092019190915250919450611d1b9350505050565b3480156107b557600080fd5b5061039a611d73565b3480156107ca57600080fd5b5061053660048036036101408110156107e257600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b81111561083757600080fd5b82018360208201111561084957600080fd5b803590602001918460208302840111600160201b8311171561086a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156108b957600080fd5b8201836020820111156108cb57600080fd5b803590602001918460208302840111600160201b831117156108ec57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611e00565b34801561094c57600080fd5b50610a706004803603604081101561096357600080fd5b810190602081018135600160201b81111561097d57600080fd5b82018360208201111561098f57600080fd5b803590602001918460208302840111600160201b831117156109b057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156109ff57600080fd5b820183602082011115610a1157600080fd5b803590602001918460208302840111600160201b83111715610a3257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611ef2945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610aac578181015183820152602001610a94565b505050509050019250505060405180910390f35b348015610acc57600080fd5b5061035c60048036036020811015610ae357600080fd5b50356001600160a01b0316612076565b348015610aff57600080fd5b5061031660048036036040811015610b1657600080fd5b506001600160a01b03813516906020013561208a565b348015610b3857600080fd5b5061035c60048036036040811015610b4f57600080fd5b50803590602001356001600160a01b03166120be565b348015610b7157600080fd5b5061053660048036036040811015610b8857600080fd5b50803590602001356001600160a01b03166120ca565b348015610baa57600080fd5b5061053660048036036040811015610bc157600080fd5b50803590602001356001600160a01b0316612152565b348015610be357600080fd5b5061053660048036036020811015610bfa57600080fd5b50356001600160a01b03166121d5565b348015610c1657600080fd5b50610c1f612240565b604080516001600160a01b039092168252519081900360200190f35b348015610c4757600080fd5b5061053660048036036020811015610c5e57600080fd5b50356001600160a01b031661224f565b348015610c7a57600080fd5b5061053660048036036040811015610c9157600080fd5b50803590602001356001600160a01b03166122b7565b348015610cb357600080fd5b50610c1f612335565b348015610cc857600080fd5b5061053660048036036020811015610cdf57600080fd5b5035612344565b348015610cf257600080fd5b5061053660048036036040811015610d0957600080fd5b506001600160a01b0381351690602001351515612588565b348015610d2d57600080fd5b5061053660048036036040811015610d4457600080fd5b508035906020013561267b565b348015610d5d57600080fd5b5061053660048036036020811015610d7457600080fd5b50356001600160a01b03166126d6565b348015610d9057600080fd5b5061053660048036036040811015610da757600080fd5b508035906020013561273f565b348015610dc057600080fd5b5061035c60048036036020811015610dd757600080fd5b5035612795565b348015610dea57600080fd5b5061035c60048036036020811015610e0157600080fd5b50356001600160a01b03166127a0565b348015610e1d57600080fd5b5061053660048036036020811015610e3457600080fd5b50356127ab565b348015610e4757600080fd5b5061053660048036036101a0811015610e5f57600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610ecf57600080fd5b820183602082011115610ee157600080fd5b803590602001918460208302840111600160201b83111715610f0257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610f5157600080fd5b820183602082011115610f6357600080fd5b803590602001918460208302840111600160201b83111715610f8457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316612a1f565b348015610fe457600080fd5b5061035c60048036036020811015610ffb57600080fd5b50356001600160a01b0316612ad8565b34801561101757600080fd5b506103166004803603606081101561102e57600080fd5b506001600160a01b038135169060208101359060400135612ae3565b34801561105657600080fd5b506105366004803603604081101561106d57600080fd5b50803590602001356001600160a01b0316612af8565b610536600480360360a081101561109957600080fd5b81359160208101359160408201359190810190608081016060820135600160201b8111156110c657600080fd5b8201836020820111156110d857600080fd5b803590602001918460208302840111600160201b831117156110f957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505091359250612b73915050565b34801561114557600080fd5b5061035c6004803603604081101561115c57600080fd5b506001600160a01b0381358116916020013516612e1e565b34801561118057600080fd5b5061119e6004803603602081101561119757600080fd5b5035612e2a565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b610536600480360360a081101561120857600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561124757600080fd5b82018360208201111561125957600080fd5b803590602001918460018302840111600160201b8311171561127a57600080fd5b509092509050612e86565b34801561129157600080fd5b50610536600480360360208110156112a857600080fd5b50356001600160a01b0316612feb565b610536600480360360208110156112ce57600080fd5b50356001600160a01b031661303e565b3480156112ea57600080fd5b506105366004803603604081101561130157600080fd5b506001600160a01b038135169060200135613083565b34801561132357600080fd5b506105366004803603606081101561133a57600080fd5b81359190810190604081016020820135600160201b81111561135b57600080fd5b82018360208201111561136d57600080fd5b803590602001918460208302840111600160201b8311171561138e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156113dd57600080fd5b8201836020820111156113ef57600080fd5b803590602001918460208302840111600160201b8311171561141057600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506131ab945050505050565b34801561145a57600080fd5b506105366004803603604081101561147157600080fd5b508035906020013561333b565b600060183610801590611495575061149533612076565b156114a9575060131936013560601c6114ac565b50335b90565b600082820183811015611509576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b60006001600160a01b0383166115595760405162461bcd60e51b815260040180806020018281038252602b815260200180615205602b913960400191505060405180910390fd5b5060009081526010602090815260408083206001600160a01b0394909416835260079093019052205490565b60006001600160e01b031982166301ffc9a760e01b14806115b657506001600160e01b03198216636cdb3d1360e11b145b156115c3575060016115c7565b5060005b919050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815260609361150c939192909183018282801561165b5780601f106116305761010080835404028352916020019161165b565b820191906000526020600020905b81548152906001019060200180831161163e57829003601f168201915b5050505050611669846134ff565b6135bb565b8483146116ac5760405162461bcd60e51b815260040180806020018281038252602e815260200180615430602e913960400191505060405180910390fd5b6001600160a01b0387166116f15760405162461bcd60e51b81526004018080602001828103825260288152602001806152966028913960400191505060405180910390fd5b6116f961147e565b6001600160a01b0316886001600160a01b0316148061172a57506117248861171f61147e565b612e1e565b15156001145b6117655760405162461bcd60e51b81526004018080602001828103825260378152602001806153f96037913960400191505060405180910390fd5b6117d4888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a9182918501908490808284376000920191909152506136c592505050565b866001600160a01b0316886001600160a01b03166117f061147e565b6001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a461193761189761147e565b898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061377f92505050565b5050505050505050565b600280546003805460408051602060018416156101000260001901909316869004601f810184900484028201840190925281815293949392918301828280156119cb5780601f106119a0576101008083540402835291602001916119cb565b820191906000526020600020905b8154815290600101906020018083116119ae57829003601f168201915b505050600c90930154919250506001600160a01b031683565b6119ec61501c565b60008281526011602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b909104161515610140820152600682018054855181860281018601909652808652919492936101608601939290830182828015611af457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611ad6575b50505091909252505081519192505015801590611b1f57508051611b1f90611b1a61147e565b613970565b8015611b2e5750610100810151155b8015611b3d5750610120810151155b611b8e576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c696420617267756d656e7473206f72207065726d697373696f6e00604482015290519081900360640190fd5b600082815260116020526040808220600501805460ff60a81b1916600160a81b17905551839160008051602061527683398151915291a25050565b611bd1613994565b611c10576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805461ff001916610100179055565b611c3e613994565b611c7d576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b600255565b600f602052600090815260409020805460019091015460ff808316926101009004169083565b60116020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b611d23613994565b611d62576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b611d6f600482600a615090565b5050565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611df85780601f10611dcd57610100808354040283529160200191611df8565b820191906000526020600020905b815481529060010190602001808311611ddb57829003601f168201915b505050505081565b87611e1281611e0d61147e565b6139ba565b611e51576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b600089815260106020526040902054611ea1576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b611eb189898989898989896139f4565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b60608151835114611f345760405162461bcd60e51b81526004018080602001828103825260308152602001806152ea6030913960400191505060405180910390fd5b6060835167ffffffffffffffff81118015611f4e57600080fd5b50604051908082528060200260200182016040528015611f78578160200160208202803683370190505b50905060005b845181101561206e5760006001600160a01b0316858281518110611f9e57fe5b60200260200101516001600160a01b03161415611fec5760405162461bcd60e51b81526004018080602001828103825260348152602001806153506034913960400191505060405180910390fd5b60106000858381518110611ffc57fe5b60200260200101518152602001908152602001600020600701600086838151811061202357fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061205b57fe5b6020908102919091010152600101611f7e565b509392505050565b6000546001600160a01b0390811691161490565b60008181526010602090815260408083206001600160a01b0386168452600701909152812060010154611509904290613b98565b600061150983836139ba565b816120d781611e0d61147e565b612116576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b5060009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805462ff0000191662010000179055565b8161215f81611e0d61147e565b61219e576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b5060009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805462ff000019169055565b6121dd613994565b61221c576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805460ff19166001179055565b6000546001600160a01b031681565b612257613994565b612296576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805460ff19169055565b6122bf613994565b6122fe576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b60009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600e546001600160a01b031690565b61234c61501c565b60008281526011602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b90910416151561014082015260068201805485518186028101860190965280865291949293610160860193929083018282801561245457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612436575b505050919092525050815191925050158015906124745750610100810151155b80156124835750610120810151155b80156124d35750805161249890611e0d61147e565b806124ac575080516124ac90611b1a61147e565b806124d357508060a001516001600160a01b03166124c861147e565b6001600160a01b0316145b612524576040805162461bcd60e51b815260206004820152601f60248201527f496e76616c696420617267756d656e7473206f72207065726d697373696f6e00604482015290519081900360640190fd5b6000828152601160209081526040808320600501805460ff60b01b1916600160b01b1790558381015160a08501516001600160a01b03168452600f909252808320600101805490920190915551839160008051602061527683398151915291a25050565b816001600160a01b031661259a61147e565b6001600160a01b031614156125e05760405162461bcd60e51b815260040180806020018281038252602c8152602001806152be602c913960400191505060405180910390fd5b80600f60006125ed61147e565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825260039092019093529120805460ff19169215159290921790915561263561147e565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b8161268881611e0d61147e565b6126c7576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b6126d18383613bda565b505050565b6126de613994565b61271d576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600f60205260409020805461ff0019169055565b8161274c81611e0d61147e565b61278b576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b6126d18383613c30565b600061150c82613c8c565b600061150c82613cab565b6127b361501c565b60008281526011602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b9091041615156101408201526006820180548551818602810186019096528086529194929361016086019392908301828280156128bb57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161289d575b505050919092525050815191925050158015906128e1575080516128e190611e0d61147e565b80156128fa57508060c0015115806128fa57508060e001515b80156129095750610100810151155b80156129185750610120810151155b801561293f575061293781600001518260200151836101600151613cd5565b816040015110155b61297a5760405162461bcd60e51b81526004018080602001828103825260348152602001806153a56034913960400191505060405180910390fd5b600082815260116020526040808220600501805460ff60b81b1916600160b81b17905551839160008051602061527683398151915291a261016081015151156129d2576129cd8282610160015151613dac565b611d6f565b600254815160009081526010602052604090206008015411612a0d5780516000908152601060205260409020600801546129cd908390613dac565b611d6f81600001518260800151613c30565b612a2f612a2a61147e565b613cab565b612a6e576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b612a818b8b8b8b8b8b8b8b8b8b8b614065565b6001600160a01b038b166000612a9561147e565b6001600160a01b03166000805160206151e58339815191528d8d604051808381526020018281526020019250505060405180910390a45050505050505050505050565b600061150c826141a5565b6000612af08484846141c8565b949350505050565b612b00613994565b612b3f576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b60009182526010602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b600085815260116020526040902054158015612b9c575060008481526010602052604090205415155b8015612bb25750612bae848484613cd5565b3410155b8015612bc15750600254825111155b612c12576040805162461bcd60e51b815260206004820152601a60248201527f496e76616c696420617267756d656e7473206f722076616c7565000000000000604482015290519081900360640190fd5b600084815260106020526040812060048101549054612c3e9161271091612c38916143aa565b90614403565b905060405180610180016040528086815260200185815260200134815260200160008152602001838152602001612c7361147e565b6001600160a01b03168152602001851580612cc3575060008781526010602052604081208491600790910190612ca761147e565b6001600160a01b03168152602081019190915260400160002054105b80612ccf575060008551115b151581526000602080830182905260408084018390526060808501849052608080860185905260a09586018a90528c855260118452938290208651815586840151600182015591860151600283015585015160038201559184015160048301559183015160058201805460c086015160e08701516101008801516101208901516101408a01511515600160c01b0260ff60c01b19911515600160b81b0260ff60b81b19931515600160b01b0260ff60b01b19951515600160a81b0260ff60a81b19971515600160a01b0260ff60a01b196001600160a01b03909c166001600160a01b0319909a16999099179a909a16979097179590951697909717929092169390931792909216171691909117905561016083015180519192612dfa926006850192909101906150e8565b505060405187915060008051602061527683398151915290600090a2505050505050565b60006115098383614445565b601060205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516612ecb5760405162461bcd60e51b81526004018080602001828103825260288152602001806152966028913960400191505060405180910390fd5b612ed361147e565b6001600160a01b0316866001600160a01b03161480612eff5750612ef98661171f61147e565b15156001145b612f3a5760405162461bcd60e51b81526004018080602001828103825260378152602001806153f96037913960400191505060405180910390fd5b612f468686868661448a565b846001600160a01b0316866001600160a01b0316612f6261147e565b6001600160a01b03166000805160206151e58339815191528787604051808381526020018281526020019250505060405180910390a4612fe3612fa361147e565b8787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061450292505050565b505050505050565b612ff3613994565b613032576040805162461bcd60e51b815260206004820181905260248201526000805160206153d9833981519152604482015290519081900360640190fd5b61303b81614677565b50565b6001600160a01b0381166000908152600f602052604090206001015461306490346114af565b6001600160a01b039091166000908152600f6020526040902060010155565b6001600160a01b0382166000908152600f60205260409020600101548111156130ea576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114613135576040519150601f19603f3d011682016040523d82523d6000602084013e61313a565b606091505b5050905080613184576040805162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015290519081900360640190fd5b506001600160a01b039091166000908152600f602052604090206001018054919091039055565b6131b6612a2a61147e565b6131f5576040805162461bcd60e51b81526020600482015260176024820152600080516020615230833981519152604482015290519081900360640190fd5b60008381526010602052604090205415801590613213575080518251145b613258576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015613335576132958484838151811061327457fe5b602002602001015184848151811061328857fe5b6020026020010151614718565b600084815260106020526040812060080180549091906132b157fe5b60009182526020822001546001600160a01b0316906132ce61147e565b6001600160a01b03166000805160206151e58339815191528685815181106132f257fe5b6020026020010151601060008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a460010161325b565b50505050565b61334361501c565b60008381526011602090815260409182902082516101808101845281548152600182015481840152600282015481850152600382015460608201526004820154608082015260058201546001600160a01b03811660a083015260ff600160a01b82048116151560c0840152600160a81b82048116151560e0840152600160b01b820481161515610100840152600160b81b820481161515610120840152600160c01b90910416151561014082015260068201805485518186028101860190965280865291949293610160860193929083018282801561344b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161342d575b5050509190925250508151919250501580159061346f575061012081015115156001145b801561347e5750610140810151155b6134c2576040805162461bcd60e51b815260206004820152601060248201526f496e76616c69642063616c6c6261636b60801b604482015290519081900360640190fd5b6134cc8383613dac565b600083815260116020526040902060050154600160c01b900460ff16156126d1576126d181600001518260800151613bda565b60606000825b801561351b576001919091019060109004613505565b60608267ffffffffffffffff8111801561353457600080fd5b506040519080825280601f01601f19166020018201604052801561355f576020820181803683370190505b50905060005b838110156135b25760108606925061357c836148b5565b826001838703038151811061358d57fe5b60200101906001600160f81b031916908160001a905350601086049550600101613565565b50949350505050565b805182516060918491849184910167ffffffffffffffff811180156135df57600080fd5b506040519080825280601f01601f19166020018201604052801561360a576020820181803683370190505b509050806000805b85518110156136635785818151811061362757fe5b602001015160f81c60f81b83838060010194508151811061364457fe5b60200101906001600160f81b031916908160001a905350600101613612565b5060005b84518110156136b85784818151811061367c57fe5b602001015160f81c60f81b83838060010194508151811061369957fe5b60200101906001600160f81b031916908160001a905350600101613667565b5090979650505050505050565b60008034116136ef576001600160a01b0385166000908152600f60205260409020600101546136f1565b345b905060005b835181101561376d57613763613734878787858151811061371357fe5b602002602001015187868151811061372757fe5b60200260200101516148f9565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b602082015284919061494e565b91506001016136f6565b5061377885826149e5565b5050505050565b613791846001600160a01b0316614a66565b15612fe35763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015613831578181015183820152602001613819565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015613870578181015183820152602001613858565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156138ac578181015183820152602001613894565b50505050905090810190601f1680156138d95780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156138fe57600080fd5b505af1158015613912573d6000803e3d6000fd5b505050506040513d602081101561392857600080fd5b50516001600160e01b03191614612fe35760405162461bcd60e51b815260040180806020018281038252603681526020018061531a6036913960400191505060405180910390fd5b600091825260106020526040909120600601546001600160a01b0391821691161490565b600e546000906001600160a01b03166139ab61147e565b6001600160a01b031614905090565b60008281526010602090815260408083206001600160a01b038516845260070190915281206002015460ff16806115095750611509613994565b6000805b8551811015613a2457858181518110613a0d57fe5b6020026020010151820191508060010190506139f8565b5060008651118015613a34575060015b8015613a41575080612710145b8015613a4e575061271084105b613a93576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152601060209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b909101805460018101825590855292909320613af393928302019161513c565b5060008981526010602090815260409091208751613b19926009909201918901906150e8565b5060008981526010602090815260409091208651613b3f92600a90920191880190615176565b505060009788526010602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b600061150983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061494e565b600082815260106020908152604091829020600601805460ff60a81b191690558151838152915184927f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd92908290030190a25050565b600082815260106020908152604091829020600601805460ff60a81b1916600160a81b1790558151838152915184927f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd92908290030190a25050565b600090815260106020526040902060060154600160a81b900460ff1690565b6001600160a01b0381166000908152600f602052604081205460ff168061150c575061150c613994565b80516000908190613d36576000858152601060205260408120613d2f91600790910190613d0061147e565b6001600160a01b0316815260208082019290925260409081016000908120548982526010909352205490613b98565b9050613d99565b60005b8351811015613d9757601060008781526020019081526020016000206007016000858381518110613d6657fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020549190910190600101613d39565b505b613da381856143aa565b95945050505050565b60008281526011602052604090208054600690910154606090613ddf576000828152601060205260409020600801613df1565b60008481526011602052604090206006015b805480602002602001604051908101604052809291908181526020018280548015613e4557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613e27575b505083516000898152601160205260408120600301549596506000199091019493509150508582018311613e795782613e7d565b8582015b90506000825b828111613fe1576000868281518110613e9857fe5b60209081029190910181015160008a81526010835260408082206001600160a01b0384168352600701909352919091205490915015613fd85760008881526010602090815260408083206001600160a01b0385168085526007909101808452828520548f86526011855292852060010154919094529290915293840193613f1e916143aa565b6001600160a01b038083166000818152600f6020908152604080832060010180549096019095558e82526011905292909220600501541690613f5e61147e565b60008b81526010602090815260408083206001600160a01b03888116855260079091018352928190205481518f815292830152805193909216926000805160206151e5833981519152929181900390910190a460008881526010602090815260408083206001600160a01b03851684526007019091528120555b50600101613e83565b50600088815260116020526040902060050154614008906001600160a01b03168783614a9d565b60008881526011602052604090206003018290558382141561193757600088815260116020526040808220600501805460ff60c01b1916600160c01b17905551899160008051602061527683398151915291a25050505050505050565b60008a8152601060205260409020541580156140815750600089115b6140c6576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60008a81526010602052604081208a815560018082018b9055916007909101906140ee61147e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001601060008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff02191690831515021790555061418d8a888888888888886139f4565b6141988b8b8b614a9d565b5050505050505050505050565b6001600160a01b03166000908152600f6020526040902054610100900460ff1690565b6000828152601060205260408120600b015481904290600019015b6000868152601060205260408120600b0180548390811061420057fe5b60009182526020822060029091020101546000888152601060205260408120600b01805492935090918490811061423357fe5b906000526020600020906002020160016002811061424d57fe5b015460008981526010602090815260408083206001600160a01b038e1684526007019091528120600101549192509083116142ea5760008981526010602090815260408083206001600160a01b038e1684526007019091529020600101546142bf906201518090612c38908890613b98565b9050806142ca575060015b6142de886142d883856143aa565b906143aa565b86019550505050614329565b6142fb62015180612c388786613b98565b905080614306575060015b9193508391614319886142d883856143aa565b90950194505050600019016141e3565b5060008581526010602052604090206001015461434a908390600a0a614403565b60008681526010602052604081206003015491935090614375906305f5e10090612c389088906143aa565b60008781526010602052604090206002015490915061439f9061439890836114af565b84906114af565b979650505050505050565b6000826143b95750600061150c565b828202828482816143c657fe5b04146115095760405162461bcd60e51b81526004018080602001828103825260218152602001806153846021913960400191505060405180910390fd5b600061150983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614b46565b60006144518383614bab565b806115095750506001600160a01b039182166000908152600f602090815260408083209390941682526003909201909152205460ff1690565b60008034116144b4576001600160a01b0385166000908152600f60205260409020600101546144b6565b345b90506144f66144c7868686866148f9565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b602082015283919061494e565b905061377885826149e5565b614514846001600160a01b0316614a66565b15612fe35763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156145b557818101518382015260200161459d565b50505050905090810190601f1680156145e25780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561460557600080fd5b505af1158015614619573d6000803e3d6000fd5b505050506040513d602081101561462f57600080fd5b50516001600160e01b03191614612fe35760405162461bcd60e51b815260040180806020018281038252603181526020018061545e6031913960400191505060405180910390fd5b6001600160a01b0381166146bc5760405162461bcd60e51b81526004018080602001828103825260268152602001806152506026913960400191505060405180910390fd5b600e546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600083815260106020526040812060080180546126d1929061473657fe5b600091825260208083209091015486835260108083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a9490939084019291906147a057fe5b90600052602060002090600202016001600281106147ba57fe5b0154905260008a8152601060209081526040918290206009018054835181840281018401909452808452909183018282801561481f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614801575b50505060008d815260106020908152604091829020600a018054835181840281018401909452808452929450925083018282801561487c57602002820191906000526020600020905b815481526020019060010190808311614868575b50505060008e8152601060205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b0316614065565b600060098260ff16116148cf57506030810160f81b6115c7565b8160ff16600a111580156148e75750600f8260ff1611155b156102d857506057810160f81b6115c7565b600061490785858585614c92565b15614942576040805162461bcd60e51b8152602060048201526006602482015265131bd8dad95960d21b604482015290519081900360640190fd5b613da385858585614cca565b600081848411156149dd5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156149a257818101518382015260200161498a565b50505050905090810190601f1680156149cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000341180156149f55750600081115b15614a41576001600160a01b0382166000908152600f6020526040902060010154614a2090826114af565b6001600160a01b0383166000908152600f6020526040902060010155611d6f565b34611d6f576001600160a01b03919091166000908152600f6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590612af05750141592915050565b600082815260106020526040902060060154600160a01b900460ff161580614af3575060008281526010602090815260408083206001600160a01b038716845260070190915290206002015462010000900460ff165b614b3b576040805162461bcd60e51b81526020600482015260146024820152731059191c995cdcc81b9bdd08185c1c1c9bdd995960621b604482015290519081900360640190fd5b6126d1838383614e1e565b60008183614b955760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156149a257818101518382015260200161498a565b506000838581614ba157fe5b0495945050505050565b6000805b600a811015614c88576000600482600a8110614bc757fe5b01546001600160a01b031614614c80576000600482600a8110614be657fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b158015614c3857600080fd5b505afa158015614c4c573d6000803e3d6000fd5b505050506040513d6020811015614c6257600080fd5b50516001600160a01b03161415614c7e5760019250505061150c565b505b600101614baf565b5060009392505050565b6000614c9d83613c8c565b80614cac5750614cac856141a5565b80614cbb5750614cbb846141a5565b80613da3575050159392505050565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152601082528381206001600160a01b038916825260070190915291822054614d2591849061494e565b60008481526010602090815260408083206001600160a01b038a168452600701909152902055614d56848484614a9d565b614d618584846141c8565b905060005b6000848152601060205260409020600901548110156135b2576000848152601060205260408120600901805483908110614d9c57fe5b6000918252602080832090910154878352601090915260408220600a0180546001600160a01b0390921693509084908110614dd357fe5b6000918252602090912001549050614df1612710612c3886846143aa565b6001600160a01b039092166000908152600f60205260409020600190810180549093019092555001614d66565b60008281526010602090815260408083206001600160a01b0387168452600701909152812054614e4e90836114af565b60008481526010602090815260408083206001600160a01b0389168452600701909152902054909150614f4b5760008381526010602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16614f1a576001600160a01b0384166000818152600f6020908152604080832060020180546001818101835591855283852001889055878452601083529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b60008381526010602090815260408083206001600160a01b0388168452600701909152902042600190910155614fec565b60008381526010602090815260408083206001600160a01b0388168452600701909152812060010154614f7f904290613b98565b60008581526010602090815260408083206001600160a01b038a16845260070190915281205491925090614fb9908490612c3890856143aa565b60008681526010602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b60009283526010602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b604051806101800160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600015158152602001600015158152602001600015158152602001600015158152602001600015158152602001606081525090565b82600a81019282156150d8579160200282015b828111156150d857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906150a3565b506150e49291506151b0565b5090565b8280548282559060005260206000209081019282156150d857916020028201828111156150d857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906150a3565b826002810192821561516a579160200282015b8281111561516a57825182559160200191906001019061514f565b506150e49291506151cf565b82805482825590600052602060002090810192821561516a579160200282018281111561516a57825182559160200191906001019061514f565b5b808211156150e45780546001600160a01b03191681556001016151b1565b5b808211156150e457600081556001016151d056fec3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373496e73756666696369656e74207065726d697373696f6e0000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736ce984c7277c5fe8f47fdf17245300ed19587e3bc1041342d79726b2b2f1dc0b455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77496e73756666696369656e742063616c6c6261636b2c207065726d697373696f6e206f7220657363726f77656420616d6f756e744f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a2646970667358221220f9ec4da139413278f72f77deb7ee0a1d16f48a579f2d2a0d4a1e1857ec4a1e8064736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "2053:67:9:-:0;133:325:0;2053:67:9;;133:325:0;2053:67:9;;;;;;;;;;;;;;:::i;:::-;;281:174:0;;;;;;;;;-1:-1:-1;637:32:15;656:12;:10;:12::i;:::-;637:18;:32::i;:::-;348:2:0;306:7;:44;360:48;;;;;;;;;;;;;;;;;;;;;;;:15;;:48;:::i;:::-;-1:-1:-1;418:30:0;437:10;418:18;:30::i;:::-;133:325;;845:556:10;907:19;961:2;942:8;:21;;;;:55;;-1:-1:-1;967:30:10;986:10;967:18;:30::i;:::-;938:457;;;-1:-1:-1;;;1303:14:10;1299:22;1286:36;1283:2;1279:44;1254:83;;;-1:-1:-1;1374:10:10;938:457;845:556;:::o;1679:239:15:-;-1:-1:-1;;;;;1752:22:15;;1744:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1853:13;;1832:45;;-1:-1:-1;;;;;1832:45:15;;;;1853:13;;1832:45;;1853:13;;1832:45;1887:13;:24;;-1:-1:-1;;;;;;1887:24:15;-1:-1:-1;;;;;1887:24:15;;;;;;;;;;1679:239::o;458:135:10:-;534:4;570:16;-1:-1:-1;;;;;570:16:10;;;557:29;;;;458:135::o;133:325:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;133:325:0;;;-1:-1:-1;133:325:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "133:325:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1228:46:18;1264:9;1228:6;:20;1235:12;:10;:12::i;:::-;-1:-1:-1;;;;;1228:20:18;;;;;;;;;;;;-1:-1:-1;1228:20:18;:31;;;;:35;:46::i;:::-;1194:6;:20;1201:12;:10;:12::i;:::-;-1:-1:-1;;;;;1194:20:18;;;;;;;;;;;;-1:-1:-1;1194:20:18;:31;;:80;133:325:0;;;;;1575:234:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1575:234:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;980:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;980:255:14;-1:-1:-1;;;;;;980:255:14;;:::i;:::-;;;;;;;;;;;;;;;;;;2601:141:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2601:141:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5769:778:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5769:778:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5769:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5769:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5769:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5769:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5769:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5769:778:14;;;;;;;;;;-1:-1:-1;5769:778:14;;-1:-1:-1;5769:778:14;-1:-1:-1;5769:778:14;:::i;:::-;;2242:22:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2242:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3067:455:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3067:455:7;;:::i;977:99:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;977:99:11;-1:-1:-1;;;;;977:99:11;;:::i;536:144:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;536:144:7;;:::i;2270:39:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2270:39:9;-1:-1:-1;;;;;2270:39:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2362:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2362:47:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2362:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;465:151:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:151:17;;-1:-1:-1;465:151:17;;-1:-1:-1;;;;465:151:17:i;2053:67:9:-;;;;;;;;;;;;;:::i;2253:823:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;2253:823:12;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;-1:-1:-1;;;;;2253:823:12;;:::i;2133:631:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2133:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2133:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2133:631:14;;;;;;;;-1:-1:-1;2133:631:14;;-1:-1:-1;;;;;2133:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2133:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2133:631:14;;-1:-1:-1;2133:631:14;;-1:-1:-1;;;;;2133:631:14:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:135:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;458:135:10;-1:-1:-1;;;;;458:135:10;;:::i;949:161:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;949:161:8;;;;;;;;:::i;1414:132:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1414:132:12;;;;;;-1:-1:-1;;;;;1414:132:12;;:::i;388:140:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:140:16;;;;;;-1:-1:-1;;;;;388:140:16;;:::i;684:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;684:140:16;;;;;;-1:-1:-1;;;;;684:140:16;;:::i;631:119:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;631:119:13;-1:-1:-1;;;;;631:119:13;;:::i;420:31:10:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;420:31:10;;;;;;;;;;;;;;887:117:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;887:117:13;-1:-1:-1;;;;;887:117:13;;:::i;733:144:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;733:144:12;;;;;;-1:-1:-1;;;;;733:144:12;;:::i;1125:93:15:-;;;;;;;;;;;;;:::i;2329:636:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2329:636:7;;:::i;3242:308:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3242:308:14;;;;;;;;;;:::i;537:129:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;537:129:11;;;;;;;:::i;1182:102::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1182:102:11;-1:-1:-1;;;;;1182:102:11;;:::i;320:125::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;320:125:11;;;;;;;:::i;770:105::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;770:105:11;;:::i;1150:116:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1150:116:13;-1:-1:-1;;;;;1150:116:13;;:::i;3623:1068:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3623:1068:7;;:::i;2105:1040:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;2105:1040:13;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;:::i;1401:113:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1401:113:11;-1:-1:-1;;;;;1401:113:11;;:::i;552:159:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;552:159:8;;;;;;;;;;;;;:::i;1046:142:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1046:142:12;;;;;;-1:-1:-1;;;;;1046:142:12;;:::i;1030:1170:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1030:1170:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1030:1170:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1030:1170:7;;-1:-1:-1;;1030:1170:7;;;-1:-1:-1;1030:1170:7;;-1:-1:-1;;1030:1170:7:i;3831:157:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3831:157:14;;;;;;;;;;:::i;2315:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2315:41:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2315:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;4542:638:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4542:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4542:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4542:638:14;;;;;;;;;;-1:-1:-1;4542:638:14;;-1:-1:-1;4542:638:14;-1:-1:-1;4542:638:14;:::i;1367:116:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1367:116:15;-1:-1:-1;;;;;1367:116:15;;:::i;879:123:18:-;;;;;;;;;;;;;;;;-1:-1:-1;879:123:18;-1:-1:-1;;;;;879:123:18;;:::i;459:279::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;459:279:18;;;;;;;;:::i;3372:647:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13:i;4915:464:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4915:464:7;;;;;;;:::i;845:556:10:-;907:19;961:2;942:8;:21;;;;:55;;;967:30;986:10;967:18;:30::i;:::-;938:457;;;-1:-1:-1;;;1303:14:10;1299:22;1286:36;1283:2;1279:44;1254:83;;;-1:-1:-1;1374:10:10;938:457;845:556;:::o;867:176:20:-;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;-1:-1:-1;867:176:20;;;;;:::o;1575:234:14:-;1653:7;-1:-1:-1;;;;;1680:21:14;;1672:77;;;;-1:-1:-1;;;1672:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1766:11:14;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1766:28:14;;;;;;:19;;;;:28;;;:36;;1575:234::o;980:255::-;1060:4;-1:-1:-1;;;;;;1078:42:14;;-1:-1:-1;;;1078:42:14;;:99;;-1:-1:-1;;;;;;;1134:43:14;;-1:-1:-1;;;1134:43:14;1078:99;1074:135;;;-1:-1:-1;1196:4:14;1189:11;;1074:135;-1:-1:-1;1223:5:14;980:255;;;;:::o;2601:141:9:-;2701:15;2690:45;;;;;;2701:7;:15;2690:45;;;;;-1:-1:-1;;2690:45:9;;;;;;;;;;;;;;;;;;;;;;;;;;2658:13;;2690:45;;;;2701:15;;2690:45;;2701:15;2690:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2718:16;2731:2;2718:12;:16::i;:::-;2690:10;:45::i;5769:778:14:-;6000:27;;;5992:86;;;;-1:-1:-1;;;5992:86:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6096:16:14;;6088:69;;;;-1:-1:-1;;;6088:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6196:12;:10;:12::i;:::-;-1:-1:-1;;;;;6188:20:14;:4;-1:-1:-1;;;;;6188:20:14;;:68;;;;6212:36;6229:4;6235:12;:10;:12::i;:::-;6212:16;:36::i;:::-;:44;;6252:4;6212:44;6188:68;6167:170;;;;-1:-1:-1;;;6167:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6348:37;6363:4;6369:2;6373:3;;6348:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6348:37:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6378:6:14;;-1:-1:-1;6378:6:14;;;;6348:37;;;6378:6;;6348:37;6378:6;6348:37;;;;;;;;;-1:-1:-1;6348:14:14;;-1:-1:-1;;;6348:37:14:i;:::-;6435:2;-1:-1:-1;;;;;6401:50:14;6429:4;-1:-1:-1;;;;;6401:50:14;6415:12;:10;:12::i;:::-;-1:-1:-1;;;;;6401:50:14;;6439:3;;6444:6;;6401:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6401:50:14;;;;;;;;;;;;;;;;;-1:-1:-1;6401:50:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6401:50:14;;;;;;;;-1:-1:-1;6401:50:14;;-1:-1:-1;;;;;;;6401:50:14;6462:78;6498:12;:10;:12::i;:::-;6512:4;6518:2;6522:3;;6462:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6462:78:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6527:6:14;;-1:-1:-1;6527:6:14;;;;6462:78;;;6527:6;;6462:78;6527:6;6462:78;;;;;;;;;-1:-1:-1;;6462:78:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6535:4:14;;-1:-1:-1;6535:4:14;;;;6462:78;;6535:4;;;;6462:78;;;;;;;;;-1:-1:-1;6462:35:14;;-1:-1:-1;;;6462:78:14:i;:::-;5769:778;;;;;;;;:::o;2242:22:9:-;;;;;;;;;;;;;;;;;-1:-1:-1;;2242:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2242:22:9;;;;;;;-1:-1:-1;;;;;;;2242:22:9;;:::o;3067:455:7:-;3131:24;;:::i;:::-;3158:22;;;;:10;:22;;;;;;;;;3131:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3131:49:7;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3158:22;;3131:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3131:49:7;;;;;;;;;;;;;;;;-1:-1:-1;;;3131:49:7;;;;-1:-1:-1;;3199:16:7;;3131:49;;-1:-1:-1;;3199:21:7;;;;:90;;-1:-1:-1;3258:16:7;;3240:49;;3276:12;:10;:12::i;:::-;3240:17;:49::i;:::-;3199:135;;;;-1:-1:-1;3309:16:7;;;;:25;3199:135;:181;;;;-1:-1:-1;3354:17:7;;;;:26;3199:181;3191:225;;;;;-1:-1:-1;;;3191:225:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;3427:22;;;;:10;:22;;;;;;:38;;:45;;-1:-1:-1;;;;3427:45:7;-1:-1:-1;;;3427:45:7;;;3488:27;3438:10;;-1:-1:-1;;;;;;;;;;;3488:27:7;;3067:455;;:::o;977:99:11:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;1041:12:11::1;;::::0;;;:6:::1;:12;::::0;;;;:28;;-1:-1:-1;;1041:28:11::1;;;::::0;;977:99::o;536:144:7:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;625:7:7::1;:48:::0;536:144::o;2270:39:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2362:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2362:47:9;;;;-1:-1:-1;;;2362:47:9;;;;;-1:-1:-1;;;2362:47:9;;;;;-1:-1:-1;;;2362:47:9;;;;;-1:-1:-1;;;2362:47:9;;;;;-1:-1:-1;;;2362:47:9;;;;;:::o;465:151:17:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;562:47:17::1;:30:::0;595:14;562:47:::1;;:::i;:::-;;465:151:::0;:::o;2053:67:9:-;;;;;;;;;;;;;;;-1:-1:-1;;2053:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2253:823:12:-;2688:2;427:30;440:2;444:12;:10;:12::i;:::-;427;:30::i;:::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;2731:1:::1;2710:11:::0;;;:7:::1;:11;::::0;;;;:18;2702:48:::1;;;::::0;;-1:-1:-1;;;2702:48:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2702:48:12;;;;;;;;;;;;;::::1;;2761:262;2771:2;2793:12;2825:15;2860:14;2894:24;2938:21;2979:9;3008:14;2761:9;:262::i;:::-;3039:30;::::0;;;;;;;3052:2;;3039:30:::1;::::0;;;;;::::1;::::0;;::::1;2253:823:::0;;;;;;;;;:::o;2133:631:14:-;2282:16;2341:3;:10;2322:8;:15;:29;2314:90;;;;-1:-1:-1;;;2314:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:30;2462:8;:15;2448:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2448:30:14;;2415:63;;2494:9;2489:238;2513:8;:15;2509:1;:19;2489:238;;;2580:1;-1:-1:-1;;;;;2557:25:14;:8;2566:1;2557:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2557:25:14;;;2549:90;;;;-1:-1:-1;;;2549:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2672:7;:15;2680:3;2684:1;2680:6;;;;;;;;;;;;;;2672:15;;;;;;;;;;;:23;;:36;2696:8;2705:1;2696:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2672:36:14;-1:-1:-1;;;;;2672:36:14;;;;;;;;;;;;:44;;;2653:13;2667:1;2653:16;;;;;;;;;;;;;;;;;:63;2530:3;;2489:238;;;-1:-1:-1;2744:13:14;2133:631;-1:-1:-1;;;2133:631:14:o;458:135:10:-;534:4;570:16;-1:-1:-1;;;;;570:16:10;;;557:29;;;;458:135::o;949:161:8:-;1019:7;1065:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1065:28:8;;;;:19;;:28;;;;;:37;;;1045:58;;:15;;:19;:58::i;1414:132:12:-;1489:4;1512:27;1525:2;1529:9;1512:12;:27::i;388:140:16:-;462:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;-1:-1:-1;476:11:16::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;476:27:16;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:45:::0;;-1:-1:-1;;476:45:16::1;::::0;::::1;::::0;;388:140::o;684:::-;757:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;-1:-1:-1;812:5:16::1;771:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;771:27:16;;::::1;::::0;;:19:::1;::::0;;::::1;:27:::0;;;;:38:::1;;:46:::0;;-1:-1:-1;;771:46:16::1;::::0;;684:140::o;631:119:13:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;707:17:13::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;707:36:13::1;739:4;707:36;::::0;;631:119::o;420:31:10:-;;;-1:-1:-1;;;;;420:31:10;;:::o;887:117:13:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:17:13::1;992:5;960:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;960:37:13::1;::::0;;887:117::o;733:144:12:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;821:11:12::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;821:30:12;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;821:49:12::1;866:4;821:49;::::0;;733:144::o;1125:93:15:-;1198:13;;-1:-1:-1;;;;;1198:13:15;1125:93;:::o;2329:636:7:-;2392:24;;:::i;:::-;2419:22;;;;:10;:22;;;;;;;;;2392:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2392:49:7;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:22;;2392:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2392:49:7;;;;;;;;;;;;;;;;-1:-1:-1;;;2392:49:7;;;;-1:-1:-1;;2460:16:7;;2392:49;;-1:-1:-1;;2460:21:7;;;;:66;;-1:-1:-1;2501:16:7;;;;:25;2460:66;:112;;;;-1:-1:-1;2546:17:7;;;;:26;2460:112;:300;;;;-1:-1:-1;2606:16:7;;2593:44;;2624:12;:10;:12::i;2593:44::-;:114;;;-1:-1:-1;2676:16:7;;2658:49;;2694:12;:10;:12::i;2658:49::-;2593:166;;;;2744:8;:15;;;-1:-1:-1;;;;;2728:31:7;:12;:10;:12::i;:::-;-1:-1:-1;;;;;2728:31:7;;2593:166;2452:344;;;;;-1:-1:-1;;;2452:344:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:22;;;;:10;:22;;;;;;;;:30;;:37;;-1:-1:-1;;;;2807:37:7;-1:-1:-1;;;2807:37:7;;;2892:23;;;;2861:15;;;;-1:-1:-1;;;;;2854:23:7;;;:6;:23;;;;;;2840:4;2854:34;:61;;;;;;;;2931:27;2818:10;;-1:-1:-1;;;;;;;;;;;2931:27:7;;2329:636;;:::o;3242:308:14:-;3354:8;-1:-1:-1;;;;;3338:24:14;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3338:24:14;;;3330:81;;;;-1:-1:-1;;;3330:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3472:8;3421:6;:20;3428:12;:10;:12::i;:::-;-1:-1:-1;;;;;3421:20:14;;;;;;;;;;;;;;;;;-1:-1:-1;3421:20:14;;;:48;;;;;;:38;;;;:48;;;;;:59;;-1:-1:-1;;3421:59:14;;;;;;;;;;;3510:12;:10;:12::i;:::-;-1:-1:-1;;;;;3495:48:14;;3534:8;3495:48;;;;;;;;;;;;;;;;;;;;3242:308;;:::o;537:129:11:-;615:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;629:30:11::1;642:2;646:12;629;:30::i;:::-;537:129:::0;;;:::o;1182:102::-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;1248:12:11::1;1272:5;1248:12:::0;;;:6:::1;:12;::::0;;;;:29;;-1:-1:-1;;1248:29:11::1;::::0;;1182:102::o;320:125::-;396:2;427:30:12;440:2;444:12;:10;:12::i;427:30::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;419:66:12;;;;;;;;;;;;;;;410:28:11::1;421:2;425:12;410:10;:28::i;770:105::-:0;828:4;850:18;865:2;850:14;:18::i;1150:116:13:-;1213:4;1236:23;1249:9;1236:12;:23::i;3623:1068:7:-;3686:24;;:::i;:::-;3713:22;;;;:10;:22;;;;;;;;;3686:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3686:49:7;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3713:22;;3686:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3686:49:7;;;;;;;;;;;;;;;;-1:-1:-1;;;3686:49:7;;;;-1:-1:-1;;3754:16:7;;3686:49;;-1:-1:-1;;3754:21:7;;;;:85;;-1:-1:-1;3808:16:7;;3795:44;;3826:12;:10;:12::i;3795:44::-;3754:162;;;;;3861:8;:26;;;3860:27;:55;;;;3891:8;:24;;;3860:55;3754:207;;;;-1:-1:-1;3936:16:7;;;;:25;3754:207;:253;;;;-1:-1:-1;3981:17:7;;;;:26;3754:253;:366;;;;;4054:66;4069:8;:16;;;4087:8;:14;;;4103:8;:16;;;4054:14;:66::i;:::-;4027:8;:23;;;:93;;3754:366;3746:447;;;;-1:-1:-1;;;3746:447:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4204:22;;;;:10;:22;;;;;;:31;;:38;;-1:-1:-1;;;;4204:38:7;-1:-1:-1;;;4204:38:7;;;4258:27;4215:10;;-1:-1:-1;;;;;;;;;;;4258:27:7;;4300:16;;;;:23;:27;4296:389;;4343:53;4360:10;4372:8;:16;;;:23;4343:16;:53::i;:::-;4296:389;;;4464:7;:39;4425:16;;4464:39;4417:25;;;:7;:25;;;;;:36;;:43;:86;4413:272;;4556:16;;4548:25;;;;:7;:25;;;;;:36;;:43;4519:73;;4536:10;;4519:16;:73::i;4413:272::-;4623:51;4634:8;:16;;;4652:8;:21;;;4623:10;:51::i;2105:1040:13:-;331:26;344:12;:10;:12::i;:::-;331;:26::i;:::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;323:62:13;;;;;;;;;;;;;;;2682:378:::1;2695:9;2727:2;2752:6;2781:8;2812:12;2847:15;2885:14;2922:24;2969:21;3013:9;3045:14;2682:12;:378::i;:::-;-1:-1:-1::0;;;;;3075:63:13;::::1;3112:1;3090:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;3075:63:13::1;-1:-1:-1::0;;;;;;;;;;;3127:2:13::1;3131:6;3075:63;;;;;;;;;;;;;;;;;;;;;;;;2105:1040:::0;;;;;;;;;;;:::o;1401:113:11:-;1463:4;1485:22;1502:4;1485:16;:22::i;552:159:8:-;642:7;668:36;685:7;694:2;698:5;668:16;:36::i;:::-;661:43;552:159;-1:-1:-1;;;;552:159:8:o;1046:142:12:-;889:10:15;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;1176:5:12::1;1131:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1131:30:12;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1131:50:12::1;::::0;;1046:142::o;1030:1170:7:-;1190:22;;;;:10;:22;;;;;:30;:35;:66;;;;-1:-1:-1;1255:1:7;1229:16;;;:7;:16;;;;;:23;:27;;1190:66;:138;;;;;1289:39;1304:7;1313:5;1320:7;1289:14;:39::i;:::-;1276:9;:52;;1190:138;:215;;;;-1:-1:-1;1366:7:7;:39;1348:14;;:57;;1190:215;1182:254;;;;;-1:-1:-1;;;1182:254:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:18;1497:16;;;:7;:16;;;;;:38;;;;1469:23;;1468:80;;1542:5;;1469:67;;:27;:67::i;:::-;1468:73;;:80::i;:::-;1447:101;;1584:566;;;;;;;;1616:7;1584:566;;;;1708:5;1584:566;;;;1743:9;1584:566;;;;2068:1;1584:566;;;;2127:12;1584:566;;;;1645:12;:10;:12::i;:::-;-1:-1:-1;;;;;1584:566:7;;;;;1786:10;;;1785:108;;-1:-1:-1;1833:16:7;;;;:7;:16;;;;;1882:10;;1833:24;;;;;1858:12;:10;:12::i;:::-;-1:-1:-1;;;;;1833:38:7;;;;;;;;;;;;-1:-1:-1;1833:38:7;:46;:59;1785:108;:163;;;;1946:1;1929:7;:14;:18;1785:163;1584:566;;;;1979:5;1584:566;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1559:22;;;:10;:22;;;;;;:591;;;;;;;;1584:566;1559:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;1559:591:7;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;1559:591:7;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;1559:591:7;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;1559:591:7;;;-1:-1:-1;;;1559:591:7;-1:-1:-1;;;;;;;;;1559:591:7;;;-1:-1:-1;;;;;;1559:591:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;:591;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2166:27:7;;2182:10;;-1:-1:-1;;;;;;;;;;;;2166:27:7;;;;1030:1170;;;;;;:::o;3831:157:14:-;3922:4;3945:36;3963:7;3972:8;3945:17;:36::i;2315:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2315:41:9;;;;-1:-1:-1;;;2315:41:9;;;;;-1:-1:-1;;;2315:41:9;;;;:::o;4542:638:14:-;-1:-1:-1;;;;;4744:16:14;;4736:69;;;;-1:-1:-1;;;4736:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4844:12;:10;:12::i;:::-;-1:-1:-1;;;;;4836:20:14;:4;-1:-1:-1;;;;;4836:20:14;;:68;;;;4860:36;4877:4;4883:12;:10;:12::i;4860:36::-;:44;;4900:4;4860:44;4836:68;4815:170;;;;-1:-1:-1;;;4815:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4996:30;5006:4;5012:2;5016;5020:5;4996:9;:30::i;:::-;5077:2;-1:-1:-1;;;;;5042:49:14;5071:4;-1:-1:-1;;;;;5042:49:14;5057:12;:10;:12::i;:::-;-1:-1:-1;;;;;5042:49:14;-1:-1:-1;;;;;;;;;;;5081:2:14;5085:5;5042:49;;;;;;;;;;;;;;;;;;;;;;;;5102:71;5133:12;:10;:12::i;:::-;5147:4;5153:2;5157;5161:5;5168:4;;5102:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5102:30:14;;-1:-1:-1;;;5102:71:14:i;:::-;4542:638;;;;;;:::o;1367:116:15:-;889:10;:8;:10::i;:::-;881:55;;;;;-1:-1:-1;;;881:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;881:55:15;;;;;;;;;;;;;;;1448:28:::1;1467:8;1448:18;:28::i;:::-;1367:116:::0;:::o;879:123:18:-;-1:-1:-1;;;;;959:10:18;;;;;;:6;:10;;;;;:21;;;:36;;985:9;959:25;:36::i;:::-;-1:-1:-1;;;;;935:10:18;;;;;;;:6;:10;;;;;:21;;:60;879:123::o;459:279::-;-1:-1:-1;;;;;532:10:18;;;;;;:6;:10;;;;;:21;;;:31;-1:-1:-1;532:31:18;524:64;;;;;-1:-1:-1;;;524:64:18;;;;;;;;;;;;-1:-1:-1;;;524:64:18;;;;;;;;;;;;;;;617:26;;599:12;;-1:-1:-1;;;;;617:7:18;;;632:6;;599:12;617:26;599:12;617:26;632:6;617:7;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:45;;;661:7;653:37;;;;;-1:-1:-1;;;653:37:18;;;;;;;;;;;;-1:-1:-1;;;653:37:18;;;;;;;;;;;;;;;-1:-1:-1;;;;;;700:10:18;;;;;;;:6;:10;;;;;:21;;:31;;;;;;;;459:279::o;3372:647:13:-;331:26;344:12;:10;:12::i;331:26::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;323:62:13;;;;;;;;;;;;;;;3573:1:::1;3552:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;3608:14;:21;3594:3;:10;:35;3552:77;3544:107;;;::::0;;-1:-1:-1;;;3544:107:13;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3544:107:13;;;;;;;;;;;;;::::1;;3667:9;3662:351;3686:3;:10;3682:1;:14;3662:351;;;3717:42;3729:2;3733:3;3737:1;3733:6;;;;;;;;;;;;;;3741:14;3756:1;3741:17;;;;;;;;;;;;;;3717:11;:42::i;:::-;3884:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3884:25:13::1;::::0;3794:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;3779:223:13::1;-1:-1:-1::0;;;;;;;;;;;3943:3:13::1;3947:1;3943:6;;;;;;;;;;;;;;3983:7;:11;3991:2;3983:11;;;;;;;;;;;:18;;;3779:223;;;;;;;;;;;;;;;;;;;;;;;;3698:3;;3662:351;;;;3372:647:::0;;;:::o;4915:464:7:-;4996:24;;:::i;:::-;5023:22;;;;:10;:22;;;;;;;;;4996:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4996:49:7;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5023:22;;4996:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4996:49:7;;;;;;;;;;;;;;;;-1:-1:-1;;;4996:49:7;;;;-1:-1:-1;;5064:16:7;;4996:49;;-1:-1:-1;;5064:21:7;;;;:66;;-1:-1:-1;5105:17:7;;;;:25;;5126:4;5105:25;5064:66;:113;;;;-1:-1:-1;5150:18:7;;;;:27;5064:113;5056:142;;;;;-1:-1:-1;;;5056:142:7;;;;;;;;;;;;-1:-1:-1;;;5056:142:7;;;;;;;;;;;;;;;5209:37;5226:10;5238:7;5209:16;:37::i;:::-;5261:22;;;;:10;:22;;;;;:32;;;-1:-1:-1;;;5261:32:7;;;;5257:116;;;5309:53;5322:8;:16;;;5340:8;:21;;;5309:12;:53::i;933:419:21:-;986:13;1011:10;1044:1;1055:68;1062:6;;1055:68;;1084:7;;;;;;1110:2;1105:7;;1055:68;;;1132:16;1161:5;1151:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16:21;;1132:35;;1182:6;1177:141;1194:5;1192:1;:7;1177:141;;;1228:2;1224:1;:6;1220:10;;1265:21;1283:1;1265:11;:21::i;:::-;1244:3;1260:1;1256;1248:5;:9;:13;1244:18;;;;;;;;;;;:42;-1:-1:-1;;;;;1244:42:21;;;;;;;;-1:-1:-1;1305:2:21;1300:7;;;-1:-1:-1;1201:3:21;;1177:141;;;-1:-1:-1;1341:3:21;933:419;-1:-1:-1;;;;933:419:21:o;86:515::-;305:10;;292;;163:13;;213:1;;250;;163:13;;292:23;281:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:35:21;-1:-1:-1;262:54:21;-1:-1:-1;262:54:21;365:6;;405:76;421:3;:10;417:1;:14;405:76;;;464:3;468:1;464:6;;;;;;;;;;;;;;;;452:4;457:3;;;;;;452:9;;;;;;;;;;;:18;-1:-1:-1;;;;;452:18:21;;;;;;;;-1:-1:-1;433:3:21;;405:76;;;-1:-1:-1;499:1:21;490:76;506:3;:10;502:1;:14;490:76;;;549:3;553:1;549:6;;;;;;;;;;;;;;;;537:4;542:3;;;;;;537:9;;;;;;;;;;;:18;-1:-1:-1;;;;;537:18:21;;;;;;;;-1:-1:-1;518:3:21;;490:76;;;-1:-1:-1;589:4:21;;86:515;-1:-1:-1;;;;;;;86:515:21:o;4759:404:8:-;4875:19;4909:1;4897:9;:13;:51;;-1:-1:-1;;;;;4925:12:8;;;;;;:6;:12;;;;;:23;;;4897:51;;;4913:9;4897:51;4875:73;;4963:9;4958:157;4982:3;:10;4978:1;:14;4958:157;;;5027:77;5043:40;5055:4;5061:2;5065:3;5069:1;5065:6;;;;;;;;;;;;;;5073;5080:1;5073:9;;;;;;;;;;;;;;5043:11;:40::i;:::-;5027:77;;;;;;;;;;;;-1:-1:-1;;;5027:77:8;;;;:11;;:77;:15;:77::i;:::-;5013:91;-1:-1:-1;4994:3:8;;4958:157;;;;5124:32;5138:4;5144:11;5124:13;:32::i;:::-;4759:404;;;;;:::o;7170:558:14:-;7413:15;:2;-1:-1:-1;;;;;7413:13:14;;:15::i;:::-;7410:312;;;7571:52;;;-1:-1:-1;;;;;7469:154:14;;7486:2;-1:-1:-1;;;;;7469:43:14;;7513:8;7523:4;7529:3;7534:6;7542:4;7469:78;;;;;;;;;;;;;-1:-1:-1;;;;;7469:78:14;;;;;;-1:-1:-1;;;;;7469:78:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7469:78:14;-1:-1:-1;;;;;;7469:154:14;;7444:267;;;;-1:-1:-1;;;7444:267:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7553:160:7;7639:4;7662:11;;;:7;:11;;;;;;:26;;;-1:-1:-1;;;;;7662:44:7;;;:26;;:44;;7553:160::o;2001:102:15:-;2083:13;;2044:4;;-1:-1:-1;;;;;2083:13:15;2067:12;:10;:12::i;:::-;-1:-1:-1;;;;;2067:29:15;;2060:36;;2001:102;:::o;3177:162:12:-;3253:4;3276:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3276:30:12;;;;:19;;:30;;;;;:42;;;;;;:56;;;3322:10;:8;:10::i;4263:1359:13:-;4682:23;4724:9;4719:120;4743:24;:31;4739:1;:35;4719:120;;;4812:24;4837:1;4812:27;;;;;;;;;;;;;;4793:46;;;;4776:3;;;;;4719:120;;;;4882:1;4858:14;:21;:25;:75;;;;-1:-1:-1;4887:46:13;4858:75;:119;;;;;4953:15;4972:5;4953:24;4858:119;:168;;;;;5021:5;4997:21;:29;4858:168;4850:214;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;;;;5075:11;;;;:7;:11;;;;;;;;:24;;;:39;;;5161:18;;5124:34;;;;:55;;;;5224:18;;;;-1:-1:-1;5189:32:13;;:53;5252:74;;;;;;;5289:15;5252:74;;5306:18;;;;5252:74;;;;:30;;;;:74;;5240:1;5252:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5336:11:13;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;5389:11:13;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;5462:11:13;;;;:7;:11;;;;;;:33;;;:57;;;;5529:21;;;;:33;;-1:-1:-1;;;;5529:33:13;-1:-1:-1;;;5529:33:13;;;;;;;;;;;-1:-1:-1;;;;;;5572:43:13;-1:-1:-1;;;;;5572:43:13;;;;;;;;;;-1:-1:-1;;;;4263:1359:13:o;1307:134:20:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;1771:153:11:-;1867:5;1846:11;;;:7;:11;;;;;;;;;:18;;:26;;-1:-1:-1;;;;1846:26:11;;;1887:30;;;;;;;1854:2;;1887:30;;;;;;;;;1771:153;;:::o;1615:150::-;1688:11;;;;:7;:11;;;;;;;;;:18;;:25;;-1:-1:-1;;;;1688:25:11;-1:-1:-1;;;1688:25:11;;;1728:30;;;;;;;1696:2;;1728:30;;;;;;;;;1615:150;;:::o;1930:107::-;1989:4;2012:11;;;:7;:11;;;;;:18;;;-1:-1:-1;;;2012:18:11;;;;;1930:107::o;4120:137:13:-;-1:-1:-1;;;;;4207:17:13;;4184:4;4207:17;;;:6;:17;;;;;:29;;;;:43;;;4240:10;:8;:10::i;7034:513:7:-;7198:14;;7139:7;;;;7194:305;;7278:16;;;;:7;:16;;;;;7250:75;;7278:24;;;;;7303:12;:10;:12::i;:::-;-1:-1:-1;;;;;7278:38:7;;;;;;;;;;;;;;;-1:-1:-1;7278:38:7;;;:46;7250:16;;;:7;:16;;;;:23;;:27;:75::i;:::-;7233:92;;7194:305;;;7361:6;7356:133;7373:7;:14;7369:1;:18;7356:133;;;7430:7;:16;7438:7;7430:16;;;;;;;;;;;:24;;:36;7455:7;7463:1;7455:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7430:36:7;;;;;;;;;;;-1:-1:-1;7430:36:7;:44;7412:62;;;;;7389:3;;7356:133;;;;7194:305;7515:25;:14;7534:5;7515:18;:25::i;:::-;7508:32;7034:513;-1:-1:-1;;;;;7034:513:7:o;5480:1548::-;5562:15;5580:22;;;:10;:22;;;;;:30;;5648;;;;:37;5621:24;;5648:174;;5795:16;;;;:7;:16;;;;;:27;;5648:174;;;5727:22;;;;:10;:22;;;;;:30;;5648:174;5621:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5621:201:7;;;;;;;;;;;;;;;;-1:-1:-1;;5847:14:7;;5833:11;5891:22;;;:10;:22;;;;;:34;;;5621:201;;-1:-1:-1;;;5847:18:7;;;;5891:34;-1:-1:-1;5833:11:7;-1:-1:-1;;5949:15:7;;;:22;-1:-1:-1;5949:46:7;;5992:3;5949:46;;;5982:7;5974:5;:15;5949:46;5935:60;-1:-1:-1;6006:22:7;6059:5;6042:715;6071:3;6066:1;:8;6042:715;;6095:14;6112:7;6120:1;6112:10;;;;;;;;;;;;;;;;;;;6183:1;6140:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6140:32:7;;;;:24;;:32;;;;;;;:40;6112:10;;-1:-1:-1;6140:44:7;6136:611;;6222:16;;;;:7;:16;;;;;;;;-1:-1:-1;;;;;6222:32:7;;;;;:24;;;;:32;;;;;;:40;6354:22;;;:10;:22;;;;;:28;;;6309:32;;;;;;;;6204:58;;;;6309:74;;:44;:74::i;:::-;-1:-1:-1;;;;;6280:14:7;;;;;;;:6;:14;;;;;;;;:25;;:103;;;;;;;;6516:22;;;:10;:22;;;;;;:29;;;;;6422:12;:10;:12::i;:::-;6628:16;;;;:7;:16;;;;;;;;-1:-1:-1;;;;;6628:32:7;;;;;:24;;;;:32;;;;;;:40;6407:262;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;6407:262:7;;;;;;;;;;6731:1;6688:16;;;:7;:16;;;;;;;;-1:-1:-1;;;;;6688:32:7;;;;:24;;:32;;;;;:44;6136:611;-1:-1:-1;6076:3:7;;6042:715;;;-1:-1:-1;6780:22:7;;;;:10;:22;;;;;:29;;;6766:69;;-1:-1:-1;;;;;6780:29:7;6811:7;6820:14;6766:13;:69::i;:::-;6846:22;;;;:10;:22;;;;;:34;;:40;;;6900:10;;;6896:126;;;6926:22;;;;:10;:22;;;;;;:32;;:39;;-1:-1:-1;;;;6926:39:7;-1:-1:-1;;;6926:39:7;;;6984:27;6937:10;;-1:-1:-1;;;;;;;;;;;6984:27:7;;5480:1548;;;;;;;;:::o;5629:1167:13:-;6211:11;;;;:7;:11;;;;;:18;:23;:37;;;;;6247:1;6238:6;:10;6211:37;6203:67;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;;;;6281:11;;;;:7;:11;;;;;:27;;;6318:20;;;;:31;;;:20;6359:19;;;;;6379:12;:10;:12::i;:::-;-1:-1:-1;;;;;6359:33:13;-1:-1:-1;;;;;6359:33:13;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6465:4;6421:7;:11;6429:2;6421:11;;;;;;;;;;;:19;;:30;6441:9;-1:-1:-1;;;;;6421:30:13;-1:-1:-1;;;;;6421:30:13;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;6480:262;6490:2;6512:12;6544:15;6579:14;6613:24;6657:21;6698:9;6727:14;6480:9;:262::i;:::-;6753:36;6767:9;6778:2;6782:6;6753:13;:36::i;:::-;5629:1167;;;;;;;;;;;:::o;2043:114:11:-;-1:-1:-1;;;;;2129:12:11;2106:4;2129:12;;;:6;:12;;;;;:21;;;;;;;2043:114::o;2336:1317:8:-;2429:7;2540:11;;;:7;:11;;;;;:30;;:37;2429:7;;2500:15;;-1:-1:-1;;2540:41:8;2526:835;2611:19;2633:11;;;:7;:11;;;;;:30;;:33;;2664:1;;2633:33;;;;;;;;;;;;;;;;;;:36;;2683:12;2698:11;;;:7;:11;;;;;:30;;:33;;2633:36;;-1:-1:-1;2683:12:8;;2729:1;;2698:33;;;;;;;;;;;;;;;;2732:1;2698:36;;;;;;;;;2748:19;2786:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2786:28:8;;;;:19;;:28;;;;;:37;;;2698:36;;-1:-1:-1;2748:19:8;2786:52;-1:-1:-1;2782:569:8;;2888:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2888:28:8;;;;:19;;:28;;;;;:37;;;2872:66;;2932:5;;2873:53;;:10;;:14;:53::i;2872:66::-;2858:80;-1:-1:-1;2960:16:8;2956:37;;-1:-1:-1;2992:1:8;2956:37;3024:34;3052:5;3025:21;:11;3041:4;3025:15;:21::i;:::-;3024:27;;:34::i;:::-;3011:47;;;;3076:5;;;;;2782:569;3134:40;3168:5;3135:27;:10;3150:11;3135:14;:27::i;3134:40::-;3120:54;-1:-1:-1;3196:16:8;3192:37;;-1:-1:-1;3228:1:8;3192:37;3260:11;;-1:-1:-1;3260:11:8;;3302:34;3330:5;3303:21;:11;3319:4;3303:15;:21::i;3302:34::-;3289:47;;;;-1:-1:-1;;;;;2591:3:8;2526:835;;;-1:-1:-1;3418:11:8;;;;:7;:11;;;;;:20;;;3400:39;;:9;;3414:2;:24;3400:13;:39::i;:::-;3489:17;3520:11;;;:7;:11;;;;;:32;;;3388:51;;-1:-1:-1;3489:17:8;3509:56;;3559:5;;3510:43;;:5;;:9;:43::i;3509:56::-;3596:11;;;;:7;:11;;;;;:34;;;3489:76;;-1:-1:-1;3582:64:8;;3596:49;;3489:76;3596:38;:49::i;:::-;3582:9;;:13;:64::i;:::-;3575:71;2336:1317;-1:-1:-1;;;;;;;2336:1317:8:o;2304:459:20:-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:20;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:130;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;1239:203:17:-;1324:4;1347:41;1370:7;1379:8;1347:22;:41::i;:::-;:88;;;-1:-1:-1;;;;;;;1392:15:17;;;;;;;:6;:15;;;;;;;;:43;;;;;;:33;;;;:43;;;;;;;;1239:203::o;4395:306:8:-;4486:19;4520:1;4508:9;:13;:51;;-1:-1:-1;;;;;4536:12:8;;;;;;:6;:12;;;;;:23;;;4508:51;;;4524:9;4508:51;4486:73;;4583:69;4599:32;4611:4;4617:2;4621;4625:5;4599:11;:32::i;:::-;4583:69;;;;;;;;;;;;-1:-1:-1;;;4583:69:8;;;;:11;;:69;:15;:69::i;:::-;4569:83;;4662:32;4676:4;4682:11;4662:13;:32::i;6648:516:14:-;6866:15;:2;-1:-1:-1;;;;;6866:13:14;;:15::i;:::-;6863:295;;;7017:47;;;-1:-1:-1;;;;;6922:142:14;;6939:2;-1:-1:-1;;;;;6922:38:14;;6961:8;6971:4;6977:2;6981:5;6988:4;6922:71;;;;;;;;;;;;;-1:-1:-1;;;;;6922:71:14;;;;;;-1:-1:-1;;;;;6922:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6922:71:14;-1:-1:-1;;;;;;6922:142:14;;6897:250;;;;-1:-1:-1;;;6897:250:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:239:15;-1:-1:-1;;;;;1752:22:15;;1744:73;;;;-1:-1:-1;;;1744:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1853:13;;1832:45;;-1:-1:-1;;;;;1832:45:15;;;;1853:13;;1832:45;;1853:13;;1832:45;1887:13;:24;;-1:-1:-1;;;;;;1887:24:15;-1:-1:-1;;;;;1887:24:15;;;;;;;;;;1679:239::o;6802:766:13:-;6906:11;;;;:7;:11;;;;;:22;;:25;;6893:668;;6906:11;:25;;;;;;;;;;;;;;;;6984:11;;;:7;:11;;;;;;;:18;;6906:25;7025:20;;;6893:668;;;;;;;7128:34;;;;6893:668;;7187:32;;;;6893:668;;;;7244:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;6906:25:13;;;;6954:7;;6984:18;;7025:20;;7068:12;;6893:668;;;;;;7244:30;6906:25;7244:33;;;;;;;;;;;;;;7278:1;7244:36;;;;;;;;;6893:668;;7326:11;;;;:7;:11;;;;;;;;;:26;;6893:668;;;;;;;;;;;;;;;;;7326:26;;6893:668;;7326:26;6893:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6893:668:13;;;;;;;;;;;;;;;;-1:-1:-1;;;7375:11:13;;;;:7;:11;;;;;;;;;:36;;6893:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;7375:36:13;-1:-1:-1;6893:668:13;;7375:36;6893:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7434:11:13;;;;:7;:11;;;;;:33;;;;7490:21;;;;;7434:33;;-1:-1:-1;7490:21:13;-1:-1:-1;;;7490:21:13;;;;-1:-1:-1;;;;;;7534:26:13;6893:12;:668::i;607:320:21:-;660:4;695:1;690;:6;;;676:187;;-1:-1:-1;724:16:21;:20;;:16;719:26;712:33;;676:187;778:1;766:14;;:2;:14;;:32;;;;;796:2;790:1;784:14;;;;766:32;762:101;;;-1:-1:-1;826:25:21;;;:16;821:31;814:38;;2429:241:11;2530:12;2563:34;2577:4;2583:2;2587;2591:5;2563:13;:34::i;:::-;2562:35;2554:54;;;;;-1:-1:-1;;;2554:54:11;;;;;;;;;;;;-1:-1:-1;;;2554:54:11;;;;;;;;;;;;;;;2625:38;2643:4;2649:2;2653;2657:5;2625:17;:38::i;1877:187:20:-;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:20;;;1877:187::o;5169:290:8:-;5260:1;5248:9;:13;:32;;;;;5279:1;5265:11;:15;5248:32;5244:209;;;-1:-1:-1;;;;;5320:12:8;;;;;;:6;:12;;;;;:23;;;:40;;5348:11;5320:27;:40::i;:::-;-1:-1:-1;;;;;5294:12:8;;;;;;:6;:12;;;;;:23;;:66;5244:209;;;5379:9;5375:78;;-1:-1:-1;;;;;5407:12:8;;;;;;;;:6;:12;;;;;:23;;:37;5169:290::o;590:797:19:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:19;;;1329:51;-1:-1:-1;;590:797:19:o;976:255:16:-;1082:11;;;;:7;:11;;;;;:21;;;-1:-1:-1;;;1082:21:16;;;;1081:22;;:67;;-1:-1:-1;1107:11:16;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1107:30:16;;;;:19;;:30;;;;;:41;;;;;;;;1081:67;1073:100;;;;;-1:-1:-1;;;1073:100:16;;;;;;;;;;;;-1:-1:-1;;;1073:100:16;;;;;;;;;;;;;;;1183:41;1203:9;1214:2;1218:5;1183:19;:41::i;3969:338:20:-;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:20:o;717:516:17:-;807:4;;823:382;847:37;843:1;:41;823:382;;;954:1;909:30;940:1;909:33;;;;;;;;;-1:-1:-1;;;;;909:33:17;:47;905:290;;976:27;1020:30;1051:1;1020:33;;;;;;;;;1084:30;;;-1:-1:-1;;;1084:30:17;;-1:-1:-1;;;;;1084:30:17;;;;;;;;;1020:33;;;;-1:-1:-1;1076:51:17;;;;1020:33;;1084:21;;:30;;;;;;;;;;;;;;1020:33;1084:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1084:30:17;-1:-1:-1;;;;;1076:51:17;;1072:109;;;1158:4;1151:11;;;;;;1072:109;905:290;;886:3;;823:382;;;-1:-1:-1;1221:5:17;;717:516;-1:-1:-1;;;717:516:17:o;2163:213:11:-;2262:4;2285:18;2300:2;2285:14;:18::i;:::-;:44;;;;2307:22;2324:4;2307:16;:22::i;:::-;2285:68;;;;2333:20;2350:2;2333:16;:20::i;:::-;2285:84;;;-1:-1:-1;;2358:10:11;;2163:213;-1:-1:-1;;;2163:213:11:o;3659:683:8:-;3819:68;;;;;;;;;;;-1:-1:-1;;;3819:68:8;;;;;;;;3759:12;3819:11;;;:7;:11;;;;;-1:-1:-1;;;;;3819:25:8;;;;:19;;:25;;;;;;:33;:68;;3857:5;;3819:37;:68::i;:::-;3783:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3783:25:8;;;;:19;;:25;;;;;:104;3897:28;3911:2;3791;3919:5;3897:13;:28::i;:::-;3943:33;3960:4;3966:2;3970:5;3943:16;:33::i;:::-;3936:40;;3992:9;3987:327;4011:11;;;;:7;:11;;;;;:26;;:33;4007:37;;3987:327;;;4065:21;4089:11;;;:7;:11;;;;;:26;;:29;;4116:1;;4089:29;;;;;;;;;;;;;;;;;;4167:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;4089:29:8;;;;-1:-1:-1;4167:36:8;4204:1;;4167:39;;;;;;;;;;;;;;;;;-1:-1:-1;4256:47:8;4297:5;4257:34;:4;4167:39;4257:8;:34::i;4256:47::-;-1:-1:-1;;;;;4220:21:8;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;4046:3:8;3987:327;;1290:1006;1386:18;1407:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1407:30:8;;;;:19;;:30;;;;;:38;:49;;1450:5;1407:42;:49::i;:::-;1471:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1471:30:8;;;;:19;;:30;;;;;:38;1386:70;;-1:-1:-1;1467:761:8;;1536:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1536:30:8;;;;:19;;:30;;;;;:39;;;;;;;;1531:225;;-1:-1:-1;;;;;1595:17:8;;;;;;:6;:17;;;;;;;;:24;;:33;;;;;;;;;;;;;;;;;;1646:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1646:38:8;;;;;1702:30;;;;:19;;;;:30;;1531:225;1770:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1770:30:8;;;;:19;;:30;;;;;1812:15;1770:39;;;;:57;1467:761;;;1938:20;1981:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1981:30:8;;;;:19;;:30;;;;;:39;;;1961:60;;:15;;:19;:60::i;:::-;2035:19;2058:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2058:30:8;;;;:19;;:30;;;;;:38;1938:83;;-1:-1:-1;2035:19:8;2057:74;;2120:10;;2058:56;;1938:83;2058:42;:56::i;2057:74::-;2146:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2146:30:8;;;;:19;;:30;;;;;2188:15;:29;;;;2146:39;;;;:71;-1:-1:-1;;1467:761:8;2238:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2238:30:8;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;1290:1006:8:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport './lib/Callable.sol';\nimport './lib/Withdrawable.sol';\n\ncontract StashBlox is Callable, Withdrawable {\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        _config.callbackAutoExecuteMaxAddresses = 50;\n        _config.baseURI = \"http://stashblox.com/tokens/\";\n        _transferOwnership(msg.sender);\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol",
    "exportedSymbols": {
      "StashBlox": [
        30
      ]
    },
    "id": 31,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Callable.sol",
        "file": "./lib/Callable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 31,
        "sourceUnit": 960,
        "src": "70:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol",
        "file": "./lib/Withdrawable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 31,
        "sourceUnit": 3542,
        "src": "99:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Callable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 959,
              "src": "155:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Callable_$959",
                "typeString": "contract Callable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "155:8:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3541,
              "src": "165:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$3541",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "165:12:0"
          }
        ],
        "contractDependencies": [
          149,
          161,
          211,
          234,
          263,
          959,
          1580,
          1733,
          1805,
          2034,
          2194,
          2715,
          3155,
          3253,
          3339,
          3449,
          3541,
          4104
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 30,
        "linearizedBaseContracts": [
          30,
          3541,
          959,
          2034,
          3339,
          2194,
          2715,
          3155,
          3449,
          3253,
          1580,
          1733,
          4104,
          161,
          1805,
          263,
          234,
          149,
          211
        ],
        "name": "StashBlox",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "296:159:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "306:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1664_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "callbackAutoExecuteMaxAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1655,
                      "src": "306:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530",
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "348:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "306:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "306:44:0"
                },
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 17,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "360:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1664_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "baseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1657,
                      "src": "360:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "687474703a2f2f7374617368626c6f782e636f6d2f746f6b656e732f",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "378:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_699ad49e673d0ba571e0814a1cc2e9c5b4688dea54cab55db91df34a385ab8a4",
                        "typeString": "literal_string \"http://stashblox.com/tokens/\""
                      },
                      "value": "http://stashblox.com/tokens/"
                    },
                    "src": "360:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "360:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "437:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "437:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 23,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3239,
                      "src": "418:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "418:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "418:30:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "185:91:0",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:0:0"
            },
            "scope": 30,
            "src": "281:174:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 31,
        "src": "133:325:0"
      }
    ],
    "src": "45:414:0"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/StashBlox.sol",
    "exportedSymbols": {
      "StashBlox": [
        30
      ]
    },
    "id": 31,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:0"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Callable.sol",
        "file": "./lib/Callable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 31,
        "sourceUnit": 960,
        "src": "70:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol",
        "file": "./lib/Withdrawable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 31,
        "sourceUnit": 3542,
        "src": "99:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Callable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 959,
              "src": "155:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Callable_$959",
                "typeString": "contract Callable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "155:8:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3541,
              "src": "165:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$3541",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "165:12:0"
          }
        ],
        "contractDependencies": [
          149,
          161,
          211,
          234,
          263,
          959,
          1580,
          1733,
          1805,
          2034,
          2194,
          2715,
          3155,
          3253,
          3339,
          3449,
          3541,
          4104
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 30,
        "linearizedBaseContracts": [
          30,
          3541,
          959,
          2034,
          3339,
          2194,
          2715,
          3155,
          3449,
          3253,
          1580,
          1733,
          4104,
          161,
          1805,
          263,
          234,
          149,
          211
        ],
        "name": "StashBlox",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "296:159:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "306:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1664_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "callbackAutoExecuteMaxAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1655,
                      "src": "306:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3530",
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "348:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "src": "306:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "306:44:0"
                },
                {
                  "expression": {
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 17,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "360:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$1664_storage",
                          "typeString": "struct Data.Config storage ref"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "baseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1657,
                      "src": "360:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "687474703a2f2f7374617368626c6f782e636f6d2f746f6b656e732f",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "378:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_699ad49e673d0ba571e0814a1cc2e9c5b4688dea54cab55db91df34a385ab8a4",
                        "typeString": "literal_string \"http://stashblox.com/tokens/\""
                      },
                      "value": "http://stashblox.com/tokens/"
                    },
                    "src": "360:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "360:48:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "437:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "437:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 23,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3239,
                      "src": "418:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "418:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "418:30:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "185:91:0",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:0:0"
            },
            "scope": 30,
            "src": "281:174:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 31,
        "src": "133:325:0"
      }
    ],
    "src": "45:414:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-21T21:50:16.080Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptCallback(uint256)": {
        "details": "Accept a callback",
        "params": {
          "callbackId": "callback proposition ID"
        }
      },
      "approveCallback(uint256)": {
        "details": "Approve a callback",
        "params": {
          "callbackId": "callback proposition ID"
        }
      },
      "approveHolder(uint256,address)": {
        "details": "Function to approve holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "averageAge(address,uint256)": {
        "details": "Function to get the average age of the token for the given address.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID"
        },
        "returns": {
          "_0": "average age in seconds"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "constructor": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "deposit(address)": {
        "details": "Function to make an ETH deposit that can be used to pay token transfer .",
        "params": {
          "to": "recipent address"
        }
      },
      "executeCallback(uint256,uint256)": {
        "details": "Accept a callback. Caller need to recall the function to continue the callback until completed.",
        "params": {
          "callbackId": "callback proposition ID",
          "maxCall": "maximal call to excute"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isLockedAddress(address)": {
        "details": "Function to check if an address is lockec.",
        "params": {
          "addr": "The address to check"
        }
      },
      "isLockedToken(uint256)": {
        "details": "Function to check if a token is locked.",
        "params": {
          "id": "The token ID"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "lockAddress(address)": {
        "details": "Function to lock an address.",
        "params": {
          "addr": "The address to lock"
        }
      },
      "lockToken(uint256,uint256)": {
        "details": "Function to lock a token.",
        "params": {
          "id": "The token ID"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "proposeCallback(uint256,uint256,uint256,address[],uint256)": {
        "details": "Propose to buy the whole supply of a token. The proposer must hold minHoldingForCallback% of the total supply. StashBlox must approve the price with acceptCallback();",
        "params": {
          "callees": "list of calless. Empty list means all holders.",
          "price": "proposed price",
          "tokenId": "Token ID"
        }
      },
      "refuseCallback(uint256)": {
        "details": "Refuse a callback if the price is not enough.",
        "params": {
          "callbackId": "callback proposition ID"
        }
      },
      "revokeHolder(uint256,address)": {
        "details": "Function to revoke holder for a private token.",
        "params": {
          "holder": "The authorized address",
          "id": "the token id"
        }
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setCallbackAutoExecuteMaxAddresses(uint256)": {
        "details": "Maximum addresses to execute automatically the callback when is accepted.",
        "params": {
          "newMax": "new maximum"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        },
        "returns": {
          "_0": "transfer price"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlockAddress(address)": {
        "details": "Function to unlock an address.",
        "params": {
          "addr": "The address to unlock"
        }
      },
      "unlockToken(uint256,uint256)": {
        "details": "Function to unlock a token.",
        "params": {
          "id": "The token ID"
        }
      },
      "updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to update a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be updated",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "uri(uint256)": {
        "params": {
          "id": "Token ID"
        },
        "returns": {
          "_0": "URI string"
        }
      },
      "withdraw(address,uint256)": {
        "details": "Function to withdraw ETH from the contract. TODO: Add permission ??",
        "params": {
          "amount": "amount to withdraw",
          "to": "recipent address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "isTrustedForwarder(address)": {
        "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}