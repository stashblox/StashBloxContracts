{
  "contractName": "Withdrawable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(address)\":{\"details\":\"Function to make an ETH deposit that can be used to pay token transfer .\",\"params\":{\"to\":\"recipent address\"}},\"withdraw(address,uint256)\":{\"details\":\"Function to withdraw ETH from the contract. TODO: Add permission ??\",\"params\":{\"amount\":\"amount to withdraw\",\"to\":\"recipent address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol\":\"Withdrawable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol\":{\"keccak256\":\"0xb78e06f3ed306304c9666310dc32b269aa645a8b08662fb38ffa00a5e468f10c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://10dc07702c90e1606f8c878ccc7a09b40ad342212eaa2822c22c4c777da3cce8\",\"dweb:/ipfs/QmeUiy8ekHdBRXSLWtwPrMeECwFduDawPoHL5UbNt2pBSS\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol\":{\"keccak256\":\"0x2ce961629fd471636e8ee0ec8b49f886ea3f87040c32b25a5127d86dcaec7170\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://39940f34eedb8b2b863e6ec04135a06741b89cbb56a3023f53d485a21ba9cf3a\",\"dweb:/ipfs/Qma6MytPKRcjZKYQJXDDd7H6otgeo1FizwHFAj9Q1sCtp9\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061069b806100206000396000f3fe6080604052600436106100595760003560e01c80632ed42bf7146100955780633cacd7d614610139578063414ed0ce1461018c578063ed70554d1461021e578063f340fa011461029c578063f3fef3a3146102c457610090565b3661009057336000908152600d602052604090206001015461007b90346102fd565b336000908152600d6020526040902060010155005b600080fd5b3480156100a157600080fd5b506100aa61035e565b6040518084815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b838110156100fc5781810151838201526020016100e4565b50505050905090810190601f1680156101295780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561014557600080fd5b5061016c6004803603602081101561015c57600080fd5b50356001600160a01b0316610403565b604080519315158452911515602084015282820152519081900360600190f35b34801561019857600080fd5b506101b6600480360360208110156101af57600080fd5b5035610429565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561022a57600080fd5b506102486004803603602081101561024157600080fd5b503561049c565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b6102c2600480360360208110156102b257600080fd5b50356001600160a01b03166104f8565b005b3480156102d057600080fd5b506102c2600480360360408110156102e757600080fd5b506001600160a01b03813516906020013561053d565b600082820183811015610357576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156103ea5780601f106103bf576101008083540402835291602001916103ea565b820191906000526020600020905b8154815290600101906020018083116103cd57829003601f168201915b505050600c90930154919250506001600160a01b031683565b600d602052600090815260409020805460019091015460ff808316926101009004169083565b600f6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b0381166000908152600d602052604090206001015461051e90346102fd565b6001600160a01b039091166000908152600d6020526040902060010155565b6001600160a01b0382166000908152600d60205260409020600101548111156105a4576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d80600081146105ef576040519150601f19603f3d011682016040523d82523d6000602084013e6105f4565b606091505b505090508061063e576040805162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015290519081900360640190fd5b506001600160a01b039091166000908152600d60205260409020600101805491909103905556fea2646970667358221220f5320807ba1066fdf135b299c80b3addb6033b5e22330718c8088d1373ac548964736f6c63430007010033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80632ed42bf7146100955780633cacd7d614610139578063414ed0ce1461018c578063ed70554d1461021e578063f340fa011461029c578063f3fef3a3146102c457610090565b3661009057336000908152600d602052604090206001015461007b90346102fd565b336000908152600d6020526040902060010155005b600080fd5b3480156100a157600080fd5b506100aa61035e565b6040518084815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b838110156100fc5781810151838201526020016100e4565b50505050905090810190601f1680156101295780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561014557600080fd5b5061016c6004803603602081101561015c57600080fd5b50356001600160a01b0316610403565b604080519315158452911515602084015282820152519081900360600190f35b34801561019857600080fd5b506101b6600480360360208110156101af57600080fd5b5035610429565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561022a57600080fd5b506102486004803603602081101561024157600080fd5b503561049c565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b6102c2600480360360208110156102b257600080fd5b50356001600160a01b03166104f8565b005b3480156102d057600080fd5b506102c2600480360360408110156102e757600080fd5b506001600160a01b03813516906020013561053d565b600082820183811015610357576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156103ea5780601f106103bf576101008083540402835291602001916103ea565b820191906000526020600020905b8154815290600101906020018083116103cd57829003601f168201915b505050600c90930154919250506001600160a01b031683565b600d602052600090815260409020805460019091015460ff808316926101009004169083565b600f6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b0381166000908152600d602052604090206001015461051e90346102fd565b6001600160a01b039091166000908152600d6020526040902060010155565b6001600160a01b0382166000908152600d60205260409020600101548111156105a4576040805162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d80600081146105ef576040519150601f19603f3d011682016040523d82523d6000602084013e6105f4565b606091505b505090508061063e576040805162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b604482015290519081900360640190fd5b506001600160a01b039091166000908152600d60205260409020600101805491909103905556fea2646970667358221220f5320807ba1066fdf135b299c80b3addb6033b5e22330718c8088d1373ac548964736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "124:1157:16:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "124:1157:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:10;1226:18;;;;:6;:18;;;;;:29;;;:44;;1260:9;1226:33;:44::i;:::-;1201:10;1194:18;;;;:6;:18;;;;;:29;;:76;124:1157;;;;;2016:22:8;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2016:22:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2044:39:8;-1:-1:-1;;;;;2044:39:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2136:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2136:47:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2136:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2089:41;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2089:41:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2089:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;879:123:16;;;;;;;;;;;;;;;;-1:-1:-1;879:123:16;-1:-1:-1;;;;;879:123:16;;:::i;:::-;;459:279;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;459:279:16;;;;;;;;:::i;867:176:18:-;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:1;867:176;-1:-1:-1;;;867:176:18:o;2016:22:8:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;2016:22:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2016:22:8;;;;;;;-1:-1:-1;;;;;;;2016:22:8;;:::o;2044:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2136:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2136:47:8;;;;-1:-1:-1;;;2136:47:8;;;;;-1:-1:-1;;;2136:47:8;;;;;-1:-1:-1;;;2136:47:8;;;;;-1:-1:-1;;;2136:47:8;;;;;-1:-1:-1;;;2136:47:8;;;;;:::o;2089:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2089:41:8;;;;-1:-1:-1;;;2089:41:8;;;;;-1:-1:-1;;;2089:41:8;;;;:::o;879:123:16:-;-1:-1:-1;;;;;959:10:16;;;;;;:6;:10;;;;;:21;;;:36;;985:9;959:25;:36::i;:::-;-1:-1:-1;;;;;935:10:16;;;;;;;:6;:10;;;;;:21;;:60;879:123::o;459:279::-;-1:-1:-1;;;;;532:10:16;;;;;;:6;:10;;;;;:21;;;:31;-1:-1:-1;532:31:16;524:64;;;;;-1:-1:-1;;;524:64:16;;;;;;;;;;;;-1:-1:-1;;;524:64:16;;;;;;;;;;;;;;;617:26;;599:12;;-1:-1:-1;;;;;617:7:16;;;632:6;;599:12;617:26;599:12;617:26;632:6;617:7;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:45;;;661:7;653:37;;;;;-1:-1:-1;;;653:37:16;;;;;;;;;;;;-1:-1:-1;;;653:37:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;;700:10:16;;;;;;;:6;:10;;;;;:21;;:31;;;;;;;;459:279::o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport \"../utils/SafeMath.sol\";\nimport './Data.sol';\n\ncontract Withdrawable is Data {\n\n    using SafeMath for uint256;\n\n\n    /****************************\n    EXTERNAL FUNCTIONS\n    *****************************/\n\n\n    /**\n     * @dev Function to withdraw ETH from the contract. TODO: Add permission ??\n     * @param to recipent address\n     * @param amount amount to withdraw\n     */\n    function withdraw(address to, uint256 amount) external {\n        require(_users[to].ETHBalance >= amount, \"Insufficient balance\");\n        (bool success, ) = to.call{value: amount}(\"\");\n        require(success, \"Withdrawal failed\");\n        _users[to].ETHBalance -= amount;\n    }\n\n    /**\n     * @dev Function to make an ETH deposit that can be used to pay token transfer .\n     * @param to recipent address\n     */\n    function deposit(address to) external payable {\n        _users[to].ETHBalance = _users[to].ETHBalance.add(msg.value);\n    }\n\n    /**\n     * @dev Receive Ether Function:this is the function that is executed on plain Ether transfers (e.g. via .send() or .transfer()).\n     */\n    receive() external payable {\n        _users[msg.sender].ETHBalance = _users[msg.sender].ETHBalance.add(msg.value);\n    }\n\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol",
    "exportedSymbols": {
      "Withdrawable": [
        3436
      ]
    },
    "id": 3437,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3346,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:16"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol",
        "file": "../utils/SafeMath.sol",
        "id": 3347,
        "nodeType": "ImportDirective",
        "scope": 3437,
        "sourceUnit": 3680,
        "src": "70:31:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol",
        "file": "./Data.sol",
        "id": 3348,
        "nodeType": "ImportDirective",
        "scope": 3437,
        "sourceUnit": 1701,
        "src": "102:20:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3349,
              "name": "Data",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1700,
              "src": "149:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Data_$1700",
                "typeString": "contract Data"
              }
            },
            "id": 3350,
            "nodeType": "InheritanceSpecifier",
            "src": "149:4:16"
          }
        ],
        "contractDependencies": [
          1700
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3436,
        "linearizedBaseContracts": [
          3436,
          1700
        ],
        "name": "Withdrawable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3353,
            "libraryName": {
              "id": 3351,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3679,
              "src": "167:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3679",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "161:27:16",
            "typeName": {
              "id": 3352,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 3392,
              "nodeType": "Block",
              "src": "514:224:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3362,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "532:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                                "typeString": "mapping(address => struct Data.User storage ref)"
                              }
                            },
                            "id": 3364,
                            "indexExpression": {
                              "id": 3363,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3356,
                              "src": "539:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "532:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$1594_storage",
                              "typeString": "struct Data.User storage ref"
                            }
                          },
                          "id": 3365,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ETHBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1586,
                          "src": "532:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3366,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "557:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "532:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 3368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "565:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 3361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "524:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "524:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3370,
                  "nodeType": "ExpressionStatement",
                  "src": "524:64:16"
                },
                {
                  "assignments": [
                    3372,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3372,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 3392,
                      "src": "599:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3371,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "599:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3379,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 3377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "640:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 3373,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3356,
                          "src": "617:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "617:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 3376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 3375,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "632:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "617:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "617:26:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "598:45:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3381,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3372,
                        "src": "661:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5769746864726177616c206661696c6564",
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "670:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
                          "typeString": "literal_string \"Withdrawal failed\""
                        },
                        "value": "Withdrawal failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
                          "typeString": "literal_string \"Withdrawal failed\""
                        }
                      ],
                      "id": 3380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "653:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "653:37:16"
                },
                {
                  "expression": {
                    "id": 3390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3385,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "700:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                            "typeString": "mapping(address => struct Data.User storage ref)"
                          }
                        },
                        "id": 3387,
                        "indexExpression": {
                          "id": 3386,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3356,
                          "src": "707:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "700:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1594_storage",
                          "typeString": "struct Data.User storage ref"
                        }
                      },
                      "id": 3388,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ETHBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "700:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 3389,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3358,
                      "src": "725:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "700:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3391,
                  "nodeType": "ExpressionStatement",
                  "src": "700:31:16"
                }
              ]
            },
            "documentation": {
              "id": 3354,
              "nodeType": "StructuredDocumentation",
              "src": "289:165:16",
              "text": " @dev Function to withdraw ETH from the contract. TODO: Add permission ??\n @param to recipent address\n @param amount amount to withdraw"
            },
            "functionSelector": "f3fef3a3",
            "id": 3393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3356,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "477:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3358,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "489:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "476:28:16"
            },
            "returnParameters": {
              "id": 3360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:16"
            },
            "scope": 3436,
            "src": "459:279:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3413,
              "nodeType": "Block",
              "src": "925:77:16",
              "statements": [
                {
                  "expression": {
                    "id": 3411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3399,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "935:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                            "typeString": "mapping(address => struct Data.User storage ref)"
                          }
                        },
                        "id": 3401,
                        "indexExpression": {
                          "id": 3400,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3396,
                          "src": "942:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "935:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1594_storage",
                          "typeString": "struct Data.User storage ref"
                        }
                      },
                      "id": 3402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ETHBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "935:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3408,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "985:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "985:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3403,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "959:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                                "typeString": "mapping(address => struct Data.User storage ref)"
                              }
                            },
                            "id": 3405,
                            "indexExpression": {
                              "id": 3404,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3396,
                              "src": "966:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "959:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$1594_storage",
                              "typeString": "struct Data.User storage ref"
                            }
                          },
                          "id": 3406,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ETHBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1586,
                          "src": "959:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3512,
                        "src": "959:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "959:36:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "935:60:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3412,
                  "nodeType": "ExpressionStatement",
                  "src": "935:60:16"
                }
              ]
            },
            "documentation": {
              "id": 3394,
              "nodeType": "StructuredDocumentation",
              "src": "744:130:16",
              "text": " @dev Function to make an ETH deposit that can be used to pay token transfer .\n @param to recipent address"
            },
            "functionSelector": "f340fa01",
            "id": 3414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3396,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3414,
                  "src": "896:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "895:12:16"
            },
            "returnParameters": {
              "id": 3398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:0:16"
            },
            "scope": 3436,
            "src": "879:123:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3434,
              "nodeType": "Block",
              "src": "1184:93:16",
              "statements": [
                {
                  "expression": {
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3418,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "1194:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                            "typeString": "mapping(address => struct Data.User storage ref)"
                          }
                        },
                        "id": 3421,
                        "indexExpression": {
                          "expression": {
                            "id": 3419,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1201:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1201:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1194:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1594_storage",
                          "typeString": "struct Data.User storage ref"
                        }
                      },
                      "id": 3422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ETHBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "1194:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3429,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1260:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1260:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3423,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "1226:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                                "typeString": "mapping(address => struct Data.User storage ref)"
                              }
                            },
                            "id": 3426,
                            "indexExpression": {
                              "expression": {
                                "id": 3424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1233:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1233:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1226:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$1594_storage",
                              "typeString": "struct Data.User storage ref"
                            }
                          },
                          "id": 3427,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ETHBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1586,
                          "src": "1226:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3512,
                        "src": "1226:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1226:44:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1194:76:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:76:16"
                }
              ]
            },
            "documentation": {
              "id": 3415,
              "nodeType": "StructuredDocumentation",
              "src": "1008:144:16",
              "text": " @dev Receive Ether Function:this is the function that is executed on plain Ether transfers (e.g. via .send() or .transfer())."
            },
            "id": 3435,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:16"
            },
            "returnParameters": {
              "id": 3417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:0:16"
            },
            "scope": 3436,
            "src": "1157:120:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3437,
        "src": "124:1157:16"
      }
    ],
    "src": "45:1237:16"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Withdrawable.sol",
    "exportedSymbols": {
      "Withdrawable": [
        3436
      ]
    },
    "id": 3437,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3346,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:16"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol",
        "file": "../utils/SafeMath.sol",
        "id": 3347,
        "nodeType": "ImportDirective",
        "scope": 3437,
        "sourceUnit": 3680,
        "src": "70:31:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol",
        "file": "./Data.sol",
        "id": 3348,
        "nodeType": "ImportDirective",
        "scope": 3437,
        "sourceUnit": 1701,
        "src": "102:20:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3349,
              "name": "Data",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1700,
              "src": "149:4:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Data_$1700",
                "typeString": "contract Data"
              }
            },
            "id": 3350,
            "nodeType": "InheritanceSpecifier",
            "src": "149:4:16"
          }
        ],
        "contractDependencies": [
          1700
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3436,
        "linearizedBaseContracts": [
          3436,
          1700
        ],
        "name": "Withdrawable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3353,
            "libraryName": {
              "id": 3351,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3679,
              "src": "167:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3679",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "161:27:16",
            "typeName": {
              "id": 3352,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 3392,
              "nodeType": "Block",
              "src": "514:224:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3362,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "532:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                                "typeString": "mapping(address => struct Data.User storage ref)"
                              }
                            },
                            "id": 3364,
                            "indexExpression": {
                              "id": 3363,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3356,
                              "src": "539:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "532:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$1594_storage",
                              "typeString": "struct Data.User storage ref"
                            }
                          },
                          "id": 3365,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ETHBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1586,
                          "src": "532:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3366,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "557:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "532:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 3368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "565:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 3361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "524:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "524:64:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3370,
                  "nodeType": "ExpressionStatement",
                  "src": "524:64:16"
                },
                {
                  "assignments": [
                    3372,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3372,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 3392,
                      "src": "599:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3371,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "599:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3379,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 3377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "640:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 3373,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3356,
                          "src": "617:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "617:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 3376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 3375,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "632:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "617:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "617:26:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "598:45:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3381,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3372,
                        "src": "661:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5769746864726177616c206661696c6564",
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "670:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
                          "typeString": "literal_string \"Withdrawal failed\""
                        },
                        "value": "Withdrawal failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
                          "typeString": "literal_string \"Withdrawal failed\""
                        }
                      ],
                      "id": 3380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "653:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:37:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "653:37:16"
                },
                {
                  "expression": {
                    "id": 3390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3385,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "700:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                            "typeString": "mapping(address => struct Data.User storage ref)"
                          }
                        },
                        "id": 3387,
                        "indexExpression": {
                          "id": 3386,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3356,
                          "src": "707:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "700:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1594_storage",
                          "typeString": "struct Data.User storage ref"
                        }
                      },
                      "id": 3388,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ETHBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "700:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 3389,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3358,
                      "src": "725:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "700:31:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3391,
                  "nodeType": "ExpressionStatement",
                  "src": "700:31:16"
                }
              ]
            },
            "documentation": {
              "id": 3354,
              "nodeType": "StructuredDocumentation",
              "src": "289:165:16",
              "text": " @dev Function to withdraw ETH from the contract. TODO: Add permission ??\n @param to recipent address\n @param amount amount to withdraw"
            },
            "functionSelector": "f3fef3a3",
            "id": 3393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3356,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "477:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3358,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3393,
                  "src": "489:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "476:28:16"
            },
            "returnParameters": {
              "id": 3360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:16"
            },
            "scope": 3436,
            "src": "459:279:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3413,
              "nodeType": "Block",
              "src": "925:77:16",
              "statements": [
                {
                  "expression": {
                    "id": 3411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3399,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "935:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                            "typeString": "mapping(address => struct Data.User storage ref)"
                          }
                        },
                        "id": 3401,
                        "indexExpression": {
                          "id": 3400,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3396,
                          "src": "942:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "935:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1594_storage",
                          "typeString": "struct Data.User storage ref"
                        }
                      },
                      "id": 3402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ETHBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "935:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3408,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "985:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "985:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3403,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "959:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                                "typeString": "mapping(address => struct Data.User storage ref)"
                              }
                            },
                            "id": 3405,
                            "indexExpression": {
                              "id": 3404,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3396,
                              "src": "966:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "959:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$1594_storage",
                              "typeString": "struct Data.User storage ref"
                            }
                          },
                          "id": 3406,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ETHBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1586,
                          "src": "959:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3512,
                        "src": "959:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "959:36:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "935:60:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3412,
                  "nodeType": "ExpressionStatement",
                  "src": "935:60:16"
                }
              ]
            },
            "documentation": {
              "id": 3394,
              "nodeType": "StructuredDocumentation",
              "src": "744:130:16",
              "text": " @dev Function to make an ETH deposit that can be used to pay token transfer .\n @param to recipent address"
            },
            "functionSelector": "f340fa01",
            "id": 3414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3396,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3414,
                  "src": "896:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "895:12:16"
            },
            "returnParameters": {
              "id": 3398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "925:0:16"
            },
            "scope": 3436,
            "src": "879:123:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3434,
              "nodeType": "Block",
              "src": "1184:93:16",
              "statements": [
                {
                  "expression": {
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3418,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1691,
                          "src": "1194:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                            "typeString": "mapping(address => struct Data.User storage ref)"
                          }
                        },
                        "id": 3421,
                        "indexExpression": {
                          "expression": {
                            "id": 3419,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1201:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1201:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1194:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1594_storage",
                          "typeString": "struct Data.User storage ref"
                        }
                      },
                      "id": 3422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ETHBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1586,
                      "src": "1194:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3429,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1260:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1260:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3423,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "1226:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1594_storage_$",
                                "typeString": "mapping(address => struct Data.User storage ref)"
                              }
                            },
                            "id": 3426,
                            "indexExpression": {
                              "expression": {
                                "id": 3424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1233:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1233:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1226:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$1594_storage",
                              "typeString": "struct Data.User storage ref"
                            }
                          },
                          "id": 3427,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ETHBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1586,
                          "src": "1226:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3512,
                        "src": "1226:33:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1226:44:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1194:76:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:76:16"
                }
              ]
            },
            "documentation": {
              "id": 3415,
              "nodeType": "StructuredDocumentation",
              "src": "1008:144:16",
              "text": " @dev Receive Ether Function:this is the function that is executed on plain Ether transfers (e.g. via .send() or .transfer())."
            },
            "id": 3435,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:16"
            },
            "returnParameters": {
              "id": 3417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:0:16"
            },
            "scope": 3436,
            "src": "1157:120:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3437,
        "src": "124:1157:16"
      }
    ],
    "src": "45:1237:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-21T19:56:31.225Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(address)": {
        "details": "Function to make an ETH deposit that can be used to pay token transfer .",
        "params": {
          "to": "recipent address"
        }
      },
      "withdraw(address,uint256)": {
        "details": "Function to withdraw ETH from the contract. TODO: Add permission ??",
        "params": {
          "amount": "amount to withdraw",
          "to": "recipent address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}