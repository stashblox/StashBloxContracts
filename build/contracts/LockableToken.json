{
  "contractName": "LockableToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_CallbackId",
          "type": "uint256"
        }
      ],
      "name": "CallbackUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "lockToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        }
      ],
      "name": "unlockToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "isLockedToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "lockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "unlockAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isLockedAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_CallbackId\",\"type\":\"uint256\"}],\"name\":\"CallbackUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isLockedAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isLockedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"lockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"unlockAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"}],\"name\":\"unlockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isLockedAddress(address)\":{\"details\":\"Function to check if an address is lockec.\",\"params\":{\"addr\":\"The address to check\"}},\"isLockedToken(uint256)\":{\"details\":\"Function to check if a token is locked.\",\"params\":{\"id\":\"The token ID\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"lockAddress(address)\":{\"details\":\"Function to lock an address.\",\"params\":{\"addr\":\"The address to lock\"}},\"lockToken(uint256,uint256)\":{\"details\":\"Function to lock a token.\",\"params\":{\"id\":\"The token ID\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockAddress(address)\":{\"details\":\"Function to unlock an address.\",\"params\":{\"addr\":\"The address to unlock\"}},\"unlockToken(uint256,uint256)\":{\"details\":\"Function to unlock a token.\",\"params\":{\"id\":\"The token ID\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/LockableToken.sol\":\"LockableToken\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/LockableToken.sol\":{\"keccak256\":\"0x7de0bd884aaadb3b4fccaf010b8cd42558131f1cb190248b0f93438cb9bca956\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3d14e73c06772129be01e526c986549150b22172b0b83cf9cbac3d4402d71c3e\",\"dweb:/ipfs/QmRCXmtYg26PC8tSwR3aHep1Fg4EqYponEYKHJT64GoBdv\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/MaintenableToken.sol\":{\"keccak256\":\"0xfaaae5cf2a6a6533dbf0c26fb34f7e6f3540aae947bc4c0018d3c3591af9764e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://38bde9b516e7f6cee60d0a989e9e8f187cc66aad082483dd0fca5791c751e4d0\",\"dweb:/ipfs/QmPy2iJ1uHaAFzKLFqVqoyyMSpthrXhsQNJVPxyUJiw9PM\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/MintableToken.sol\":{\"keccak256\":\"0x45047ceca0bb50356767dc5fa96cea13f632fcac266eb28caf7e43dc3059a0bb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a12d64856632979bed9956750a79855658ed31d33ef18e7b75dbef530c6996a1\",\"dweb:/ipfs/QmQYQGTgujPsKAkW1ghNipQrvMWL2YUyM6zz27fYWiXrwr\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/ProxyableToken.sol\":{\"keccak256\":\"0x0317db67e54ce9300ab8f8e916dd8ebf24bb5ade4966a67d4fabe2abf8b1fb98\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35d27862bb423c76a870d16be85985f96044d3bcb75c44d3404200cbe0b12462\",\"dweb:/ipfs/QmQRn3fboeWwZGCsfyibQ3Eqs1VwQseGu4Qm4hNffm72wJ\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/StashBloxData.sol\":{\"keccak256\":\"0xe7fabb615f0aee4015b45827eb88e4d9b41179acbac239e8c7adb44fe009c6f4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e5df935ffe3a17af3753641cadee312c8a9d9089ce23bc4c6c2de15601573cc9\",\"dweb:/ipfs/QmR3o3miPVJ5HJEid59ysAm5QnBKD4CqRcS1nKncTDfhCN\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/TaxableTransferToken.sol\":{\"keccak256\":\"0x47d87eaa34b5f807680956136953fcf676b77a217351352785efb83320ebc3ae\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7d2af09485a71862b47c207cd410cc96928c99ad37e256de7b97d8ac2659746e\",\"dweb:/ipfs/QmUDykorhFnqrhhMXvy2VW2r6uBZWPiUvoUDGW7dVMjzQU\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x517971e6ee990c8860d942733aef74f29cee2f626918d05adb2bff1f2f52a64b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d42cfe1e8030c6bbde1bf6c8299079df13e7fb26a25d48560c745627891fccf7\",\"dweb:/ipfs/QmQMTZg1wvbt2Szqt7gaxAqodgJ3VAme182JnNMHGLNF6h\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ERC165/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ERC173/ERC173.sol\":{\"keccak256\":\"0xff14452a537de715151983fee6391b5730c8af0cf07c5160dd10fb1fd5e8f25e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1364f4d7ec07d3036d764ce1178a67cc394050e7f4eaa86b5770f66ddc065aa\",\"dweb:/ipfs/QmP2Ryxz2Leadpy6Y483iWU6Dg6UiuCXmY5y8xrqq9E4j5\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ERC173/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "105:2099:1:-:0;;;;;;;;;;;;-1:-1:-1;626:30:13;645:10;626:18;:30::i;:::-;105:2099:1;;1383:225:13;-1:-1:-1;;;;;1456:22:13;;1448:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:6;;1536:38;;-1:-1:-1;;;;;1536:38:13;;;;1557:6;;1536:38;;1557:6;;1536:38;1584:6;:17;;-1:-1:-1;;;;;;1584:17:13;-1:-1:-1;;;;;1584:17:13;;;;;;;;;;1383:225::o;105:2099:1:-;;;;;;;",
  "deployedSourceMap": "105:2099:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1742:234:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1742:234:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1147:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1147:255:8;-1:-1:-1;;;;;;1147:255:8;;:::i;:::-;;;;;;;;;;;;;;;;;;6357:1231;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6357:1231:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6357:1231:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6357:1231:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6357:1231:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6357:1231:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6357:1231:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6357:1231:8;;;;;;;;;;-1:-1:-1;6357:1231:8;;-1:-1:-1;6357:1231:8;-1:-1:-1;6357:1231:8;:::i;:::-;;1699:22:6;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:99:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1664:99:1;-1:-1:-1;;;;;1664:99:1;;:::i;1727:39:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1727:39:6;-1:-1:-1;;;;;1727:39:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1819:47:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1819:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;430:151:4;;-1:-1:-1;430:151:4;;-1:-1:-1;;;;430:151:4:i;1720:823:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1720:823:2;;;;;;;;-1:-1:-1;1720:823:2;;-1:-1:-1;;;;1720:823:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1720:823:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1720:823:2;;;;;;;;-1:-1:-1;1720:823:2;;-1:-1:-1;;;;;1720:823:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1720:823:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1720:823:2;;-1:-1:-1;;1720:823:2;;;-1:-1:-1;;;1720:823:2;;;;;;;;;;-1:-1:-1;;;;;1720:823:2;;:::i;2300:631:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2300:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2300:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2300:631:8;;;;;;;;-1:-1:-1;2300:631:8;;-1:-1:-1;;;;;2300:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2300:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2300:631:8;;-1:-1:-1;2300:631:8;;-1:-1:-1;;;;;2300:631:8:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1442:132:2;;;;;;-1:-1:-1;;;;;1442:132:2;;:::i;716:119:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;716:119:3;-1:-1:-1;;;;;716:119:3;;:::i;972:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;972:117:3;-1:-1:-1;;;;;972:117:3;;:::i;761:144:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;761:144:2;;;;;;-1:-1:-1;;;;;761:144:2;;:::i;739:86:13:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;739:86:13;;;;;;;;;;;;;;3409:296:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3409:296:8;;;;;;;;;;:::i;1224:129:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1224:129:1;;;;;;;:::i;1869:102::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1869:102:1;-1:-1:-1;;;;;1869:102:1;;:::i;1007:125::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1007:125:1;;;;;;;:::i;1457:105::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1457:105:1;;:::i;1235:116:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1235:116:3;-1:-1:-1;;;;;1235:116:3;;:::i;5526:1038::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5526:1038:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5526:1038:3;;;;;;;;-1:-1:-1;5526:1038:3;;-1:-1:-1;;;;5526:1038:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5526:1038:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5526:1038:3;;;;;;;;-1:-1:-1;5526:1038:3;;-1:-1:-1;;;;;5526:1038:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5526:1038:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5526:1038:3;;-1:-1:-1;;5526:1038:3;;;-1:-1:-1;;;5526:1038:3;;;;;;;;;;-1:-1:-1;;;;;5526:1038:3;;:::i;2088:113:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2088:113:1;-1:-1:-1;;;;;2088:113:1;;:::i;3927:159:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3927:159:7;;;;;;;;;;;;;:::i;1074:142:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1074:142:2;;;;;;-1:-1:-1;;;;;1074:142:2;;:::i;3986:203:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3986:203:8;;;;;;;;;;:::i;1772:41:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1772:41:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1772:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;4743:1025:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4743:1025:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4743:1025:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4743:1025:8;;;;;;;;;;-1:-1:-1;4743:1025:8;;-1:-1:-1;4743:1025:8;-1:-1:-1;4743:1025:8;:::i;1166:116:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1166:116:13;-1:-1:-1;;;;;1166:116:13;;:::i;6791:645:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6791:645:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6791:645:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6791:645:3;;;;;;;;-1:-1:-1;6791:645:3;;-1:-1:-1;;;;;6791:645:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6791:645:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6791:645:3;;-1:-1:-1;6791:645:3;;-1:-1:-1;;;;;6791:645:3:i;1742:234:8:-;1820:7;-1:-1:-1;;;;;1847:21:8;;1839:77;;;;-1:-1:-1;;;1839:77:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1933:11:8;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1933:28:8;;;;:19;;:28;;;;;:36;1742:234;;;;;:::o;1147:255::-;1227:4;-1:-1:-1;;;;;;1245:42:8;;-1:-1:-1;;;1245:42:8;;:99;;-1:-1:-1;;;;;;;1301:43:8;;-1:-1:-1;;;1301:43:8;1245:99;1241:135;;;-1:-1:-1;1363:4:8;1356:11;;1241:135;-1:-1:-1;1390:5:8;1147:255;;;;:::o;6357:1231::-;6588:27;;;6580:86;;;;-1:-1:-1;;;6580:86:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6684:16:8;;6676:69;;;;-1:-1:-1;;;6676:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6776:18:8;;6784:10;6776:18;;:64;;;6798:34;6815:4;6821:10;6798:16;:34::i;:::-;:42;;6836:4;6798:42;6776:64;6755:166;;;;-1:-1:-1;;;6755:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6932:19;6966:1;6954:9;:13;:51;;-1:-1:-1;;;;;6982:12:8;;;;;;:6;:12;;;;;:23;;;6954:51;;;6970:9;6954:51;6932:73;;7020:9;7015:147;7035:14;;;7015:147;;;7098:53;7110:4;7116:2;7120:3;;7124:1;7120:6;;;;;;;;;;;;;7128;;7135:1;7128:9;;;;;;;;;;;;;7139:11;7098;:53::i;:::-;7084:67;;;;7051:3;;7015:147;;;;7209:2;-1:-1:-1;;;;;7177:48:8;7203:4;-1:-1:-1;;;;;7177:48:8;7191:10;-1:-1:-1;;;;;7177:48:8;;7213:3;;7218:6;;7177:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7177:48:8;;;;;;;;;;;;;;;;;-1:-1:-1;7177:48:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7177:48:8;;;;;;;;-1:-1:-1;7177:48:8;;-1:-1:-1;;;;;;;7177:48:8;7236:76;7272:10;7284:4;7290:2;7294:3;;7236:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7236:76:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7299:6:8;;-1:-1:-1;7299:6:8;;;;7236:76;;;7299:6;;7236:76;7299:6;7236:76;;;;;;;;;-1:-1:-1;;7236:76:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7307:4:8;;-1:-1:-1;7307:4:8;;;;7236:76;;7307:4;;;;7236:76;;;;;;;;;-1:-1:-1;7236:35:8;;-1:-1:-1;;;7236:76:8:i;:::-;7339:1;7327:9;:13;:32;;;;;7358:1;7344:11;:15;7327:32;7323:259;;;7394:39;;7376:12;;7394:10;;7417:11;;7376:12;7394:39;7376:12;7394:39;7417:11;7394:10;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7375:58;;;7455:7;7447:36;;;;;-1:-1:-1;;;7447:36:8;;;;;;;;;;;;-1:-1:-1;;;7447:36:8;;;;;;;;;;;;;;;7323:259;;;;7504:9;7500:82;;-1:-1:-1;;;;;7534:12:8;;;;;;:6;:12;;;;;:23;;:37;;;7500:82;6357:1231;;;;;;;;;:::o;1699:22:6:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1699:22:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1664:99:1:-;952:10:13;:8;:10::i;:::-;944:55;;;;;-1:-1:-1;;;944:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;944:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;1728:12:1::1;;::::0;;;:6:::1;:12;::::0;;;;:28;;-1:-1:-1;;1728:28:1::1;;;::::0;;1664:99::o;1727:39:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1819:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1819:47:6;;;;-1:-1:-1;;;1819:47:6;;;;;-1:-1:-1;;;1819:47:6;;;;;-1:-1:-1;;;1819:47:6;;;;;-1:-1:-1;;;1819:47:6;;;;;-1:-1:-1;;;1819:47:6;;;;;:::o;430:151:4:-;952:10:13;:8;:10::i;:::-;944:55;;;;;-1:-1:-1;;;944:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;944:55:13;;;;;;;;;;;;;;;527:47:4::1;:30;560:14:::0;527:47:::1;;:::i;:::-;;430:151:::0;:::o;1720:823:2:-;2155:2;552:28;565:2;569:10;552:12;:28::i;:::-;544:64;;;;;-1:-1:-1;;;544:64:2;;;;;;;;;;;;-1:-1:-1;;;544:64:2;;;;;;;;;;;;;;;2198:1:::1;2177:11:::0;;;:7:::1;:11;::::0;;;;:18;2169:48:::1;;;::::0;;-1:-1:-1;;;2169:48:2;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2169:48:2;;;;;;;;;;;;;::::1;;2228:262;2238:2;2260:12;2292:15;2327:14;2361:24;2405:21;2446:9;2475:14;2228:9;:262::i;:::-;2506:30;::::0;;;;;;;2519:2;;2506:30:::1;::::0;;;;;::::1;::::0;;::::1;1720:823:::0;;;;;;;;;:::o;2300:631:8:-;2449:16;2508:3;:10;2489:8;:15;:29;2481:90;;;;-1:-1:-1;;;2481:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2582:30;2629:8;:15;2615:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2615:30:8;;2582:63;;2661:9;2656:238;2680:8;:15;2676:1;:19;2656:238;;;2747:1;-1:-1:-1;;;;;2724:25:8;:8;2733:1;2724:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2724:25:8;;;2716:90;;;;-1:-1:-1;;;2716:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2839:7;:15;2847:3;2851:1;2847:6;;;;;;;;;;;;;;2839:15;;;;;;;;;;;:23;;:36;2863:8;2872:1;2863:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2839:36:8;-1:-1:-1;;;;;2839:36:8;;;;;;;;;;;;:44;;;2820:13;2834:1;2820:16;;;;;;;;;;;;;;;;;:63;2697:3;;2656:238;;;-1:-1:-1;2911:13:8;2300:631;-1:-1:-1;;;2300:631:8:o;1442:132:2:-;1517:4;1540:27;1553:2;1557:9;1540:12;:27::i;:::-;1533:34;1442:132;-1:-1:-1;;;1442:132:2:o;716:119:3:-;952:10:13;:8;:10::i;:::-;944:55;;;;;-1:-1:-1;;;944:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;944:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;792:17:3::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;792:36:3::1;824:4;792:36;::::0;;716:119::o;972:117::-;952:10:13;:8;:10::i;:::-;944:55;;;;;-1:-1:-1;;;944:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;944:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;1045:17:3::1;1077:5;1045:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;1045:37:3::1;::::0;;972:117::o;761:144:2:-;952:10:13;:8;:10::i;:::-;944:55;;;;;-1:-1:-1;;;944:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;944:55:13;;;;;;;;;;;;;;;849:11:2::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;849:30:2;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;849:49:2::1;894:4;849:49;::::0;;761:144::o;739:86:13:-;812:6;;-1:-1:-1;;;;;812:6:13;739:86;:::o;3409:296:8:-;3505:10;-1:-1:-1;;;;;3505:22:8;;;;3497:79;;;;-1:-1:-1;;;3497:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3605:10;3586:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;3586:40:8;;;;;;;;;;;;:51;;-1:-1:-1;;3586:51:8;;;;;;;;;;3652:46;;;;;;;3586:40;;3605:10;3652:46;;;;;;;;;;;3409:296;;:::o;1224:129:1:-;1302:2;552:28:2;565:2;569:10;552:12;:28::i;:::-;544:64;;;;;-1:-1:-1;;;544:64:2;;;;;;;;;;;;-1:-1:-1;;;544:64:2;;;;;;;;;;;;;;;1316:30:1::1;1329:2;1333:12;1316;:30::i;:::-;1224:129:::0;;;:::o;1869:102::-;952:10:13;:8;:10::i;:::-;944:55;;;;;-1:-1:-1;;;944:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;944:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;1935:12:1::1;1959:5;1935:12:::0;;;:6:::1;:12;::::0;;;;:29;;-1:-1:-1;;1935:29:1::1;::::0;;1869:102::o;1007:125::-;1083:2;552:28:2;565:2;569:10;552:12;:28::i;:::-;544:64;;;;;-1:-1:-1;;;544:64:2;;;;;;;;;;;;-1:-1:-1;;;544:64:2;;;;;;;;;;;;;;;1097:28:1::1;1108:2;1112:12;1097:10;:28::i;1457:105::-:0;1515:4;1537:18;1552:2;1537:14;:18::i;1235:116:3:-;1298:4;1321:23;1334:9;1321:12;:23::i;5526:1038::-;513:24;526:10;513:12;:24::i;:::-;505:60;;;;;-1:-1:-1;;;505:60:3;;;;;;;;;;;;-1:-1:-1;;;505:60:3;;;;;;;;;;;;;;;6103:378:::1;6116:9;6148:2;6173:6;6202:8;6233:12;6268:15;6306:14;6343:24;6390:21;6434:9;6466:14;6103:12;:378::i;:::-;6496:61;::::0;;;;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;6496:61:3;::::1;::::0;6531:1:::1;::::0;6511:10:::1;::::0;6496:61:::1;::::0;;;;;;;;;::::1;5526:1038:::0;;;;;;;;;;;:::o;2088:113:1:-;2150:4;2172:22;2189:4;2172:16;:22::i;3927:159:7:-;4017:7;4043:36;4060:7;4069:2;4073:5;4043:16;:36::i;:::-;4036:43;3927:159;-1:-1:-1;;;;3927:159:7:o;1074:142:2:-;952:10:13;:8;:10::i;:::-;944:55;;;;;-1:-1:-1;;;944:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;944:55:13;;;;;;;;;;;;;;;1204:5:2::1;1159:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1159:30:2;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1159:50:2::1;::::0;;1074:142::o;3986:203:8:-;4077:4;4100:41;4123:7;4132:8;4100:22;:41::i;:::-;:82;;;-1:-1:-1;;;;;;;4145:27:8;;;;;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3986:203::o;1772:41:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1772:41:6;;;;-1:-1:-1;;;1772:41:6;;;;;-1:-1:-1;;;1772:41:6;;;;:::o;4743:1025:8:-;-1:-1:-1;;;;;4945:16:8;;4937:69;;;;-1:-1:-1;;;4937:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5037:18:8;;5045:10;5037:18;;:64;;;5059:34;5076:4;5082:10;5059:16;:34::i;:::-;:42;;5097:4;5059:42;5037:64;5016:166;;;;-1:-1:-1;;;5016:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5193:19;5227:1;5215:9;:13;:51;;-1:-1:-1;;;;;5243:12:8;;;;;;:6;:12;;;;;:23;;;5215:51;;;5231:9;5215:51;5193:73;;5304:45;5316:4;5322:2;5326;5330:5;5337:11;5304;:45::i;:::-;5290:11;:59;5276:73;;5398:2;-1:-1:-1;;;;;5365:47:8;5392:4;-1:-1:-1;;;;;5365:47:8;5380:10;-1:-1:-1;;;;;5365:47:8;;5402:2;5406:5;5365:47;;;;;;;;;;;;;;;;;;;;;;;;5423:69;5454:10;5466:4;5472:2;5476;5480:5;5487:4;;5423:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5423:30:8;;-1:-1:-1;;;5423:69:8:i;:::-;5519:1;5507:9;:13;:32;;;;;5538:1;5524:11;:15;5507:32;5503:259;;;5574:39;;5556:12;;5574:10;;5597:11;;5556:12;5574:39;5556:12;5574:39;5597:11;5574:10;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5555:58;;;5635:7;5627:36;;;;;-1:-1:-1;;;5627:36:8;;;;;;;;;;;;-1:-1:-1;;;5627:36:8;;;;;;;;;;;;;;;5503:259;;;;5684:9;5680:82;;-1:-1:-1;;;;;5714:12:8;;;;;;:6;:12;;;;;:23;;:37;;;5680:82;4743:1025;;;;;;;:::o;1166:116:13:-;952:10;:8;:10::i;:::-;944:55;;;;;-1:-1:-1;;;944:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;944:55:13;;;;;;;;;;;;;;;1247:28:::1;1266:8;1247:18;:28::i;:::-;1166:116:::0;:::o;6791:645:3:-;513:24;526:10;513:12;:24::i;:::-;505:60;;;;;-1:-1:-1;;;505:60:3;;;;;;;;;;;;-1:-1:-1;;;505:60:3;;;;;;;;;;;;;;;6992:1:::1;6971:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;7027:14;:21;7013:3;:10;:35;6971:77;6963:107;;;::::0;;-1:-1:-1;;;6963:107:3;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6963:107:3;;;;;;;;;;;;;::::1;;7086:9;7081:349;7105:3;:10;7101:1;:14;7081:349;;;7136:42;7148:2;7152:3;7156:1;7152:6;;;;;;;;;;;;;;7160:14;7175:1;7160:17;;;;;;;;;;;;;;7136:11;:42::i;:::-;7301:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;7360:6;;-1:-1:-1;;;;;7301:25:3;;::::1;::::0;;7213:10:::1;::::0;7198:221:::1;::::0;7360:3;;7364:1;;7360:6;::::1;;;;;;;;;;;7400:7;:11;7408:2;7400:11;;;;;;;;;;;:18;;;7198:221;;;;;;;;;;;;;;;;;;;;;;;;7117:3;;7081:349;;;;6791:645:::0;;;:::o;2862:831:7:-;2975:12;3073:33;3090:4;3096:2;3100:5;3073:16;:33::i;:::-;3066:40;;3139:4;3124:11;:19;;3116:57;;;;;-1:-1:-1;;;3116:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;3220:68;;;;;;;;;;;-1:-1:-1;;;3220:68:7;;;;;;;;-1:-1:-1;3220:11:7;;;:7;:11;;;;;-1:-1:-1;;;;;3220:25:7;;;;:19;;:25;;;;;;;:33;:68;;3258:5;;3220:37;:68::i;:::-;3184:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3184:25:7;;;;:19;;:25;;;;;:104;3299:28;3313:2;3192;3321:5;3299:13;:28::i;:::-;3343:9;3338:327;3362:11;;;;:7;:11;;;;;:26;;:33;3358:37;;3338:327;;;3416:21;3440:11;;;:7;:11;;;;;:26;;:29;;3467:1;;3440:29;;;;;;;;;;;;;;;;;;3518:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;3440:29:7;;;;-1:-1:-1;3518:36:7;3555:1;;3518:39;;;;;;;;;;;;;;;;;-1:-1:-1;3607:47:7;3648:5;3608:34;:4;3518:39;3608:8;:34::i;:::-;3607:40;;:47::i;:::-;-1:-1:-1;;;;;3571:21:7;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;3397:3:7;3338:327;;;;2862:831;;;;;;;:::o;8116:558:8:-;8359:15;:2;-1:-1:-1;;;;;8359:13:8;;:15::i;:::-;8356:312;;;8517:52;;;-1:-1:-1;;;;;8415:154:8;;8432:2;-1:-1:-1;;;;;8415:43:8;;8459:8;8469:4;8475:3;8480:6;8488:4;8415:78;;;;;;;;;;;;;-1:-1:-1;;;;;8415:78:8;;;;;;-1:-1:-1;;;;;8415:78:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8415:78:8;-1:-1:-1;;;;;;8415:154:8;;8390:267;;;;-1:-1:-1;;;8390:267:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8116:558;;;;;;:::o;1691:93:13:-;1771:6;;-1:-1:-1;;;;;1771:6:13;1757:10;:20;;1691:93::o;331:162:2:-;407:4;430:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;430:30:2;;;;:19;;:30;;;;;:42;;;;;;:56;;;476:10;:8;:10::i;1496:1359:3:-;1915:23;1957:9;1952:120;1976:24;:31;1972:1;:35;1952:120;;;2045:24;2070:1;2045:27;;;;;;;;;;;;;;2026:46;;;;2009:3;;;;;1952:120;;;;2115:1;2091:14;:21;:25;:75;;;;-1:-1:-1;2120:46:3;2091:75;:119;;;;;2186:15;2205:5;2186:24;2091:119;:168;;;;;2254:5;2230:21;:29;2091:168;2083:214;;;;;-1:-1:-1;;;2083:214:3;;;;;;;;;;;;-1:-1:-1;;;2083:214:3;;;;;;;;;;;;;;;2308:11;;;;:7;:11;;;;;;;;:24;;;:39;;;2394:18;;2357:34;;;;:55;;;;2457:18;;;;-1:-1:-1;2422:32:3;;:53;2485:74;;;;;;;2522:15;2485:74;;2539:18;;;;2485:74;;;;:30;;;;:74;;2473:1;2485:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2569:11:3;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;2622:11:3;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;2695:11:3;;;;:7;:11;;;;;;:33;;;:57;;;;2762:21;;;;:33;;-1:-1:-1;;;;2762:33:3;-1:-1:-1;;;2762:33:3;;;;;;;;;;;-1:-1:-1;;;;;;2805:43:3;-1:-1:-1;;;;;2805:43:3;;;;;;;;;;-1:-1:-1;;;;1496:1359:3:o;311:153:1:-;407:5;386:11;;;:7;:11;;;;;;;;;:18;;:26;;-1:-1:-1;;;;386:26:1;;;427:30;;;;;;;394:2;;427:30;;;;;;;;;311:153;;:::o;155:150::-;228:11;;;;:7;:11;;;;;;;;;:18;;:25;;-1:-1:-1;;;;228:25:1;-1:-1:-1;;;228:25:1;;;268:30;;;;;;;236:2;;268:30;;;;;;;;;155:150;;:::o;470:107::-;529:4;552:11;;;:7;:11;;;;;:18;;;-1:-1:-1;;;552:18:1;;;;;470:107::o;327:137:3:-;-1:-1:-1;;;;;414:17:3;;391:4;414:17;;;:6;:17;;;;;:29;;;;:43;;;447:10;:8;:10::i;2862:1165::-;3444:11;;;;:7;:11;;;;;:18;:23;:37;;;;;3480:1;3471:6;:10;3444:37;3436:67;;;;;-1:-1:-1;;;3436:67:3;;;;;;;;;;;;-1:-1:-1;;;3436:67:3;;;;;;;;;;;;;;;3535:6;3514:7;:11;3522:2;3514:11;;;;;;;;;;;:18;;:27;;;;3574:8;3551:7;:11;3559:2;3551:11;;;;;;;;;;;:20;;:31;;;;3638:4;3592:7;:11;3600:2;3592:11;;;;;;;;;;;:19;;:31;3612:10;-1:-1:-1;;;;;3592:31:3;-1:-1:-1;;;;;3592:31:3;;;;;;;;;;;;:43;;;:50;;;;;;;;;;;;;;;;;;3696:4;3652:7;:11;3660:2;3652:11;;;;;;;;;;;:19;;:30;3672:9;-1:-1:-1;;;;;3652:30:3;-1:-1:-1;;;;;3652:30:3;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;3711:262;3721:2;3743:12;3775:15;3810:14;3844:24;3888:21;3929:9;3958:14;3711:9;:262::i;:::-;3984:36;3998:9;4009:2;4013:6;3984:13;:36::i;:::-;2862:1165;;;;;;;;;;;:::o;583:114:1:-;-1:-1:-1;;;;;669:12:1;646:4;669:12;;;:6;:12;;;;;:21;;;;;;;583:114::o;1455:1318:7:-;1548:7;1659:11;;;:7;:11;;;;;:30;;:37;1548:7;;1619:15;;-1:-1:-1;;1659:41:7;1645:835;1730:19;1752:11;;;:7;:11;;;;;:30;;:33;;1783:1;;1752:33;;;;;;;;;;;;;;;;;;:36;;1802:12;1817:11;;;:7;:11;;;;;:30;;:33;;1752:36;;-1:-1:-1;1802:12:7;;1848:1;;1817:33;;;;;;;;;;;;;;;;1851:1;1817:36;;;;;;;;;1867:19;1905:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1905:28:7;;;;:19;;:28;;;;;:37;;;1817:36;;-1:-1:-1;1867:19:7;1905:52;-1:-1:-1;1901:569:7;;2007:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2007:28:7;;;;:19;;:28;;;;;:37;;;1991:66;;2051:5;;1992:53;;:10;;:14;:53::i;1991:66::-;1977:80;-1:-1:-1;2079:16:7;2075:37;;-1:-1:-1;2111:1:7;2075:37;2143:34;2171:5;2144:21;:11;2160:4;2144:15;:21::i;:::-;2143:27;;:34::i;:::-;2130:47;;;;2195:5;;;;;1901:569;2253:40;2287:5;2254:27;:10;2269:11;2254:14;:27::i;2253:40::-;2239:54;-1:-1:-1;2315:16:7;2311:37;;-1:-1:-1;2347:1:7;2311:37;2379:11;;-1:-1:-1;2379:11:7;;2421:34;2449:5;2422:21;:11;2438:4;2422:15;:21::i;2421:34::-;2408:47;;;;-1:-1:-1;;;;;1710:3:7;1645:835;;;-1:-1:-1;2537:11:7;;;;:7;:11;;;;;:20;;;2519:39;;:9;;2533:2;:24;2519:13;:39::i;:::-;2608:17;2639:11;;;:7;:11;;;;;:32;;;2507:51;;-1:-1:-1;2608:17:7;2628:56;;2678:5;;2629:43;;:5;;:9;:43::i;2628:56::-;2716:11;;;;:7;:11;;;;;:34;;;2608:76;;-1:-1:-1;2702:64:7;;2716:49;;2608:76;2716:38;:49::i;:::-;2702:9;;:13;:64::i;:::-;2695:71;1455:1318;-1:-1:-1;;;;;;;1455:1318:7:o;587:516:4:-;677:4;;693:382;717:37;713:1;:41;693:382;;;824:1;779:30;810:1;779:33;;;;;;;;;-1:-1:-1;;;;;779:33:4;:47;775:290;;846:27;890:30;921:1;890:33;;;;;;;;;954:30;;;-1:-1:-1;;;954:30:4;;-1:-1:-1;;;;;954:30:4;;;;;;;;;890:33;;;;-1:-1:-1;946:51:4;;;;890:33;;954:21;;:30;;;;;;;;;;;;;;890:33;954:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;954:30:4;-1:-1:-1;;;;;946:51:4;;942:109;;;1028:4;1021:11;;;;;;942:109;775:290;;756:3;;693:382;;;-1:-1:-1;1091:5:4;;587:516;-1:-1:-1;;;587:516:4:o;7594::8:-;7812:15;:2;-1:-1:-1;;;;;7812:13:8;;:15::i;:::-;7809:295;;;7963:47;;;-1:-1:-1;;;;;7868:142:8;;7885:2;-1:-1:-1;;;;;7868:38:8;;7907:8;7917:4;7923:2;7927:5;7934:4;7868:71;;;;;;;;;;;;;-1:-1:-1;;;;;7868:71:8;;;;;;-1:-1:-1;;;;;7868:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7868:71:8;-1:-1:-1;;;;;;7868:142:8;;7843:250;;;;-1:-1:-1;;;7843:250:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1383:225:13;-1:-1:-1;;;;;1456:22:13;;1448:73;;;;-1:-1:-1;;;1448:73:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:6;;1536:38;;-1:-1:-1;;;;;1536:38:13;;;;1557:6;;1536:38;;1557:6;;1536:38;1584:6;:17;;-1:-1:-1;;;;;;1584:17:13;-1:-1:-1;;;;;1584:17:13;;;;;;;;;;1383:225::o;4033:766:3:-;4137:11;;;;:7;:11;;;;;:22;;:25;;4124:668;;4137:11;:25;;;;;;;;;;;;;;;;4215:11;;;:7;:11;;;;;;;:18;;4137:25;4256:20;;;4124:668;;;;;;;4359:34;;;;4124:668;;4418:32;;;;4124:668;;;;4475:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;4137:25:3;;;;4185:7;;4215:18;;4256:20;;4299:12;;4124:668;;;;;;4475:30;4137:25;4475:33;;;;;;;;;;;;;;4509:1;4475:36;;;;;;;;;4124:668;;4557:11;;;;:7;:11;;;;;;;;;:26;;4124:668;;;;;;;;;;;;;;;;;4557:26;;4124:668;;4557:26;4124:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4124:668:3;;;;;;;;;;;;;;;;-1:-1:-1;;;4606:11:3;;;;:7;:11;;;;;;;;;:36;;4124:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;4606:36:3;-1:-1:-1;4124:668:3;;4606:36;4124:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4665:11:3;;;;:7;:11;;;;;:33;;;;4721:21;;;;;4665:33;;-1:-1:-1;4721:21:3;-1:-1:-1;;;4721:21:3;;;;-1:-1:-1;;;;;;4765:26:3;4124:12;:668::i;1877:187:16:-;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:16;;;1877:187::o;306:1109:7:-;403:11;;;;:7;:11;;;;;:21;;;-1:-1:-1;;;403:21:7;;;;402:22;;:67;;-1:-1:-1;428:11:7;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;428:30:7;;;;:19;;:30;;;;;:41;;;;;;;;402:67;394:100;;;;;-1:-1:-1;;;394:100:7;;;;;;;;;;;;-1:-1:-1;;;394:100:7;;;;;;;;;;;;;;;505:18;526:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;526:30:7;;;;:19;;:30;;;;;:38;:49;;569:5;526:42;:49::i;:::-;590:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;590:30:7;;;;:19;;:30;;;;;:38;505:70;;-1:-1:-1;586:761:7;;655:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;655:30:7;;;;:19;;:30;;;;;:39;;;;;;;;650:225;;-1:-1:-1;;;;;714:17:7;;;;;;:6;:17;;;;;;;;:24;;:33;;;;;;;;;;;;;;;;;;765:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;765:38:7;;;;;821:30;;;;:19;;;;:30;;650:225;889:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;889:30:7;;;;:19;;:30;;;;;931:15;889:39;;;;:57;586:761;;;1057:20;1100:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1100:30:7;;;;:19;;:30;;;;;:39;;;1080:60;;:15;;:19;:60::i;:::-;1154:19;1177:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1177:30:7;;;;:19;;:30;;;;;:38;1057:83;;-1:-1:-1;1154:19:7;1176:74;;1239:10;;1177:56;;1057:83;1177:42;:56::i;1176:74::-;1265:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1265:30:7;;;;:19;;:30;;;;;1307:15;:29;;;;1265:39;;;;:71;-1:-1:-1;;586:761:7;1357:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1357:30:7;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;306:1109:7:o;2304:459:16:-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:16;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:130;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;590:797:15:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:15;;;1329:51;-1:-1:-1;;590:797:15:o;1307:134:16:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;867:176::-;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:16;;;;;;;;;;;;;;;;;;;;;;;;;;;3969:338;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:16:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.7.1;\n\nimport './MaintenableToken.sol';\n\ncontract LockableToken is MaintenableToken {\n\n    function _lockToken(uint256 id, uint256 documentHash) internal {\n        _tokens[id].locked = true;\n        emit TokenUpdated(id, documentHash);\n    }\n\n    function _unlockToken(uint256 id, uint256 documentHash) internal {\n        _tokens[id].locked = false;\n        emit TokenUpdated(id, documentHash);\n    }\n\n    function _isLockedToken(uint256 id) internal view returns (bool) {\n        return _tokens[id].locked;\n    }\n\n    function _isLockedAddress(address addr) internal view returns (bool) {\n        return _users[addr].isLocked;\n    }\n\n    function _isLockedMove(address from, address to, uint256 id, uint256 value) internal view returns (bool) {\n        return _isLockedToken(id) || _isLockedAddress(from) || _isLockedAddress(to) || (value == 0);\n    }\n\n\n    /**\n     * @dev Function to lock a token.\n     * @param id The token ID\n     */\n    function lockToken(uint256 id, uint256 documentHash) external onlyMaintener(id) {\n        _lockToken(id, documentHash);\n    }\n\n    /**\n     * @dev Function to unlock a token.\n     * @param id The token ID\n     */\n    function unlockToken(uint256 id, uint256 documentHash) external onlyMaintener(id) {\n        _unlockToken(id, documentHash);\n    }\n\n    /**\n     * @dev Function to check if a token is locked.\n     * @param id The token ID\n     */\n    function isLockedToken(uint256 id) external view returns (bool){\n        return _isLockedToken(id);\n    }\n\n    /**\n     * @dev Function to lock an address.\n     * @param addr The address to lock\n     */\n    function lockAddress(address addr) external onlyOwner {\n        _users[addr].isLocked = true;\n    }\n\n    /**\n     * @dev Function to unlock an address.\n     * @param addr The address to unlock\n     */\n    function unlockAddress(address addr) external onlyOwner {\n        _users[addr].isLocked = false;\n    }\n\n    /**\n     * @dev Function to check if an address is lockec.\n     * @param addr The address to check\n     */\n    function isLockedAddress(address addr) external view returns (bool){\n        return _isLockedAddress(addr);\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/LockableToken.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/LockableToken.sol",
    "exportedSymbols": {
      "LockableToken": [
        886
      ]
    },
    "id": 887,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 693,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:1"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/MaintenableToken.sol",
        "file": "./MaintenableToken.sol",
        "id": 694,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 1044,
        "src": "71:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 695,
              "name": "MaintenableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1043,
              "src": "131:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MaintenableToken_$1043",
                "typeString": "contract MaintenableToken"
              }
            },
            "id": 696,
            "nodeType": "InheritanceSpecifier",
            "src": "131:16:1"
          }
        ],
        "contractDependencies": [
          1043,
          1564,
          1655,
          1946,
          2419,
          3007,
          3126,
          3188,
          3280,
          3303
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 886,
        "linearizedBaseContracts": [
          886,
          1043,
          1564,
          3007,
          1655,
          3280,
          3303,
          2419,
          1946,
          3126,
          3188
        ],
        "name": "LockableToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "218:87:1",
              "statements": [
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 703,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1931,
                          "src": "228:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1886_storage_$",
                            "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                          }
                        },
                        "id": 705,
                        "indexExpression": {
                          "id": 704,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "236:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "228:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1886_storage",
                          "typeString": "struct StashBloxData.Token storage ref"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1867,
                      "src": "228:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "249:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "228:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "228:25:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 711,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "281:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 712,
                        "name": "documentHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "285:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 710,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1945,
                      "src": "268:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "268:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "EmitStatement",
                  "src": "263:35:1"
                }
              ]
            },
            "id": 716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "175:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "187:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "174:34:1"
            },
            "returnParameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "218:0:1"
            },
            "scope": 886,
            "src": "155:150:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
              "src": "376:88:1",
              "statements": [
                {
                  "expression": {
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 723,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1931,
                          "src": "386:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1886_storage_$",
                            "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                          }
                        },
                        "id": 725,
                        "indexExpression": {
                          "id": 724,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "394:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "386:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1886_storage",
                          "typeString": "struct StashBloxData.Token storage ref"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1867,
                      "src": "386:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "407:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "386:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "386:26:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 731,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "440:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 732,
                        "name": "documentHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "444:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 730,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1945,
                      "src": "427:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "427:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "EmitStatement",
                  "src": "422:35:1"
                }
              ]
            },
            "id": 736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unlockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "333:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 720,
                  "mutability": "mutable",
                  "name": "documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "345:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "332:34:1"
            },
            "returnParameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:1"
            },
            "scope": 886,
            "src": "311:153:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 748,
              "nodeType": "Block",
              "src": "535:42:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 743,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1931,
                        "src": "552:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1886_storage_$",
                          "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                        }
                      },
                      "id": 745,
                      "indexExpression": {
                        "id": 744,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "560:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "552:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$1886_storage",
                        "typeString": "struct StashBloxData.Token storage ref"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1867,
                    "src": "552:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 742,
                  "id": 747,
                  "nodeType": "Return",
                  "src": "545:25:1"
                }
              ]
            },
            "id": 749,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isLockedToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "494:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "493:12:1"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "529:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:6:1"
            },
            "scope": 886,
            "src": "470:107:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 761,
              "nodeType": "Block",
              "src": "652:45:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 756,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1927,
                        "src": "669:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1838_storage_$",
                          "typeString": "mapping(address => struct StashBloxData.User storage ref)"
                        }
                      },
                      "id": 758,
                      "indexExpression": {
                        "id": 757,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "676:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "669:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$1838_storage",
                        "typeString": "struct StashBloxData.User storage ref"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isLocked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1832,
                    "src": "669:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 755,
                  "id": 760,
                  "nodeType": "Return",
                  "src": "662:28:1"
                }
              ]
            },
            "id": 762,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isLockedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "609:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "608:14:1"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "646:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "645:6:1"
            },
            "scope": 886,
            "src": "583:114:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "808:108:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 776,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 768,
                              "src": "840:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 775,
                            "name": "_isLockedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "825:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "825:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 779,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 764,
                              "src": "864:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 778,
                            "name": "_isLockedAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "847:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "847:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "825:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 783,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "890:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 782,
                          "name": "_isLockedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "873:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "873:20:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "825:68:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 786,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 770,
                            "src": "898:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "907:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "898:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 789,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "897:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "825:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 774,
                  "id": 791,
                  "nodeType": "Return",
                  "src": "818:91:1"
                }
              ]
            },
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isLockedMove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "726:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "740:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "752:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "764:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "725:53:1"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "802:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:6:1"
            },
            "scope": 886,
            "src": "703:213:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 809,
              "nodeType": "Block",
              "src": "1087:45:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 805,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 796,
                        "src": "1108:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 806,
                        "name": "documentHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "1112:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 804,
                      "name": "_lockToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 716,
                      "src": "1097:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:28:1"
                }
              ]
            },
            "documentation": {
              "id": 794,
              "nodeType": "StructuredDocumentation",
              "src": "923:79:1",
              "text": " @dev Function to lock a token.\n @param id The token ID"
            },
            "functionSelector": "baa34110",
            "id": 810,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 801,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 796,
                    "src": "1083:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 802,
                "modifierName": {
                  "id": 800,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 931,
                  "src": "1069:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1069:17:1"
              }
            ],
            "name": "lockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "1026:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "1038:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:34:1"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:1"
            },
            "scope": 886,
            "src": "1007:125:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "1306:47:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 822,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "1329:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 823,
                        "name": "documentHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "1333:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 821,
                      "name": "_unlockToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "1316:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:30:1"
                }
              ]
            },
            "documentation": {
              "id": 811,
              "nodeType": "StructuredDocumentation",
              "src": "1138:81:1",
              "text": " @dev Function to unlock a token.\n @param id The token ID"
            },
            "functionSelector": "aba7fe8a",
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 818,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 813,
                    "src": "1302:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 819,
                "modifierName": {
                  "id": 817,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 931,
                  "src": "1288:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1288:17:1"
              }
            ],
            "name": "unlockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "1245:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "1257:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:34:1"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:0:1"
            },
            "scope": 886,
            "src": "1224:129:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 839,
              "nodeType": "Block",
              "src": "1520:42:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 836,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "1552:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 835,
                      "name": "_isLockedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "1537:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1537:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 834,
                  "id": 838,
                  "nodeType": "Return",
                  "src": "1530:25:1"
                }
              ]
            },
            "documentation": {
              "id": 828,
              "nodeType": "StructuredDocumentation",
              "src": "1359:93:1",
              "text": " @dev Function to check if a token is locked.\n @param id The token ID"
            },
            "functionSelector": "bba75c83",
            "id": 840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLockedToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "1480:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:12:1"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "1515:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1514:6:1"
            },
            "scope": 886,
            "src": "1457:105:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 855,
              "nodeType": "Block",
              "src": "1718:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 848,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1927,
                          "src": "1728:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1838_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.User storage ref)"
                          }
                        },
                        "id": 850,
                        "indexExpression": {
                          "id": 849,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "1735:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1728:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1838_storage",
                          "typeString": "struct StashBloxData.User storage ref"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1832,
                      "src": "1728:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1752:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1728:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:28:1"
                }
              ]
            },
            "documentation": {
              "id": 841,
              "nodeType": "StructuredDocumentation",
              "src": "1568:91:1",
              "text": " @dev Function to lock an address.\n @param addr The address to lock"
            },
            "functionSelector": "34a90d02",
            "id": 856,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 846,
                "modifierName": {
                  "id": 845,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3227,
                  "src": "1708:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1708:9:1"
              }
            ],
            "name": "lockAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1685:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1684:14:1"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:1"
            },
            "scope": 886,
            "src": "1664:99:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "1925:46:1",
              "statements": [
                {
                  "expression": {
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 864,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1927,
                          "src": "1935:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1838_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.User storage ref)"
                          }
                        },
                        "id": 866,
                        "indexExpression": {
                          "id": 865,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 859,
                          "src": "1942:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1935:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1838_storage",
                          "typeString": "struct StashBloxData.User storage ref"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1832,
                      "src": "1935:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1959:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1935:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:29:1"
                }
              ]
            },
            "documentation": {
              "id": 857,
              "nodeType": "StructuredDocumentation",
              "src": "1769:95:1",
              "text": " @dev Function to unlock an address.\n @param addr The address to unlock"
            },
            "functionSelector": "b7eb5e0a",
            "id": 872,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 862,
                "modifierName": {
                  "id": 861,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3227,
                  "src": "1915:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1915:9:1"
              }
            ],
            "name": "unlockAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "1892:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:14:1"
            },
            "returnParameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1925:0:1"
            },
            "scope": 886,
            "src": "1869:102:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "2155:46:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 881,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "2189:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 880,
                      "name": "_isLockedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "2172:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 879,
                  "id": 883,
                  "nodeType": "Return",
                  "src": "2165:29:1"
                }
              ]
            },
            "documentation": {
              "id": 873,
              "nodeType": "StructuredDocumentation",
              "src": "1977:106:1",
              "text": " @dev Function to check if an address is lockec.\n @param addr The address to check"
            },
            "functionSelector": "cba54e60",
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLockedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "2113:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2112:14:1"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "2150:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2150:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2149:6:1"
            },
            "scope": 886,
            "src": "2088:113:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 887,
        "src": "105:2099:1"
      }
    ],
    "src": "46:2159:1"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/LockableToken.sol",
    "exportedSymbols": {
      "LockableToken": [
        886
      ]
    },
    "id": 887,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 693,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:1"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/MaintenableToken.sol",
        "file": "./MaintenableToken.sol",
        "id": 694,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 1044,
        "src": "71:32:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 695,
              "name": "MaintenableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1043,
              "src": "131:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MaintenableToken_$1043",
                "typeString": "contract MaintenableToken"
              }
            },
            "id": 696,
            "nodeType": "InheritanceSpecifier",
            "src": "131:16:1"
          }
        ],
        "contractDependencies": [
          1043,
          1564,
          1655,
          1946,
          2419,
          3007,
          3126,
          3188,
          3280,
          3303
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 886,
        "linearizedBaseContracts": [
          886,
          1043,
          1564,
          3007,
          1655,
          3280,
          3303,
          2419,
          1946,
          3126,
          3188
        ],
        "name": "LockableToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "218:87:1",
              "statements": [
                {
                  "expression": {
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 703,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1931,
                          "src": "228:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1886_storage_$",
                            "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                          }
                        },
                        "id": 705,
                        "indexExpression": {
                          "id": 704,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "236:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "228:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1886_storage",
                          "typeString": "struct StashBloxData.Token storage ref"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1867,
                      "src": "228:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "249:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "228:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 709,
                  "nodeType": "ExpressionStatement",
                  "src": "228:25:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 711,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "281:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 712,
                        "name": "documentHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "285:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 710,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1945,
                      "src": "268:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "268:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "EmitStatement",
                  "src": "263:35:1"
                }
              ]
            },
            "id": 716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_lockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "175:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "175:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "187:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "174:34:1"
            },
            "returnParameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "218:0:1"
            },
            "scope": 886,
            "src": "155:150:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 735,
              "nodeType": "Block",
              "src": "376:88:1",
              "statements": [
                {
                  "expression": {
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 723,
                          "name": "_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1931,
                          "src": "386:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1886_storage_$",
                            "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                          }
                        },
                        "id": 725,
                        "indexExpression": {
                          "id": 724,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 718,
                          "src": "394:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "386:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$1886_storage",
                          "typeString": "struct StashBloxData.Token storage ref"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1867,
                      "src": "386:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "407:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "386:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "386:26:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 731,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "440:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 732,
                        "name": "documentHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "444:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 730,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1945,
                      "src": "427:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "427:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "EmitStatement",
                  "src": "422:35:1"
                }
              ]
            },
            "id": 736,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unlockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "333:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 720,
                  "mutability": "mutable",
                  "name": "documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "345:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "332:34:1"
            },
            "returnParameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:1"
            },
            "scope": 886,
            "src": "311:153:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 748,
              "nodeType": "Block",
              "src": "535:42:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 743,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1931,
                        "src": "552:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1886_storage_$",
                          "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                        }
                      },
                      "id": 745,
                      "indexExpression": {
                        "id": 744,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "560:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "552:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$1886_storage",
                        "typeString": "struct StashBloxData.Token storage ref"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1867,
                    "src": "552:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 742,
                  "id": 747,
                  "nodeType": "Return",
                  "src": "545:25:1"
                }
              ]
            },
            "id": 749,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isLockedToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "494:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "493:12:1"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "529:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:6:1"
            },
            "scope": 886,
            "src": "470:107:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 761,
              "nodeType": "Block",
              "src": "652:45:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 756,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1927,
                        "src": "669:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1838_storage_$",
                          "typeString": "mapping(address => struct StashBloxData.User storage ref)"
                        }
                      },
                      "id": 758,
                      "indexExpression": {
                        "id": 757,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 751,
                        "src": "676:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "669:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$1838_storage",
                        "typeString": "struct StashBloxData.User storage ref"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "isLocked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1832,
                    "src": "669:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 755,
                  "id": 760,
                  "nodeType": "Return",
                  "src": "662:28:1"
                }
              ]
            },
            "id": 762,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isLockedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "609:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "608:14:1"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 762,
                  "src": "646:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "645:6:1"
            },
            "scope": 886,
            "src": "583:114:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "808:108:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 776,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 768,
                              "src": "840:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 775,
                            "name": "_isLockedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "825:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "825:18:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 779,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 764,
                              "src": "864:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 778,
                            "name": "_isLockedAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 762,
                            "src": "847:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "847:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "825:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 783,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "890:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 782,
                          "name": "_isLockedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 762,
                          "src": "873:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "873:20:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "825:68:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 786,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 770,
                            "src": "898:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "907:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "898:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 789,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "897:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "825:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 774,
                  "id": 791,
                  "nodeType": "Return",
                  "src": "818:91:1"
                }
              ]
            },
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isLockedMove",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 764,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "726:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 766,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "740:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "752:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "752:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 770,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "764:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "725:53:1"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "802:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:6:1"
            },
            "scope": 886,
            "src": "703:213:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 809,
              "nodeType": "Block",
              "src": "1087:45:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 805,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 796,
                        "src": "1108:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 806,
                        "name": "documentHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "1112:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 804,
                      "name": "_lockToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 716,
                      "src": "1097:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:28:1"
                }
              ]
            },
            "documentation": {
              "id": 794,
              "nodeType": "StructuredDocumentation",
              "src": "923:79:1",
              "text": " @dev Function to lock a token.\n @param id The token ID"
            },
            "functionSelector": "baa34110",
            "id": 810,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 801,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 796,
                    "src": "1083:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 802,
                "modifierName": {
                  "id": 800,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 931,
                  "src": "1069:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1069:17:1"
              }
            ],
            "name": "lockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "1026:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 810,
                  "src": "1038:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1025:34:1"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:1"
            },
            "scope": 886,
            "src": "1007:125:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "1306:47:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 822,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 813,
                        "src": "1329:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 823,
                        "name": "documentHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "1333:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 821,
                      "name": "_unlockToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "1316:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:30:1"
                }
              ]
            },
            "documentation": {
              "id": 811,
              "nodeType": "StructuredDocumentation",
              "src": "1138:81:1",
              "text": " @dev Function to unlock a token.\n @param id The token ID"
            },
            "functionSelector": "aba7fe8a",
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 818,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 813,
                    "src": "1302:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 819,
                "modifierName": {
                  "id": 817,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 931,
                  "src": "1288:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1288:17:1"
              }
            ],
            "name": "unlockToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 813,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "1245:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "1257:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:34:1"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:0:1"
            },
            "scope": 886,
            "src": "1224:129:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 839,
              "nodeType": "Block",
              "src": "1520:42:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 836,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 830,
                        "src": "1552:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 835,
                      "name": "_isLockedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "1537:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1537:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 834,
                  "id": 838,
                  "nodeType": "Return",
                  "src": "1530:25:1"
                }
              ]
            },
            "documentation": {
              "id": 828,
              "nodeType": "StructuredDocumentation",
              "src": "1359:93:1",
              "text": " @dev Function to check if a token is locked.\n @param id The token ID"
            },
            "functionSelector": "bba75c83",
            "id": 840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLockedToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 830,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "1480:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:12:1"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "1515:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1514:6:1"
            },
            "scope": 886,
            "src": "1457:105:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 855,
              "nodeType": "Block",
              "src": "1718:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 848,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1927,
                          "src": "1728:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1838_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.User storage ref)"
                          }
                        },
                        "id": 850,
                        "indexExpression": {
                          "id": 849,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "1735:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1728:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1838_storage",
                          "typeString": "struct StashBloxData.User storage ref"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1832,
                      "src": "1728:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1752:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1728:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "1728:28:1"
                }
              ]
            },
            "documentation": {
              "id": 841,
              "nodeType": "StructuredDocumentation",
              "src": "1568:91:1",
              "text": " @dev Function to lock an address.\n @param addr The address to lock"
            },
            "functionSelector": "34a90d02",
            "id": 856,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 846,
                "modifierName": {
                  "id": 845,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3227,
                  "src": "1708:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1708:9:1"
              }
            ],
            "name": "lockAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "1685:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1684:14:1"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:1"
            },
            "scope": 886,
            "src": "1664:99:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "1925:46:1",
              "statements": [
                {
                  "expression": {
                    "id": 869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 864,
                          "name": "_users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1927,
                          "src": "1935:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1838_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.User storage ref)"
                          }
                        },
                        "id": 866,
                        "indexExpression": {
                          "id": 865,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 859,
                          "src": "1942:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1935:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$1838_storage",
                          "typeString": "struct StashBloxData.User storage ref"
                        }
                      },
                      "id": 867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1832,
                      "src": "1935:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1959:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1935:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 870,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:29:1"
                }
              ]
            },
            "documentation": {
              "id": 857,
              "nodeType": "StructuredDocumentation",
              "src": "1769:95:1",
              "text": " @dev Function to unlock an address.\n @param addr The address to unlock"
            },
            "functionSelector": "b7eb5e0a",
            "id": 872,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 862,
                "modifierName": {
                  "id": 861,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3227,
                  "src": "1915:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1915:9:1"
              }
            ],
            "name": "unlockAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "1892:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:14:1"
            },
            "returnParameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1925:0:1"
            },
            "scope": 886,
            "src": "1869:102:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "2155:46:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 881,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 875,
                        "src": "2189:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 880,
                      "name": "_isLockedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "2172:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 879,
                  "id": 883,
                  "nodeType": "Return",
                  "src": "2165:29:1"
                }
              ]
            },
            "documentation": {
              "id": 873,
              "nodeType": "StructuredDocumentation",
              "src": "1977:106:1",
              "text": " @dev Function to check if an address is lockec.\n @param addr The address to check"
            },
            "functionSelector": "cba54e60",
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isLockedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "2113:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2112:14:1"
            },
            "returnParameters": {
              "id": 879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "2150:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 877,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2150:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2149:6:1"
            },
            "scope": 886,
            "src": "2088:113:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 887,
        "src": "105:2099:1"
      }
    ],
    "src": "46:2159:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-20T14:32:33.167Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isLockedAddress(address)": {
        "details": "Function to check if an address is lockec.",
        "params": {
          "addr": "The address to check"
        }
      },
      "isLockedToken(uint256)": {
        "details": "Function to check if a token is locked.",
        "params": {
          "id": "The token ID"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "lockAddress(address)": {
        "details": "Function to lock an address.",
        "params": {
          "addr": "The address to lock"
        }
      },
      "lockToken(uint256,uint256)": {
        "details": "Function to lock a token.",
        "params": {
          "id": "The token ID"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlockAddress(address)": {
        "details": "Function to unlock an address.",
        "params": {
          "addr": "The address to unlock"
        }
      },
      "unlockToken(uint256,uint256)": {
        "details": "Function to unlock a token.",
        "params": {
          "id": "The token ID"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}