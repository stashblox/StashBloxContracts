{
  "contractName": "Maintenable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "averageAge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"averageAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"averageAge(address,uint256)\":{\"details\":\"Function to get the average age of the token for the given address.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\"},\"returns\":{\"_0\":\"average age in seconds\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"},\"returns\":{\"_0\":\"transfer price\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to update a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be updated\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"uri(uint256)\":{\"params\":{\"id\":\"Token ID\"},\"returns\":{\"_0\":\"URI string\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":\"Maintenable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Metadata.sol\":{\"keccak256\":\"0x121c132f1a15fafd91c187380702cb32d60beab1a4054670efc987e36bc2b70f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://425182c1ecd27456fc2f1c3fd82444b17a13f2e4e503bb3f7b973e83d2ceb1bb\",\"dweb:/ipfs/QmU54fpZCpdGtjUAbQkr4cYikCzKKQqjS3LPNQpYpJXiA8\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0x5dc5890c785dcc9b643865f204d6fa0a0586c22ee1ab3e782d4b1cd50055f440\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://55bd720c36892871232926d1faae17c715e6fce9cb232bc65ad7dcab5fa87cb9\",\"dweb:/ipfs/QmXoizxGSz2s1df7Snh6qNTqaN49YzgLEiS6Rw4g9Cbpzw\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol\":{\"keccak256\":\"0xedcc2daeee0376b8bee9faf3530afb63dafa077a5cf243b15b3dda3e7d9ba300\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://10f6d1c2483ba73a86d25e32e1377dbfa5abaa19f5c50990fac499261bbd72d1\",\"dweb:/ipfs/QmVuGRc9wurdvk9Nh87dxhPWKZTWwLqmXiUCPXGwijiMuB\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x89f566b2b45db160adbfb2fe8da9a65f2385cbbcf904f03c199dbc3d625c03fd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://261c4652ae1ca909a88839c2455653b486aae8cc248a2b4da6aa0f301d2fb398\",\"dweb:/ipfs/QmfRj76anEn31QfmBFAJmEEdx5YRa2ZWPY714ehNXe4pmD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0x0b0dc1431350b5690654b7d878a9ca8b8ad9a7ba4d55ba33e32dba069be555e8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://430dce8f25b8833da3091dfbe65fbb727db80c329f14fb8207fa93deb5b813e0\",\"dweb:/ipfs/QmS2bV9EpSdsCvVSM9u8TK6pV42F1dXgECN1e7wmashLqi\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/MultiToken.sol\":{\"keccak256\":\"0xd17b1983a01b5ddc16603ff48f564260989a24700e12778872635671cb19c3c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a48baa0a71f61ba4c647295db077b2903844483b81a94cfdbc17484b9db8a5a\",\"dweb:/ipfs/QmaRqYra8aZFzYny2PiY79MwfoP7DYA95bfpNDXVRkT6GL\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0xa9953cbb4805f942bcab17fade018307dca360f14ef033c571378cad38ca7e06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab2fada0b14f78abf8a8ec598ea91b2357a835a4817906ef5ce955e18ded420e\",\"dweb:/ipfs/QmfLkPFxfH5FRNqxzNEBcZ5c675zzjMqqkoLg44Qj7SeEY\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0x6e349cd9263193acda067d4b2fe7cebd1a0d169c7b4ab1fb38a664ecdb60065f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5eed5b309c557a2a496a87659ccbae4561ee0121326b30df10ea881fd71872bc\",\"dweb:/ipfs/QmeJRw3fSUAYb9roQpSh7KzpRwTpPcdW8bobg5qpFofFjF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x700249db0ed6aa2be4fc7675c9cdb5cdcc4e49abec52eefa58c2b02092784188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8babf975072c842269b5cb10aedfed77307629626cc6ab6173e68462eaebb\",\"dweb:/ipfs/QmVSAHYR99a4Q6jrrSqvRxMEnD2dhNAUPLyGA9KGJGTLDL\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200001d3362000023565b620000e0565b6001600160a01b03811662000084576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806200391b6026913960400191505060405180910390fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b61382b80620000f06000396000f3fe6080604052600436106101805760003560e01c80638870147b116100d1578063d1660e181161008a578063ed70554d11610064578063ed70554d14610ccc578063f242432a14610d4a578063f2fde38b14610ddd578063f8a5a07c14610e1057610180565b8063d1660e1814610c19578063d41d0aa314610c58578063e985e9c514610c9157610180565b80638870147b146109715780638aeba37e146109a45780638da5cb5b146109dd578063a22cb46514610a0e578063c02f303c14610a49578063c40b87ae14610a7c57610180565b8063414ed0ce1161013e5780634e1273f4116101185780634e1273f41461074c578063585941d5146108cc5780635dafec1b146109055780637627b7321461093e57610180565b8063414ed0ce146104d75780634392e577146105695780634ab0d253146105ca57610180565b8062fdd58e1461018557806301ffc9a7146101d05780630e89341c146102185780632eb2c2d6146102b75780632ed42bf7146103e05780633cacd7d614610484575b600080fd5b34801561019157600080fd5b506101be600480360360408110156101a857600080fd5b506001600160a01b038135169060200135610f47565b60408051918252519081900360200190f35b3480156101dc57600080fd5b50610204600480360360208110156101f357600080fd5b50356001600160e01b031916610fbc565b604080519115158252519081900360200190f35b34801561022457600080fd5b506102426004803603602081101561023b57600080fd5b5035611003565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027c578181015183820152602001610264565b50505050905090810190601f1680156102a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103de600480360360a08110156102cd57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561030057600080fd5b82018360208201111561031257600080fd5b803590602001918460208302840111600160201b8311171561033357600080fd5b919390929091602081019035600160201b81111561035057600080fd5b82018360208201111561036257600080fd5b803590602001918460208302840111600160201b8311171561038357600080fd5b919390929091602081019035600160201b8111156103a057600080fd5b8201836020820111156103b257600080fd5b803590602001918460018302840111600160201b831117156103d357600080fd5b5090925090506110a4565b005b3480156103ec57600080fd5b506103f5611352565b6040518084815260200180602001836001600160a01b03168152602001828103825284818151815260200191508051906020019080838360005b8381101561044757818101518382015260200161042f565b50505050905090810190601f1680156104745780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561049057600080fd5b506104b7600480360360208110156104a757600080fd5b50356001600160a01b03166113f7565b604080519315158452911515602084015282820152519081900360600190f35b3480156104e357600080fd5b50610501600480360360208110156104fa57600080fd5b503561141d565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561057557600080fd5b506103de600480360361014081101561058d57600080fd5b81019080806101400190600a806020026040519081016040528092919082600a602002808284376000920191909152509194506114909350505050565b3480156105d657600080fd5b506103de60048036036101408110156105ee57600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b81111561064357600080fd5b82018360208201111561065557600080fd5b803590602001918460208302840111600160201b8311171561067657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156106c557600080fd5b8201836020820111156106d757600080fd5b803590602001918460208302840111600160201b831117156106f857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166114e8565b34801561075857600080fd5b5061087c6004803603604081101561076f57600080fd5b810190602081018135600160201b81111561078957600080fd5b82018360208201111561079b57600080fd5b803590602001918460208302840111600160201b831117156107bc57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561080b57600080fd5b82018360208201111561081d57600080fd5b803590602001918460208302840111600160201b8311171561083e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506115df945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156108b85781810151838201526020016108a0565b505050509050019250505060405180910390f35b3480156108d857600080fd5b506101be600480360360408110156108ef57600080fd5b506001600160a01b038135169060200135611763565b34801561091157600080fd5b506102046004803603604081101561092857600080fd5b50803590602001356001600160a01b031661179e565b34801561094a57600080fd5b506103de6004803603602081101561096157600080fd5b50356001600160a01b03166117aa565b34801561097d57600080fd5b506103de6004803603602081101561099457600080fd5b50356001600160a01b0316611815565b3480156109b057600080fd5b506103de600480360360408110156109c757600080fd5b50803590602001356001600160a01b031661187d565b3480156109e957600080fd5b506109f26118fb565b604080516001600160a01b039092168252519081900360200190f35b348015610a1a57600080fd5b506103de60048036036040811015610a3157600080fd5b506001600160a01b038135169060200135151561190a565b348015610a5557600080fd5b5061020460048036036020811015610a6c57600080fd5b50356001600160a01b03166119c4565b348015610a8857600080fd5b506103de60048036036101a0811015610aa057600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610b1057600080fd5b820183602082011115610b2257600080fd5b803590602001918460208302840111600160201b83111715610b4357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610b9257600080fd5b820183602082011115610ba457600080fd5b803590602001918460208302840111600160201b83111715610bc557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166119cf565b348015610c2557600080fd5b506101be60048036036060811015610c3c57600080fd5b506001600160a01b038135169060208101359060400135611a8e565b348015610c6457600080fd5b506103de60048036036040811015610c7b57600080fd5b50803590602001356001600160a01b0316611aa3565b348015610c9d57600080fd5b5061020460048036036040811015610cb457600080fd5b506001600160a01b0381358116916020013516611b1e565b348015610cd857600080fd5b50610cf660048036036020811015610cef57600080fd5b5035611b2a565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b6103de600480360360a0811015610d6057600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610d9f57600080fd5b820183602082011115610db157600080fd5b803590602001918460018302840111600160201b83111715610dd257600080fd5b509092509050611b86565b348015610de957600080fd5b506103de60048036036020811015610e0057600080fd5b50356001600160a01b0316611cdd565b348015610e1c57600080fd5b506103de60048036036060811015610e3357600080fd5b81359190810190604081016020820135600160201b811115610e5457600080fd5b820183602082011115610e6657600080fd5b803590602001918460208302840111600160201b83111715610e8757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610ed657600080fd5b820183602082011115610ee857600080fd5b803590602001918460208302840111600160201b83111715610f0957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d30945050505050565b60006001600160a01b038316610f8e5760405162461bcd60e51b815260040180806020018281038252602b8152602001806135e0602b913960400191505060405180910390fd5b506000818152600e602090815260408083206001600160a01b03861684526007019091529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b1480610fed57506001600160e01b03198216636cdb3d1360e11b145b15610ffa57506001610ffe565b5060005b919050565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152606093610fb693919290918301828280156110915780601f1061106657610100808354040283529160200191611091565b820191906000526020600020905b81548152906001019060200180831161107457829003601f168201915b505050505061109f84611ed3565b611f8f565b8483146110e25760405162461bcd60e51b815260040180806020018281038252602e815260200180613797602e913960400191505060405180910390fd5b6001600160a01b0387166111275760405162461bcd60e51b81526004018080602001828103825260288152602001806136316028913960400191505060405180910390fd5b6001600160a01b03881633148061114957506111438833611b1e565b15156001145b6111845760405162461bcd60e51b81526004018080602001828103825260378152602001806137606037913960400191505060405180910390fd5b6111f3888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a91829185019084908082843760009201919091525061209992505050565b866001600160a01b0316886001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a461134833898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061215392505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156113de5780601f106113b3576101008083540402835291602001916113de565b820191906000526020600020905b8154815290600101906020018083116113c157829003601f168201915b505050600c90930154919250506001600160a01b031683565b600d602052600090815260409020805460019091015460ff808316926101009004169083565b600f6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b611498612344565b6114d7576040805162461bcd60e51b81526020600482018190526024820152600080516020613740833981519152604482015290519081900360640190fd5b6114e4600282600a61348b565b5050565b876114f38133612355565b61153e576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000898152600e602052604090205461158e576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b61159e898989898989898961238f565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b606081518351146116215760405162461bcd60e51b81526004018080602001828103825260308152602001806136856030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561163b57600080fd5b50604051908082528060200260200182016040528015611665578160200160208202803683370190505b50905060005b845181101561175b5760006001600160a01b031685828151811061168b57fe5b60200260200101516001600160a01b031614156116d95760405162461bcd60e51b81526004018080602001828103825260348152602001806136eb6034913960400191505060405180910390fd5b600e60008583815181106116e957fe5b60200260200101518152602001908152602001600020600701600086838151811061171057fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061174857fe5b602090810291909101015260010161166b565b509392505050565b6000818152600e602090815260408083206001600160a01b0386168452600701909152812060010154611797904290612533565b9392505050565b60006117978383612355565b6117b2612344565b6117f1576040805162461bcd60e51b81526020600482018190526024820152600080516020613740833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b61181d612344565b61185c576040805162461bcd60e51b81526020600482018190526024820152600080516020613740833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b611885612344565b6118c4576040805162461bcd60e51b81526020600482018190526024820152600080516020613740833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600c546001600160a01b031690565b336001600160a01b03831614156119525760405162461bcd60e51b815260040180806020018281038252602c815260200180613659602c913960400191505060405180910390fd5b336000818152600d602090815260408083206001600160a01b0387168085526003909101835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610fb682612575565b6119d833612575565b611a23576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b611a368b8b8b8b8b8b8b8b8b8b8b61259f565b604080518b8152602081018b905281516001600160a01b038e169260009233927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62929181900390910190a45050505050505050505050565b6000611a9b848484612708565b949350505050565b611aab612344565b611aea576040805162461bcd60e51b81526020600482018190526024820152600080516020613740833981519152604482015290519081900360640190fd5b6000918252600e602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b600061179783836128f0565b600e60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516611bcb5760405162461bcd60e51b81526004018080602001828103825260288152602001806136316028913960400191505060405180910390fd5b6001600160a01b038616331480611bed5750611be78633611b1e565b15156001145b611c285760405162461bcd60e51b81526004018080602001828103825260378152602001806137606037913960400191505060405180910390fd5b611c3486868686612935565b846001600160a01b0316866001600160a01b0316336001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611cd5338787878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506129ad92505050565b505050505050565b611ce5612344565b611d24576040805162461bcd60e51b81526020600482018190526024820152600080516020613740833981519152604482015290519081900360640190fd5b611d2d81612b22565b50565b611d3933612575565b611d84576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000838152600e602052604090205415801590611da2575080518251145b611de7576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015611ecd57611e2484848381518110611e0357fe5b6020026020010151848481518110611e1757fe5b6020026020010151612bc3565b6000848152600e602052604081206008018054909190611e4057fe5b600091825260208220015484516001600160a01b03909116919033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290879086908110611e8a57fe5b6020026020010151600e60008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a4600101611dea565b50505050565b60606000825b8015611eef576001919091019060109004611ed9565b60608267ffffffffffffffff81118015611f0857600080fd5b506040519080825280601f01601f191660200182016040528015611f33576020820181803683370190505b50905060005b83811015611f8657601086069250611f5083612d65565b8260018387030381518110611f6157fe5b60200101906001600160f81b031916908160001a905350601086049550600101611f39565b50949350505050565b805182516060918491849184910167ffffffffffffffff81118015611fb357600080fd5b506040519080825280601f01601f191660200182016040528015611fde576020820181803683370190505b509050806000805b855181101561203757858181518110611ffb57fe5b602001015160f81c60f81b83838060010194508151811061201857fe5b60200101906001600160f81b031916908160001a905350600101611fe6565b5060005b845181101561208c5784818151811061205057fe5b602001015160f81c60f81b83838060010194508151811061206d57fe5b60200101906001600160f81b031916908160001a90535060010161203b565b5090979650505050505050565b60008034116120c3576001600160a01b0385166000908152600d60205260409020600101546120c5565b345b905060005b83518110156121415761213761210887878785815181106120e757fe5b60200260200101518786815181106120fb57fe5b6020026020010151612da9565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152849190612efd565b91506001016120ca565b5061214c8582612f94565b5050505050565b612165846001600160a01b0316613015565b15611cd55763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156122055781810151838201526020016121ed565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561224457818101518382015260200161222c565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015612280578181015183820152602001612268565b50505050905090810190601f1680156122ad5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156122d257600080fd5b505af11580156122e6573d6000803e3d6000fd5b505050506040513d60208110156122fc57600080fd5b50516001600160e01b03191614611cd55760405162461bcd60e51b81526004018080602001828103825260368152602001806136b56036913960400191505060405180910390fd5b600c546001600160a01b0316331490565b6000828152600e602090815260408083206001600160a01b038516845260070190915281206002015460ff16806117975750611797612344565b6000805b85518110156123bf578581815181106123a857fe5b602002602001015182019150806001019050612393565b50600086511180156123cf575060015b80156123dc575080612710145b80156123e9575061271084105b61242e576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600e60209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b90910180546001810182559085529290932061248e9392830201916134e3565b506000898152600e6020908152604090912087516124b49260099092019189019061351d565b506000898152600e6020908152604090912086516124da92600a90920191880190613571565b50506000978852600e602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b600061179783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612efd565b6001600160a01b0381166000908152600d602052604081205460ff1680610fb65750610fb6612344565b60008a8152600e60205260409020541580156125bb5750600089115b612600576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b88600e60008c81526020019081526020016000206000018190555087600e60008c8152602001908152602001600020600101819055506001600e60008c81526020019081526020016000206007016000336001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600e60008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506126f08a8888888888888861238f565b6126fb8b8b8b61304c565b5050505050505050505050565b6000828152600e60205260408120600b015481904290600019015b6000868152600e60205260408120600b0180548390811061274057fe5b60009182526020822060029091020101546000888152600e60205260408120600b01805492935090918490811061277357fe5b906000526020600020906002020160016002811061278d57fe5b01546000898152600e602090815260408083206001600160a01b038e168452600701909152812060010154919250908311612830576000898152600e602090815260408083206001600160a01b038e1684526007019091529020600101546128059062015180906127ff908890612533565b9061324a565b905080612810575060015b6128248861281e838561328c565b9061328c565b8601955050505061286f565b612841620151806127ff8786612533565b90508061284c575060015b919350839161285f8861281e838561328c565b9095019450505060001901612723565b506000858152600e6020526040902060010154612890908390600a0a61324a565b6000868152600e6020526040812060030154919350906128bb906305f5e100906127ff90889061328c565b6000878152600e60205260409020600201549091506128e5906128de90836132e5565b84906132e5565b979650505050505050565b60006128fc838361333f565b806117975750506001600160a01b039182166000908152600d602090815260408083209390941682526003909201909152205460ff1690565b600080341161295f576001600160a01b0385166000908152600d6020526040902060010154612961565b345b90506129a161297286868686612da9565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b6020820152839190612efd565b905061214c8582612f94565b6129bf846001600160a01b0316613015565b15611cd55763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612a60578181015183820152602001612a48565b50505050905090810190601f168015612a8d5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015612ab057600080fd5b505af1158015612ac4573d6000803e3d6000fd5b505050506040513d6020811015612ada57600080fd5b50516001600160e01b03191614611cd55760405162461bcd60e51b81526004018080602001828103825260318152602001806137c56031913960400191505060405180910390fd5b6001600160a01b038116612b675760405162461bcd60e51b815260040180806020018281038252602681526020018061360b6026913960400191505060405180910390fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6000838152600e602052604081206008018054612d609290612be157fe5b6000918252602080832090910154868352600e8083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a949093908401929190612c4b57fe5b9060005260206000209060020201600160028110612c6557fe5b0154905260008a8152600e602090815260409182902060090180548351818402810184019094528084529091830182828015612cca57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612cac575b50505060008d8152600e6020908152604091829020600a0180548351818402810184019094528084529294509250830182828015612d2757602002820191906000526020600020905b815481526020019060010190808311612d13575b50505060008e8152600e60205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b031661259f565b505050565b600060098260ff1611612d7f57506030810160f81b610ffe565b8160ff16600a11158015612d975750600f8260ff1611155b1561018057506057810160f81b610ffe565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000858152600e82528381206001600160a01b038916825260070190915291822054612e04918490612efd565b6000848152600e602090815260408083206001600160a01b038a168452600701909152902055612e3584848461304c565b612e40858484612708565b905060005b6000848152600e6020526040902060090154811015611f86576000848152600e60205260408120600901805483908110612e7b57fe5b6000918252602080832090910154878352600e90915260408220600a0180546001600160a01b0390921693509084908110612eb257fe5b6000918252602090912001549050612ed06127106127ff868461328c565b6001600160a01b039092166000908152600d60205260409020600190810180549093019092555001612e45565b60008184841115612f8c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612f51578181015183820152602001612f39565b50505050905090810190601f168015612f7e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600034118015612fa45750600081115b15612ff0576001600160a01b0382166000908152600d6020526040902060010154612fcf90826132e5565b6001600160a01b0383166000908152600d60205260409020600101556114e4565b346114e4576001600160a01b03919091166000908152600d6020526040902060010155565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611a9b5750141592915050565b6000828152600e602090815260408083206001600160a01b038716845260070190915281205461307c90836132e5565b6000848152600e602090815260408083206001600160a01b0389168452600701909152902054909150613179576000838152600e602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16613148576001600160a01b0384166000818152600d6020908152604080832060020180546001818101835591855283852001889055878452600e83529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b6000838152600e602090815260408083206001600160a01b038816845260070190915290204260019091015561321a565b6000838152600e602090815260408083206001600160a01b03881684526007019091528120600101546131ad904290612533565b6000858152600e602090815260408083206001600160a01b038a168452600701909152812054919250906131e79084906127ff908561328c565b6000868152600e602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b6000928352600e602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b600061179783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613426565b60008261329b57506000610fb6565b828202828482816132a857fe5b04146117975760405162461bcd60e51b815260040180806020018281038252602181526020018061371f6021913960400191505060405180910390fd5b600082820183811015611797576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000805b600a81101561341c576000600282600a811061335b57fe5b01546001600160a01b031614613414576000600282600a811061337a57fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b1580156133cc57600080fd5b505afa1580156133e0573d6000803e3d6000fd5b505050506040513d60208110156133f657600080fd5b50516001600160a01b0316141561341257600192505050610fb6565b505b600101613343565b5060009392505050565b600081836134755760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612f51578181015183820152602001612f39565b50600083858161348157fe5b0495945050505050565b82600a81019282156134d3579160200282015b828111156134d357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061349e565b506134df9291506135ab565b5090565b8260028101928215613511579160200282015b828111156135115782518255916020019190600101906134f6565b506134df9291506135ca565b8280548282559060005260206000209081019282156134d357916020028201828111156134d357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061349e565b82805482825590600052602060002090810192821561351157916020028201828111156135115782518255916020019190600101906134f6565b5b808211156134df5780546001600160a01b03191681556001016135ac565b5b808211156134df57600081556001016135cb56fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a26469706673582212201825e6c181cdc6e16f2d1a0a01225e93aea6f82ced91dbd53e399c06423abf0164736f6c634300070100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "96:3244:10:-:0;;;;;;;;;;;;-1:-1:-1;637:30:13;656:10;637:18;:30::i;:::-;96:3244:10;;1677:239:13;-1:-1:-1;;;;;1750:22:13;;1742:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1851:13;;1830:45;;-1:-1:-1;;;;;1830:45:13;;;;1851:13;;1830:45;;1851:7;;1830:45;1885:13;:24;;-1:-1:-1;;;;;;1885:24:13;-1:-1:-1;;;;;1885:24:13;;;;;;;;;;1677:239::o;96:3244:10:-;;;;;;;",
  "deployedSourceMap": "96:3244:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1575:234:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1575:234:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;980:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;980:255:12;-1:-1:-1;;;;;;980:255:12;;:::i;:::-;;;;;;;;;;;;;;;;;;2489:141:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2489:141:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5755:770:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5755:770:12;;;;;;;;;;-1:-1:-1;5755:770:12;;-1:-1:-1;5755:770:12;-1:-1:-1;5755:770:12;:::i;:::-;;2130:22:8;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2130:22:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2158:39:8;-1:-1:-1;;;;;2158:39:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2250:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2250:47:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2250:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;465:151:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:151:15;;-1:-1:-1;465:151:15;;-1:-1:-1;;;;465:151:15:i;2251:823:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2251:823:10;;-1:-1:-1;;2251:823:10;;;-1:-1:-1;;;2251:823:10;;;;;;;;;;-1:-1:-1;;;;;2251:823:10;;:::i;2133:631:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2133:631:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2133:631:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2133:631:12;;;;;;;;-1:-1:-1;2133:631:12;;-1:-1:-1;;;;;2133:631:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2133:631:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2133:631:12;;-1:-1:-1;2133:631:12;;-1:-1:-1;;;;;2133:631:12:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;949:161:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;949:161:7;;;;;;;;:::i;1412:132:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1412:132:10;;;;;;-1:-1:-1;;;;;1412:132:10;;:::i;629:119:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;629:119:11;-1:-1:-1;;;;;629:119:11;;:::i;885:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;885:117:11;-1:-1:-1;;;;;885:117:11;;:::i;731:144:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;731:144:10;;;;;;-1:-1:-1;;;;;731:144:10;;:::i;1123:93:13:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1123:93:13;;;;;;;;;;;;;;3242:302:12;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3242:302:12;;;;;;;;;;:::i;1148:116:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1148:116:11;-1:-1:-1;;;;;1148:116:11;;:::i;2103:1038::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2103:1038:11;;;;;;;;-1:-1:-1;2103:1038:11;;-1:-1:-1;;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2103:1038:11;;;;;;;;-1:-1:-1;2103:1038:11;;-1:-1:-1;;;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2103:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2103:1038:11;;-1:-1:-1;;2103:1038:11;;;-1:-1:-1;;;2103:1038:11;;;;;;;;;;-1:-1:-1;;;;;2103:1038:11;;:::i;552:159:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;552:159:7;;;;;;;;;;;;;:::i;1044:142:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1044:142:10;;;;;;-1:-1:-1;;;;;1044:142:10;;:::i;3825:157:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3825:157:12;;;;;;;;;;:::i;2203:41:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2203:41:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2203:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;4536:630:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4536:630:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4536:630:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4536:630:12;;;;;;;;;;-1:-1:-1;4536:630:12;;-1:-1:-1;4536:630:12;-1:-1:-1;4536:630:12;:::i;1365:116:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1365:116:13;-1:-1:-1;;;;;1365:116:13;;:::i;3368:645:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3368:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3368:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3368:645:11;;;;;;;;-1:-1:-1;3368:645:11;;-1:-1:-1;;;;;3368:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3368:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3368:645:11;;-1:-1:-1;3368:645:11;;-1:-1:-1;;;;;3368:645:11:i;1575:234:12:-;1653:7;-1:-1:-1;;;;;1680:21:12;;1672:77;;;;-1:-1:-1;;;1672:77:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1766:11:12;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1766:28:12;;;;:19;;:28;;;;;:36;1575:234;;;;;:::o;980:255::-;1060:4;-1:-1:-1;;;;;;1078:42:12;;-1:-1:-1;;;1078:42:12;;:99;;-1:-1:-1;;;;;;;1134:43:12;;-1:-1:-1;;;1134:43:12;1078:99;1074:135;;;-1:-1:-1;1196:4:12;1189:11;;1074:135;-1:-1:-1;1223:5:12;980:255;;;;:::o;2489:141:8:-;2589:15;2578:45;;;;;;;;;;;;;-1:-1:-1;;2578:45:8;;;;;;;;;;;;;;;;;;;;;;;;;;2546:13;;2578:45;;;;2589:15;;2578:45;;2589:15;2578:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:16;2619:2;2606:12;:16::i;:::-;2578:10;:45::i;5755:770:12:-;5986:27;;;5978:86;;;;-1:-1:-1;;;5978:86:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6082:16:12;;6074:69;;;;-1:-1:-1;;;6074:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6174:18:12;;6182:10;6174:18;;:64;;;6196:34;6213:4;6219:10;6196:16;:34::i;:::-;:42;;6234:4;6196:42;6174:64;6153:166;;;;-1:-1:-1;;;6153:166:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6330:37;6345:4;6351:2;6355:3;;6330:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6330:37:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6360:6:12;;-1:-1:-1;6360:6:12;;;;6330:37;;;6360:6;;6330:37;6360:6;6330:37;;;;;;;;;-1:-1:-1;6330:14:12;;-1:-1:-1;;;6330:37:12:i;:::-;6415:2;-1:-1:-1;;;;;6383:48:12;6409:4;-1:-1:-1;;;;;6383:48:12;6397:10;-1:-1:-1;;;;;6383:48:12;;6419:3;;6424:6;;6383:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6383:48:12;;;;;;;;;;;;;;;;;-1:-1:-1;6383:48:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6383:48:12;;;;;;;;-1:-1:-1;6383:48:12;;-1:-1:-1;;;;;;;6383:48:12;6442:76;6478:10;6490:4;6496:2;6500:3;;6442:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6442:76:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6505:6:12;;-1:-1:-1;6505:6:12;;;;6442:76;;;6505:6;;6442:76;6505:6;6442:76;;;;;;;;;-1:-1:-1;;6442:76:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6513:4:12;;-1:-1:-1;6513:4:12;;;;6442:76;;6513:4;;;;6442:76;;;;;;;;;-1:-1:-1;6442:35:12;;-1:-1:-1;;;6442:76:12:i;:::-;5755:770;;;;;;;;:::o;2130:22:8:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;2130:22:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2130:22:8;;;;;;;-1:-1:-1;;;;;;;2130:22:8;;:::o;2158:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2250:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2250:47:8;;;;-1:-1:-1;;;2250:47:8;;;;;-1:-1:-1;;;2250:47:8;;;;;-1:-1:-1;;;2250:47:8;;;;;-1:-1:-1;;;2250:47:8;;;;;-1:-1:-1;;;2250:47:8;;;;;:::o;465:151:15:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;562:47:15::1;:30;595:14:::0;562:47:::1;;:::i;:::-;;465:151:::0;:::o;2251:823:10:-;2686:2;427:28;440:2;444:10;427:12;:28::i;:::-;419:64;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;-1:-1:-1;;;419:64:10;;;;;;;;;;;;;;;2729:1:::1;2708:11:::0;;;:7:::1;:11;::::0;;;;:18;2700:48:::1;;;::::0;;-1:-1:-1;;;2700:48:10;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2700:48:10;;;;;;;;;;;;;::::1;;2759:262;2769:2;2791:12;2823:15;2858:14;2892:24;2936:21;2977:9;3006:14;2759:9;:262::i;:::-;3037:30;::::0;;;;;;;3050:2;;3037:30:::1;::::0;;;;;::::1;::::0;;::::1;2251:823:::0;;;;;;;;;:::o;2133:631:12:-;2282:16;2341:3;:10;2322:8;:15;:29;2314:90;;;;-1:-1:-1;;;2314:90:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:30;2462:8;:15;2448:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2448:30:12;;2415:63;;2494:9;2489:238;2513:8;:15;2509:1;:19;2489:238;;;2580:1;-1:-1:-1;;;;;2557:25:12;:8;2566:1;2557:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2557:25:12;;;2549:90;;;;-1:-1:-1;;;2549:90:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2672:7;:15;2680:3;2684:1;2680:6;;;;;;;;;;;;;;2672:15;;;;;;;;;;;:23;;:36;2696:8;2705:1;2696:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2672:36:12;-1:-1:-1;;;;;2672:36:12;;;;;;;;;;;;:44;;;2653:13;2667:1;2653:16;;;;;;;;;;;;;;;;;:63;2530:3;;2489:238;;;-1:-1:-1;2744:13:12;2133:631;-1:-1:-1;;;2133:631:12:o;949:161:7:-;1019:7;1065:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1065:28:7;;;;:19;;:28;;;;;:37;;;1045:58;;:15;;:19;:58::i;:::-;1038:65;949:161;-1:-1:-1;;;949:161:7:o;1412:132:10:-;1487:4;1510:27;1523:2;1527:9;1510:12;:27::i;629:119:11:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;705:17:11::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;705:36:11::1;737:4;705:36;::::0;;629:119::o;885:117::-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;958:17:11::1;990:5;958:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;958:37:11::1;::::0;;885:117::o;731:144:10:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;819:11:10::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;819:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;819:49:10::1;864:4;819:49;::::0;;731:144::o;1123:93:13:-;1196:13;;-1:-1:-1;;;;;1196:13:13;1123:93;:::o;3242:302:12:-;3338:10;-1:-1:-1;;;;;3338:22:12;;;;3330:79;;;;-1:-1:-1;;;3330:79:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3426:10;3419:18;;;;:6;:18;;;;;;;;-1:-1:-1;;;;;3419:46:12;;;;;:36;;;;:46;;;;;;:57;;-1:-1:-1;;3419:57:12;;;;;;;;;;3491:46;;;;;;;3419;;3426:10;3491:46;;;;;;;;;;;3242:302;;:::o;1148:116:11:-;1211:4;1234:23;1247:9;1234:12;:23::i;2103:1038::-;331:24;344:10;331:12;:24::i;:::-;323:60;;;;;-1:-1:-1;;;323:60:11;;;;;;;;;;;;-1:-1:-1;;;323:60:11;;;;;;;;;;;;;;;2680:378:::1;2693:9;2725:2;2750:6;2779:8;2810:12;2845:15;2883:14;2920:24;2967:21;3011:9;3043:14;2680:12;:378::i;:::-;3073:61;::::0;;;;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;3073:61:11;::::1;::::0;3108:1:::1;::::0;3088:10:::1;::::0;3073:61:::1;::::0;;;;;;;;;::::1;2103:1038:::0;;;;;;;;;;;:::o;552:159:7:-;642:7;668:36;685:7;694:2;698:5;668:16;:36::i;:::-;661:43;552:159;-1:-1:-1;;;;552:159:7:o;1044:142:10:-;887:10:13;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;1174:5:10::1;1129:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1129:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1129:50:10::1;::::0;;1044:142::o;3825:157:12:-;3916:4;3939:36;3957:7;3966:8;3939:17;:36::i;2203:41:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2203:41:8;;;;-1:-1:-1;;;2203:41:8;;;;;-1:-1:-1;;;2203:41:8;;;;:::o;4536:630:12:-;-1:-1:-1;;;;;4738:16:12;;4730:69;;;;-1:-1:-1;;;4730:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4830:18:12;;4838:10;4830:18;;:64;;;4852:34;4869:4;4875:10;4852:16;:34::i;:::-;:42;;4890:4;4852:42;4830:64;4809:166;;;;-1:-1:-1;;;4809:166:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4986:30;4996:4;5002:2;5006;5010:5;4986:9;:30::i;:::-;5065:2;-1:-1:-1;;;;;5032:47:12;5059:4;-1:-1:-1;;;;;5032:47:12;5047:10;-1:-1:-1;;;;;5032:47:12;;5069:2;5073:5;5032:47;;;;;;;;;;;;;;;;;;;;;;;;5090:69;5121:10;5133:4;5139:2;5143;5147:5;5154:4;;5090:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5090:30:12;;-1:-1:-1;;;5090:69:12:i;:::-;4536:630;;;;;;:::o;1365:116:13:-;887:10;:8;:10::i;:::-;879:55;;;;;-1:-1:-1;;;879:55:13;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;879:55:13;;;;;;;;;;;;;;;1446:28:::1;1465:8;1446:18;:28::i;:::-;1365:116:::0;:::o;3368:645:11:-;331:24;344:10;331:12;:24::i;:::-;323:60;;;;;-1:-1:-1;;;323:60:11;;;;;;;;;;;;-1:-1:-1;;;323:60:11;;;;;;;;;;;;;;;3569:1:::1;3548:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;3604:14;:21;3590:3;:10;:35;3548:77;3540:107;;;::::0;;-1:-1:-1;;;3540:107:11;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3540:107:11;;;;;;;;;;;;;::::1;;3663:9;3658:349;3682:3;:10;3678:1;:14;3658:349;;;3713:42;3725:2;3729:3;3733:1;3729:6;;;;;;;;;;;;;;3737:14;3752:1;3737:17;;;;;;;;;;;;;;3713:11;:42::i;:::-;3878:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;3937:6;;-1:-1:-1;;;;;3878:25:11;;::::1;::::0;;3790:10:::1;::::0;3775:221:::1;::::0;3937:3;;3941:1;;3937:6;::::1;;;;;;;;;;;3977:7;:11;3985:2;3977:11;;;;;;;;;;;:18;;;3775:221;;;;;;;;;;;;;;;;;;;;;;;;3694:3;;3658:349;;;;3368:645:::0;;;:::o;933:419:19:-;986:13;1011:10;1044:1;1055:68;1062:6;;1055:68;;1084:7;;;;;;1110:2;1105:7;;1055:68;;;1132:16;1161:5;1151:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16:19;;1132:35;;1182:6;1177:141;1194:5;1192:1;:7;1177:141;;;1228:2;1224:1;:6;1220:10;;1265:21;1283:1;1265:11;:21::i;:::-;1244:3;1260:1;1256;1248:5;:9;:13;1244:18;;;;;;;;;;;:42;-1:-1:-1;;;;;1244:42:19;;;;;;;;-1:-1:-1;1305:2:19;1300:7;;;-1:-1:-1;1201:3:19;;1177:141;;;-1:-1:-1;1341:3:19;933:419;-1:-1:-1;;;;933:419:19:o;86:515::-;305:10;;292;;163:13;;213:1;;250;;163:13;;292:23;281:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:35:19;-1:-1:-1;262:54:19;-1:-1:-1;262:54:19;365:6;;405:76;421:3;:10;417:1;:14;405:76;;;464:3;468:1;464:6;;;;;;;;;;;;;;;;452:4;457:3;;;;;;452:9;;;;;;;;;;;:18;-1:-1:-1;;;;;452:18:19;;;;;;;;-1:-1:-1;433:3:19;;405:76;;;-1:-1:-1;499:1:19;490:76;506:3;:10;502:1;:14;490:76;;;549:3;553:1;549:6;;;;;;;;;;;;;;;;537:4;542:3;;;;;;537:9;;;;;;;;;;;:18;-1:-1:-1;;;;;537:18:19;;;;;;;;-1:-1:-1;518:3:19;;490:76;;;-1:-1:-1;589:4:19;;86:515;-1:-1:-1;;;;;;;86:515:19:o;4759:404:7:-;4875:19;4909:1;4897:9;:13;:51;;-1:-1:-1;;;;;4925:12:7;;;;;;:6;:12;;;;;:23;;;4897:51;;;4913:9;4897:51;4875:73;;4963:9;4958:157;4982:3;:10;4978:1;:14;4958:157;;;5027:77;5043:40;5055:4;5061:2;5065:3;5069:1;5065:6;;;;;;;;;;;;;;5073;5080:1;5073:9;;;;;;;;;;;;;;5043:11;:40::i;:::-;5027:77;;;;;;;;;;;;-1:-1:-1;;;5027:77:7;;;;:11;;:77;:15;:77::i;:::-;5013:91;-1:-1:-1;4994:3:7;;4958:157;;;;5124:32;5138:4;5144:11;5124:13;:32::i;:::-;4759:404;;;;;:::o;7148:558:12:-;7391:15;:2;-1:-1:-1;;;;;7391:13:12;;:15::i;:::-;7388:312;;;7549:52;;;-1:-1:-1;;;;;7447:154:12;;7464:2;-1:-1:-1;;;;;7447:43:12;;7491:8;7501:4;7507:3;7512:6;7520:4;7447:78;;;;;;;;;;;;;-1:-1:-1;;;;;7447:78:12;;;;;;-1:-1:-1;;;;;7447:78:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7447:78:12;-1:-1:-1;;;;;;7447:154:12;;7422:267;;;;-1:-1:-1;;;7422:267:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:100:13;2079:13;;-1:-1:-1;;;;;2079:13:13;2065:10;:27;;1999:100::o;3175:162:10:-;3251:4;3274:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3274:30:10;;;;:19;;:30;;;;;:42;;;;;;:56;;;3320:10;:8;:10::i;4257:1359:11:-;4676:23;4718:9;4713:120;4737:24;:31;4733:1;:35;4713:120;;;4806:24;4831:1;4806:27;;;;;;;;;;;;;;4787:46;;;;4770:3;;;;;4713:120;;;;4876:1;4852:14;:21;:25;:75;;;;-1:-1:-1;4881:46:11;4852:75;:119;;;;;4947:15;4966:5;4947:24;4852:119;:168;;;;;5015:5;4991:21;:29;4852:168;4844:214;;;;;-1:-1:-1;;;4844:214:11;;;;;;;;;;;;-1:-1:-1;;;4844:214:11;;;;;;;;;;;;;;;5069:11;;;;:7;:11;;;;;;;;:24;;;:39;;;5155:18;;5118:34;;;;:55;;;;5218:18;;;;-1:-1:-1;5183:32:11;;:53;5246:74;;;;;;;5283:15;5246:74;;5300:18;;;;5246:74;;;;:30;;;;:74;;5234:1;5246:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5330:11:11;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;5383:11:11;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;5456:11:11;;;;:7;:11;;;;;;:33;;;:57;;;;5523:21;;;;:33;;-1:-1:-1;;;;5523:33:11;-1:-1:-1;;;5523:33:11;;;;;;;;;;;-1:-1:-1;;;;;;5566:43:11;-1:-1:-1;;;;;5566:43:11;;;;;;;;;;-1:-1:-1;;;;4257:1359:11:o;1307:134:18:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;4114:137:11:-;-1:-1:-1;;;;;4201:17:11;;4178:4;4201:17;;;:6;:17;;;;;:29;;;;:43;;;4234:10;:8;:10::i;5623:1165::-;6205:11;;;;:7;:11;;;;;:18;:23;:37;;;;;6241:1;6232:6;:10;6205:37;6197:67;;;;;-1:-1:-1;;;6197:67:11;;;;;;;;;;;;-1:-1:-1;;;6197:67:11;;;;;;;;;;;;;;;6296:6;6275:7;:11;6283:2;6275:11;;;;;;;;;;;:18;;:27;;;;6335:8;6312:7;:11;6320:2;6312:11;;;;;;;;;;;:20;;:31;;;;6399:4;6353:7;:11;6361:2;6353:11;;;;;;;;;;;:19;;:31;6373:10;-1:-1:-1;;;;;6353:31:11;-1:-1:-1;;;;;6353:31:11;;;;;;;;;;;;:43;;;:50;;;;;;;;;;;;;;;;;;6457:4;6413:7;:11;6421:2;6413:11;;;;;;;;;;;:19;;:30;6433:9;-1:-1:-1;;;;;6413:30:11;-1:-1:-1;;;;;6413:30:11;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;6472:262;6482:2;6504:12;6536:15;6571:14;6605:24;6649:21;6690:9;6719:14;6472:9;:262::i;:::-;6745:36;6759:9;6770:2;6774:6;6745:13;:36::i;:::-;5623:1165;;;;;;;;;;;:::o;2336:1317:7:-;2429:7;2540:11;;;:7;:11;;;;;:30;;:37;2429:7;;2500:15;;-1:-1:-1;;2540:41:7;2526:835;2611:19;2633:11;;;:7;:11;;;;;:30;;:33;;2664:1;;2633:33;;;;;;;;;;;;;;;;;;:36;;2683:12;2698:11;;;:7;:11;;;;;:30;;:33;;2633:36;;-1:-1:-1;2683:12:7;;2729:1;;2698:33;;;;;;;;;;;;;;;;2732:1;2698:36;;;;;;;;;2748:19;2786:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2786:28:7;;;;:19;;:28;;;;;:37;;;2698:36;;-1:-1:-1;2748:19:7;2786:52;-1:-1:-1;2782:569:7;;2888:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2888:28:7;;;;:19;;:28;;;;;:37;;;2872:66;;2932:5;;2873:53;;:10;;:14;:53::i;:::-;2872:59;;:66::i;:::-;2858:80;-1:-1:-1;2960:16:7;2956:37;;-1:-1:-1;2992:1:7;2956:37;3024:34;3052:5;3025:21;:11;3041:4;3025:15;:21::i;:::-;3024:27;;:34::i;:::-;3011:47;;;;3076:5;;;;;2782:569;3134:40;3168:5;3135:27;:10;3150:11;3135:14;:27::i;3134:40::-;3120:54;-1:-1:-1;3196:16:7;3192:37;;-1:-1:-1;3228:1:7;3192:37;3260:11;;-1:-1:-1;3260:11:7;;3302:34;3330:5;3303:21;:11;3319:4;3303:15;:21::i;3302:34::-;3289:47;;;;-1:-1:-1;;;;;2591:3:7;2526:835;;;-1:-1:-1;3418:11:7;;;;:7;:11;;;;;:20;;;3400:39;;:9;;3414:2;:24;3400:13;:39::i;:::-;3489:17;3520:11;;;:7;:11;;;;;:32;;;3388:51;;-1:-1:-1;3489:17:7;3509:56;;3559:5;;3510:43;;:5;;:9;:43::i;3509:56::-;3596:11;;;;:7;:11;;;;;:34;;;3489:76;;-1:-1:-1;3582:64:7;;3596:49;;3489:76;3596:38;:49::i;:::-;3582:9;;:13;:64::i;:::-;3575:71;2336:1317;-1:-1:-1;;;;;;;2336:1317:7:o;1239:203:15:-;1324:4;1347:41;1370:7;1379:8;1347:22;:41::i;:::-;:88;;;-1:-1:-1;;;;;;;1392:15:15;;;;;;;:6;:15;;;;;;;;:43;;;;;;:33;;;;:43;;;;;;;;1239:203::o;4395:306:7:-;4486:19;4520:1;4508:9;:13;:51;;-1:-1:-1;;;;;4536:12:7;;;;;;:6;:12;;;;;:23;;;4508:51;;;4524:9;4508:51;4486:73;;4583:69;4599:32;4611:4;4617:2;4621;4625:5;4599:11;:32::i;:::-;4583:69;;;;;;;;;;;;-1:-1:-1;;;4583:69:7;;;;:11;;:69;:15;:69::i;:::-;4569:83;;4662:32;4676:4;4682:11;4662:13;:32::i;6626:516:12:-;6844:15;:2;-1:-1:-1;;;;;6844:13:12;;:15::i;:::-;6841:295;;;6995:47;;;-1:-1:-1;;;;;6900:142:12;;6917:2;-1:-1:-1;;;;;6900:38:12;;6939:8;6949:4;6955:2;6959:5;6966:4;6900:71;;;;;;;;;;;;;-1:-1:-1;;;;;6900:71:12;;;;;;-1:-1:-1;;;;;6900:71:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6900:71:12;-1:-1:-1;;;;;;6900:142:12;;6875:250;;;;-1:-1:-1;;;6875:250:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1677:239:13;-1:-1:-1;;;;;1750:22:13;;1742:73;;;;-1:-1:-1;;;1742:73:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1851:13;;1830:45;;-1:-1:-1;;;;;1830:45:13;;;;1851:13;;1830:45;;1851:7;;1830:45;1885:13;:24;;-1:-1:-1;;;;;;1885:24:13;-1:-1:-1;;;;;1885:24:13;;;;;;;;;;1677:239::o;6794:766:11:-;6898:11;;;;:7;:11;;;;;:22;;:25;;6885:668;;6898:11;:25;;;;;;;;;;;;;;;;6976:11;;;:7;:11;;;;;;;:18;;6898:25;7017:20;;;6885:668;;;;;;;7120:34;;;;6885:668;;7179:32;;;;6885:668;;;;7236:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;6898:25:11;;;;6946:7;;6976:18;;7017:20;;7060:12;;6885:668;;;;;;7236:30;6898:25;7236:33;;;;;;;;;;;;;;7270:1;7236:36;;;;;;;;;6885:668;;7318:11;;;;:7;:11;;;;;;;;;:26;;6885:668;;;;;;;;;;;;;;;;;7318:26;;6885:668;;7318:26;6885:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6885:668:11;;;;;;;;;;;;;;;;-1:-1:-1;;;7367:11:11;;;;:7;:11;;;;;;;;;:36;;6885:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;7367:36:11;-1:-1:-1;6885:668:11;;7367:36;6885:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7426:11:11;;;;:7;:11;;;;;:33;;;;7482:21;;;;;7426:33;;-1:-1:-1;7482:21:11;-1:-1:-1;;;7482:21:11;;;;-1:-1:-1;;;;;;7526:26:11;6885:12;:668::i;:::-;6794:766;;;:::o;607:320:19:-;660:4;695:1;690;:6;;;676:187;;-1:-1:-1;724:16:19;:20;;:16;719:26;712:33;;676:187;778:1;766:14;;:2;:14;;:32;;;;;796:2;790:1;784:14;;;;766:32;762:101;;;-1:-1:-1;826:25:19;;;:16;821:31;814:38;;3659:683:7;3819:68;;;;;;;;;;;-1:-1:-1;;;3819:68:7;;;;;;;;3759:12;3819:11;;;:7;:11;;;;;-1:-1:-1;;;;;3819:25:7;;;;:19;;:25;;;;;;:33;:68;;3857:5;;3819:37;:68::i;:::-;3783:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3783:25:7;;;;:19;;:25;;;;;:104;3897:28;3911:2;3791;3919:5;3897:13;:28::i;:::-;3943:33;3960:4;3966:2;3970:5;3943:16;:33::i;:::-;3936:40;;3992:9;3987:327;4011:11;;;;:7;:11;;;;;:26;;:33;4007:37;;3987:327;;;4065:21;4089:11;;;:7;:11;;;;;:26;;:29;;4116:1;;4089:29;;;;;;;;;;;;;;;;;;4167:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;4089:29:7;;;;-1:-1:-1;4167:36:7;4204:1;;4167:39;;;;;;;;;;;;;;;;;-1:-1:-1;4256:47:7;4297:5;4257:34;:4;4167:39;4257:8;:34::i;4256:47::-;-1:-1:-1;;;;;4220:21:7;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;4046:3:7;3987:327;;1877:187:18;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:18;;;1877:187::o;5169:290:7:-;5260:1;5248:9;:13;:32;;;;;5279:1;5265:11;:15;5248:32;5244:209;;;-1:-1:-1;;;;;5320:12:7;;;;;;:6;:12;;;;;:23;;;:40;;5348:11;5320:27;:40::i;:::-;-1:-1:-1;;;;;5294:12:7;;;;;;:6;:12;;;;;:23;;:66;5244:209;;;5379:9;5375:78;;-1:-1:-1;;;;;5407:12:7;;;;;;;;:6;:12;;;;;:23;;:37;5169:290::o;590:797:17:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:17;;;1329:51;-1:-1:-1;;590:797:17:o;1290:1006:7:-;1386:18;1407:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1407:30:7;;;;:19;;:30;;;;;:38;:49;;1450:5;1407:42;:49::i;:::-;1471:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1471:30:7;;;;:19;;:30;;;;;:38;1386:70;;-1:-1:-1;1467:761:7;;1536:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1536:30:7;;;;:19;;:30;;;;;:39;;;;;;;;1531:225;;-1:-1:-1;;;;;1595:17:7;;;;;;:6;:17;;;;;;;;:24;;:33;;;;;;;;;;;;;;;;;;1646:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1646:38:7;;;;;1702:30;;;;:19;;;;:30;;1531:225;1770:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1770:30:7;;;;:19;;:30;;;;;1812:15;1770:39;;;;:57;1467:761;;;1938:20;1981:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1981:30:7;;;;:19;;:30;;;;;:39;;;1961:60;;:15;;:19;:60::i;:::-;2035:19;2058:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2058:30:7;;;;:19;;:30;;;;;:38;1938:83;;-1:-1:-1;2035:19:7;2057:74;;2120:10;;2058:56;;1938:83;2058:42;:56::i;2057:74::-;2146:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2146:30:7;;;;:19;;:30;;;;;2188:15;:29;;;;2146:39;;;;:71;-1:-1:-1;;1467:761:7;2238:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2238:30:7;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;1290:1006:7:o;3218:130:18:-;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;2304:459::-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:18;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:176;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:18;;;;;;;;;;;;;;;;;;;;;;;;;;;717:516:15;807:4;;823:382;847:37;843:1;:41;823:382;;;954:1;909:30;940:1;909:33;;;;;;;;;-1:-1:-1;;;;;909:33:15;:47;905:290;;976:27;1020:30;1051:1;1020:33;;;;;;;;;1084:30;;;-1:-1:-1;;;1084:30:15;;-1:-1:-1;;;;;1084:30:15;;;;;;;;;1020:33;;;;-1:-1:-1;1076:51:15;;;;1020:33;;1084:21;;:30;;;;;;;;;;;;;;1020:33;1084:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1084:30:15;-1:-1:-1;;;;;1076:51:15;;1072:109;;;1158:4;1151:11;;;;;;1072:109;905:290;;886:3;;823:382;;;-1:-1:-1;1221:5:15;;717:516;-1:-1:-1;;;717:516:15:o;3969:338:18:-;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:18:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport './Mintable.sol';\n\ncontract Maintenable is Mintable {\n\n\n    /****************************\n    EVENTS\n    *****************************/\n\n\n    event TokenUpdated(uint256 indexed _id, uint256 _documentHash);\n\n\n    /****************************\n    MODIFIERS\n    *****************************/\n\n\n    modifier onlyMaintener(uint256 id) {\n        require(_isMaintener(id, msg.sender), \"Insufficient permission\");\n        _;\n    }\n\n\n    /****************************\n    EXTERNAL FUNCTIONS\n    *****************************/\n\n\n    /**\n     * @dev Function to authorize an address to maintain a token.\n     * @param maintener The authorized address\n     */\n    function authorizeMaintener(uint256 id, address maintener) external onlyOwner {\n        _tokens[id].holders[maintener].isMaintener = true;\n    }\n\n    /**\n     * @dev Function to revoke the authorization to maintain a token.\n     * @param id the token id\n     * @param maintener The authorized address\n     */\n    function revokeMaintener(uint256 id, address maintener) external onlyOwner {\n        _tokens[id].holders[maintener].isMaintener = false;\n    }\n\n    /**\n     * @dev Function to check if an address is authorized to maintain a token.\n     * @param id the token id\n     * @param maintener The authorized address\n     * @return true if it's a maintener address\n     */\n    function isMaintener(uint256 id, address maintener) external view returns (bool) {\n        return _isMaintener(id, maintener);\n    }\n\n    /**\n     * @dev Function to update a token with the given ID.\n     * @param id ID of the token to be updated\n     * @param metadataHash Metadata file hash\n     * @param transactionFees transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\n     * @param feesRecipients list of addresses receiving transfer fees\n     * @param feesRecipientsPercentage list of percentage, each one for the corresponding feesRecipients\n     * @param minHoldingForCallback minimum holding to propose a callback\n     * @param isPrivate true if holder need approval\n     * @param legalAuthority address of the legal authority\n     */\n    function updateToken(uint256 id,\n                         uint256 metadataHash,\n                         uint256[3] memory transactionFees,\n                         address[] memory feesRecipients,\n                         uint256[] memory feesRecipientsPercentage,\n                         uint256 minHoldingForCallback,\n                         bool isPrivate,\n                         address legalAuthority) external onlyMaintener(id) {\n        require(_tokens[id].supply > 0, \"Unknown token\");\n\n        _setToken(id,\n                  metadataHash,\n                  transactionFees,\n                  feesRecipients,\n                  feesRecipientsPercentage,\n                  minHoldingForCallback,\n                  isPrivate,\n                  legalAuthority);\n\n        emit TokenUpdated(id, metadataHash);\n    }\n\n\n    /****************************\n    INTERNAL FUNCTIONS\n    *****************************/\n\n\n    function _isMaintener(uint256 id, address maintener) internal view returns (bool) {\n        return _tokens[id].holders[maintener].isMaintener || _isOwner();\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
    "exportedSymbols": {
      "Maintenable": [
        2086
      ]
    },
    "id": 2087,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1928,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:10"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol",
        "file": "./Mintable.sol",
        "id": 1929,
        "nodeType": "ImportDirective",
        "scope": 2087,
        "sourceUnit": 2608,
        "src": "70:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1930,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2607,
              "src": "120:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$2607",
                "typeString": "contract Mintable"
              }
            },
            "id": 1931,
            "nodeType": "InheritanceSpecifier",
            "src": "120:8:10"
          }
        ],
        "contractDependencies": [
          149,
          161,
          211,
          234,
          1551,
          1697,
          2607,
          3047,
          3145,
          3341,
          3996
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2086,
        "linearizedBaseContracts": [
          2086,
          2607,
          3047,
          3341,
          3145,
          1551,
          1697,
          3996,
          161,
          234,
          149,
          211
        ],
        "name": "Maintenable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1937,
            "name": "TokenUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1933,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1937,
                  "src": "238:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1935,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1937,
                  "src": "259:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:44:10"
            },
            "src": "219:63:10"
          },
          {
            "body": {
              "id": 1951,
              "nodeType": "Block",
              "src": "409:92:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1943,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1939,
                            "src": "440:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 1944,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "444:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "444:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1942,
                          "name": "_isMaintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2085,
                          "src": "427:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,address) view returns (bool)"
                          }
                        },
                        "id": 1946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "427:28:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e74207065726d697373696f6e",
                        "id": 1947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "457:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        },
                        "value": "Insufficient permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        }
                      ],
                      "id": 1941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "419:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1949,
                  "nodeType": "ExpressionStatement",
                  "src": "419:64:10"
                },
                {
                  "id": 1950,
                  "nodeType": "PlaceholderStatement",
                  "src": "493:1:10"
                }
              ]
            },
            "id": 1952,
            "name": "onlyMaintener",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1939,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1952,
                  "src": "397:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "396:12:10"
            },
            "src": "374:127:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1972,
              "nodeType": "Block",
              "src": "809:66:10",
              "statements": [
                {
                  "expression": {
                    "id": 1970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1962,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1674,
                              "src": "819:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1621_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 1964,
                            "indexExpression": {
                              "id": 1963,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "827:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "819:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1621_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 1965,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1606,
                          "src": "819:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1584_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 1967,
                        "indexExpression": {
                          "id": 1966,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1957,
                          "src": "839:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "819:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1584_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1579,
                      "src": "819:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "864:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "819:49:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1971,
                  "nodeType": "ExpressionStatement",
                  "src": "819:49:10"
                }
              ]
            },
            "documentation": {
              "id": 1953,
              "nodeType": "StructuredDocumentation",
              "src": "602:124:10",
              "text": " @dev Function to authorize an address to maintain a token.\n @param maintener The authorized address"
            },
            "functionSelector": "8aeba37e",
            "id": 1973,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1960,
                "modifierName": {
                  "id": 1959,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3077,
                  "src": "799:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "799:9:10"
              }
            ],
            "name": "authorizeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1955,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "759:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1957,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "771:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "758:31:10"
            },
            "returnParameters": {
              "id": 1961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:10"
            },
            "scope": 2086,
            "src": "731:144:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1993,
              "nodeType": "Block",
              "src": "1119:67:10",
              "statements": [
                {
                  "expression": {
                    "id": 1991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1983,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1674,
                              "src": "1129:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1621_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 1985,
                            "indexExpression": {
                              "id": 1984,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1976,
                              "src": "1137:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1129:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1621_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 1986,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1606,
                          "src": "1129:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1584_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 1988,
                        "indexExpression": {
                          "id": 1987,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1978,
                          "src": "1149:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1129:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1584_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 1989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1579,
                      "src": "1129:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1174:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1129:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1992,
                  "nodeType": "ExpressionStatement",
                  "src": "1129:50:10"
                }
              ]
            },
            "documentation": {
              "id": 1974,
              "nodeType": "StructuredDocumentation",
              "src": "881:158:10",
              "text": " @dev Function to revoke the authorization to maintain a token.\n @param id the token id\n @param maintener The authorized address"
            },
            "functionSelector": "d41d0aa3",
            "id": 1994,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1981,
                "modifierName": {
                  "id": 1980,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3077,
                  "src": "1109:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1109:9:10"
              }
            ],
            "name": "revokeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "1069:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1978,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "1081:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1068:31:10"
            },
            "returnParameters": {
              "id": 1982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:0:10"
            },
            "scope": 2086,
            "src": "1044:142:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "1493:51:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2005,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1997,
                        "src": "1523:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2006,
                        "name": "maintener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "1527:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2004,
                      "name": "_isMaintener",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2085,
                      "src": "1510:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2003,
                  "id": 2008,
                  "nodeType": "Return",
                  "src": "1503:34:10"
                }
              ]
            },
            "documentation": {
              "id": 1995,
              "nodeType": "StructuredDocumentation",
              "src": "1192:215:10",
              "text": " @dev Function to check if an address is authorized to maintain a token.\n @param id the token id\n @param maintener The authorized address\n @return true if it's a maintener address"
            },
            "functionSelector": "5dafec1b",
            "id": 2010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1997,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "1433:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1999,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "1445:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:31:10"
            },
            "returnParameters": {
              "id": 2003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2002,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "1487:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1486:6:10"
            },
            "scope": 2086,
            "src": "1412:132:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2063,
              "nodeType": "Block",
              "src": "2690:384:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2038,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1674,
                              "src": "2708:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1621_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2040,
                            "indexExpression": {
                              "id": 2039,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "2716:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2708:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1621_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1586,
                          "src": "2708:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2729:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2708:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6b6e6f776e20746f6b656e",
                        "id": 2044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2732:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        },
                        "value": "Unknown token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        }
                      ],
                      "id": 2037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2700:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2046,
                  "nodeType": "ExpressionStatement",
                  "src": "2700:48:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2048,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "2769:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2049,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "2791:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2050,
                        "name": "transactionFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "2823:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "id": 2051,
                        "name": "feesRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "2858:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2052,
                        "name": "feesRecipientsPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "2892:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2053,
                        "name": "minHoldingForCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "2936:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2054,
                        "name": "isPrivate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "2977:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2055,
                        "name": "legalAuthority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2031,
                        "src": "3006:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2047,
                      "name": "_setToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2444,
                      "src": "2759:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256[3] memory,address[] memory,uint256[] memory,uint256,bool,address)"
                      }
                    },
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:262:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "2759:262:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2059,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "3050:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2060,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "3054:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2058,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1937,
                      "src": "3037:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2062,
                  "nodeType": "EmitStatement",
                  "src": "3032:35:10"
                }
              ]
            },
            "documentation": {
              "id": 2011,
              "nodeType": "StructuredDocumentation",
              "src": "1550:696:10",
              "text": " @dev Function to update a token with the given ID.\n @param id ID of the token to be updated\n @param metadataHash Metadata file hash\n @param transactionFees transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\n @param feesRecipients list of addresses receiving transfer fees\n @param feesRecipientsPercentage list of percentage, each one for the corresponding feesRecipients\n @param minHoldingForCallback minimum holding to propose a callback\n @param isPrivate true if holder need approval\n @param legalAuthority address of the legal authority"
            },
            "functionSelector": "4ab0d253",
            "id": 2064,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2034,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2013,
                    "src": "2686:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2035,
                "modifierName": {
                  "id": 2033,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1952,
                  "src": "2672:13:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2672:17:10"
              }
            ],
            "name": "updateToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2272:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "metadataHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2309:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "transactionFees",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2356:33:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2016,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2356:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2018,
                    "length": {
                      "hexValue": "33",
                      "id": 2017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2364:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2356:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2022,
                  "mutability": "mutable",
                  "name": "feesRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2416:31:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2020,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2416:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2021,
                    "nodeType": "ArrayTypeName",
                    "src": "2416:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "feesRecipientsPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2474:41:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2023,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2474:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2024,
                    "nodeType": "ArrayTypeName",
                    "src": "2474:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2027,
                  "mutability": "mutable",
                  "name": "minHoldingForCallback",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2542:29:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2029,
                  "mutability": "mutable",
                  "name": "isPrivate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2598:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "legalAuthority",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2639:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2639:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:391:10"
            },
            "returnParameters": {
              "id": 2036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2690:0:10"
            },
            "scope": 2086,
            "src": "2251:823:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2084,
              "nodeType": "Block",
              "src": "3257:80:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2073,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1674,
                              "src": "3274:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1621_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2075,
                            "indexExpression": {
                              "id": 2074,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2066,
                              "src": "3282:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3274:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1621_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1606,
                          "src": "3274:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1584_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 2078,
                        "indexExpression": {
                          "id": 2077,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2068,
                          "src": "3294:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3274:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1584_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 2079,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1579,
                      "src": "3274:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2080,
                        "name": "_isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3144,
                        "src": "3320:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3320:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3274:56:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2072,
                  "id": 2083,
                  "nodeType": "Return",
                  "src": "3267:63:10"
                }
              ]
            },
            "id": 2085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2066,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "3197:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3197:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2068,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "3209:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3209:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3196:31:10"
            },
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2071,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "3251:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3250:6:10"
            },
            "scope": 2086,
            "src": "3175:162:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2087,
        "src": "96:3244:10"
      }
    ],
    "src": "45:3296:10"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
    "exportedSymbols": {
      "Maintenable": [
        2086
      ]
    },
    "id": 2087,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1928,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:10"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol",
        "file": "./Mintable.sol",
        "id": 1929,
        "nodeType": "ImportDirective",
        "scope": 2087,
        "sourceUnit": 2608,
        "src": "70:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1930,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2607,
              "src": "120:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$2607",
                "typeString": "contract Mintable"
              }
            },
            "id": 1931,
            "nodeType": "InheritanceSpecifier",
            "src": "120:8:10"
          }
        ],
        "contractDependencies": [
          149,
          161,
          211,
          234,
          1551,
          1697,
          2607,
          3047,
          3145,
          3341,
          3996
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2086,
        "linearizedBaseContracts": [
          2086,
          2607,
          3047,
          3341,
          3145,
          1551,
          1697,
          3996,
          161,
          234,
          149,
          211
        ],
        "name": "Maintenable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1937,
            "name": "TokenUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1933,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1937,
                  "src": "238:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1935,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 1937,
                  "src": "259:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:44:10"
            },
            "src": "219:63:10"
          },
          {
            "body": {
              "id": 1951,
              "nodeType": "Block",
              "src": "409:92:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1943,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1939,
                            "src": "440:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 1944,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "444:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "444:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 1942,
                          "name": "_isMaintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2085,
                          "src": "427:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,address) view returns (bool)"
                          }
                        },
                        "id": 1946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "427:28:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e74207065726d697373696f6e",
                        "id": 1947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "457:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        },
                        "value": "Insufficient permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        }
                      ],
                      "id": 1941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "419:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1949,
                  "nodeType": "ExpressionStatement",
                  "src": "419:64:10"
                },
                {
                  "id": 1950,
                  "nodeType": "PlaceholderStatement",
                  "src": "493:1:10"
                }
              ]
            },
            "id": 1952,
            "name": "onlyMaintener",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1939,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1952,
                  "src": "397:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "396:12:10"
            },
            "src": "374:127:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1972,
              "nodeType": "Block",
              "src": "809:66:10",
              "statements": [
                {
                  "expression": {
                    "id": 1970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1962,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1674,
                              "src": "819:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1621_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 1964,
                            "indexExpression": {
                              "id": 1963,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "827:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "819:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1621_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 1965,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1606,
                          "src": "819:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1584_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 1967,
                        "indexExpression": {
                          "id": 1966,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1957,
                          "src": "839:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "819:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1584_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1579,
                      "src": "819:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "864:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "819:49:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1971,
                  "nodeType": "ExpressionStatement",
                  "src": "819:49:10"
                }
              ]
            },
            "documentation": {
              "id": 1953,
              "nodeType": "StructuredDocumentation",
              "src": "602:124:10",
              "text": " @dev Function to authorize an address to maintain a token.\n @param maintener The authorized address"
            },
            "functionSelector": "8aeba37e",
            "id": 1973,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1960,
                "modifierName": {
                  "id": 1959,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3077,
                  "src": "799:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "799:9:10"
              }
            ],
            "name": "authorizeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1955,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "759:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1957,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "771:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "758:31:10"
            },
            "returnParameters": {
              "id": 1961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "809:0:10"
            },
            "scope": 2086,
            "src": "731:144:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1993,
              "nodeType": "Block",
              "src": "1119:67:10",
              "statements": [
                {
                  "expression": {
                    "id": 1991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1983,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1674,
                              "src": "1129:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1621_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 1985,
                            "indexExpression": {
                              "id": 1984,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1976,
                              "src": "1137:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1129:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1621_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 1986,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1606,
                          "src": "1129:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1584_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 1988,
                        "indexExpression": {
                          "id": 1987,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1978,
                          "src": "1149:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1129:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1584_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 1989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1579,
                      "src": "1129:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1174:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1129:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1992,
                  "nodeType": "ExpressionStatement",
                  "src": "1129:50:10"
                }
              ]
            },
            "documentation": {
              "id": 1974,
              "nodeType": "StructuredDocumentation",
              "src": "881:158:10",
              "text": " @dev Function to revoke the authorization to maintain a token.\n @param id the token id\n @param maintener The authorized address"
            },
            "functionSelector": "d41d0aa3",
            "id": 1994,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1981,
                "modifierName": {
                  "id": 1980,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3077,
                  "src": "1109:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1109:9:10"
              }
            ],
            "name": "revokeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "1069:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1978,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 1994,
                  "src": "1081:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1068:31:10"
            },
            "returnParameters": {
              "id": 1982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:0:10"
            },
            "scope": 2086,
            "src": "1044:142:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "1493:51:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2005,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1997,
                        "src": "1523:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2006,
                        "name": "maintener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "1527:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2004,
                      "name": "_isMaintener",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2085,
                      "src": "1510:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2003,
                  "id": 2008,
                  "nodeType": "Return",
                  "src": "1503:34:10"
                }
              ]
            },
            "documentation": {
              "id": 1995,
              "nodeType": "StructuredDocumentation",
              "src": "1192:215:10",
              "text": " @dev Function to check if an address is authorized to maintain a token.\n @param id the token id\n @param maintener The authorized address\n @return true if it's a maintener address"
            },
            "functionSelector": "5dafec1b",
            "id": 2010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1997,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "1433:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1999,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "1445:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:31:10"
            },
            "returnParameters": {
              "id": 2003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2002,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "1487:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1486:6:10"
            },
            "scope": 2086,
            "src": "1412:132:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2063,
              "nodeType": "Block",
              "src": "2690:384:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2038,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1674,
                              "src": "2708:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1621_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2040,
                            "indexExpression": {
                              "id": 2039,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "2716:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2708:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1621_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1586,
                          "src": "2708:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2729:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2708:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6b6e6f776e20746f6b656e",
                        "id": 2044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2732:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        },
                        "value": "Unknown token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        }
                      ],
                      "id": 2037,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2700:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2700:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2046,
                  "nodeType": "ExpressionStatement",
                  "src": "2700:48:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2048,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "2769:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2049,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "2791:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2050,
                        "name": "transactionFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "2823:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "id": 2051,
                        "name": "feesRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2022,
                        "src": "2858:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2052,
                        "name": "feesRecipientsPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2025,
                        "src": "2892:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2053,
                        "name": "minHoldingForCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2027,
                        "src": "2936:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2054,
                        "name": "isPrivate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2029,
                        "src": "2977:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2055,
                        "name": "legalAuthority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2031,
                        "src": "3006:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2047,
                      "name": "_setToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2444,
                      "src": "2759:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256[3] memory,address[] memory,uint256[] memory,uint256,bool,address)"
                      }
                    },
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:262:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "2759:262:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2059,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "3050:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2060,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2015,
                        "src": "3054:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2058,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1937,
                      "src": "3037:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2062,
                  "nodeType": "EmitStatement",
                  "src": "3032:35:10"
                }
              ]
            },
            "documentation": {
              "id": 2011,
              "nodeType": "StructuredDocumentation",
              "src": "1550:696:10",
              "text": " @dev Function to update a token with the given ID.\n @param id ID of the token to be updated\n @param metadataHash Metadata file hash\n @param transactionFees transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\n @param feesRecipients list of addresses receiving transfer fees\n @param feesRecipientsPercentage list of percentage, each one for the corresponding feesRecipients\n @param minHoldingForCallback minimum holding to propose a callback\n @param isPrivate true if holder need approval\n @param legalAuthority address of the legal authority"
            },
            "functionSelector": "4ab0d253",
            "id": 2064,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2034,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2013,
                    "src": "2686:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2035,
                "modifierName": {
                  "id": 2033,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1952,
                  "src": "2672:13:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2672:17:10"
              }
            ],
            "name": "updateToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2272:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "metadataHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2309:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "transactionFees",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2356:33:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2016,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2356:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2018,
                    "length": {
                      "hexValue": "33",
                      "id": 2017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2364:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2356:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2022,
                  "mutability": "mutable",
                  "name": "feesRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2416:31:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2020,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2416:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2021,
                    "nodeType": "ArrayTypeName",
                    "src": "2416:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "feesRecipientsPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2474:41:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2023,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2474:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2024,
                    "nodeType": "ArrayTypeName",
                    "src": "2474:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2027,
                  "mutability": "mutable",
                  "name": "minHoldingForCallback",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2542:29:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2029,
                  "mutability": "mutable",
                  "name": "isPrivate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2598:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "legalAuthority",
                  "nodeType": "VariableDeclaration",
                  "scope": 2064,
                  "src": "2639:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2639:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:391:10"
            },
            "returnParameters": {
              "id": 2036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2690:0:10"
            },
            "scope": 2086,
            "src": "2251:823:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2084,
              "nodeType": "Block",
              "src": "3257:80:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2073,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1674,
                              "src": "3274:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1621_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2075,
                            "indexExpression": {
                              "id": 2074,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2066,
                              "src": "3282:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3274:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1621_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2076,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1606,
                          "src": "3274:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1584_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 2078,
                        "indexExpression": {
                          "id": 2077,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2068,
                          "src": "3294:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3274:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1584_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 2079,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1579,
                      "src": "3274:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2080,
                        "name": "_isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3144,
                        "src": "3320:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3320:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3274:56:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2072,
                  "id": 2083,
                  "nodeType": "Return",
                  "src": "3267:63:10"
                }
              ]
            },
            "id": 2085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2066,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "3197:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3197:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2068,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "3209:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3209:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3196:31:10"
            },
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2071,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2085,
                  "src": "3251:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3250:6:10"
            },
            "scope": 2086,
            "src": "3175:162:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2087,
        "src": "96:3244:10"
      }
    ],
    "src": "45:3296:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-21T20:10:49.932Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "averageAge(address,uint256)": {
        "details": "Function to get the average age of the token for the given address.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID"
        },
        "returns": {
          "_0": "average age in seconds"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        },
        "returns": {
          "_0": "transfer price"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to update a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be updated",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "uri(uint256)": {
        "params": {
          "id": "Token ID"
        },
        "returns": {
          "_0": "URI string"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}