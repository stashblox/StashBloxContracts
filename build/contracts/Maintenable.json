{
  "contractName": "Maintenable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_CallbackId",
          "type": "uint256"
        }
      ],
      "name": "CallbackUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[10]",
          "name": "proxyAddresses",
          "type": "address[10]"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_CallbackId\",\"type\":\"uint256\"}],\"name\":\"CallbackUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[10]\",\"name\":\"proxyAddresses\",\"type\":\"address[10]\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setProxyRegistryAddress(address[10])\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddresses\":\"List of addresses\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":\"Maintenable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0xe27c25aff4fdeb4a5ce67b84b2a8ca01e91a486e85d121c9cd421e5d2f905845\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f28f6d033ef7e0b7c46e37d4bda5c5e91c5a83498199274212fe5568bb129d1a\",\"dweb:/ipfs/QmZYfueEu5uGK3ecPEG2JpLQdBmPj76Vtv3qKYLCRFw7u3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ERC1155.sol\":{\"keccak256\":\"0x94fa6c7eb4eb82a5d8c319e0c921db2b84723826f2682a66e76d88124ce4dd2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a1bf746d208f8525a3d422ce4b9ec675a9e685d891e599f808260c2baebf3d6\",\"dweb:/ipfs/QmXJ92Kph7PraKQHyPSCLfo4ghsL7JpNpZPnJ4qKuQGrdW\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x8aae3185c49caffbd0a4d7da03687606d2727897f636e84a48a45aaa2661f3f6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://056f697a5d71948d5c38b327c3d1134765326c35b2c234a0f44ddf6f930c306d\",\"dweb:/ipfs/QmY8smKa23H1PmPKn6nqVWfbNNjobp9NQw3Ytz9PT9DDfa\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0xdcdf15b73af6083a542c4a7b02b7b74aec11cec44484c73397c5d8c78f66e5c1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://11ce57bc9349bbef91b423519f74ff7911927802422aae725b15aa4422c6b32d\",\"dweb:/ipfs/QmbSgz3rWHoX3ZuhJx5evWVr4RiRtvk9pmnFcwdDPGQwv6\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0xdeb1d1c50cb127875732ce1be720e4d55b770871867c69d70b7e79a8ffe0d20f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63818d1f8880fbda5d71193ee34e25804e2fc466b4ffd998abb42b35fdbcae47\",\"dweb:/ipfs/QmQy44DJzURo25FddWoTq8Bdzwf34V8GBBP8wWtp1f81Yp\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0x0486089873ab16e1178eba5e5c0d84be9016be5644197d7f904defada292dcec\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7428b3706106e816da0f53f131c56d74873b1dd624767aa30c1712b32969d23b\",\"dweb:/ipfs/QmWGemQGeeSHJZZXkz6HZy9ATKarKRyvhCq5FgdkAZYKvD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/StashBloxData.sol\":{\"keccak256\":\"0xe7fabb615f0aee4015b45827eb88e4d9b41179acbac239e8c7adb44fe009c6f4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e5df935ffe3a17af3753641cadee312c8a9d9089ce23bc4c6c2de15601573cc9\",\"dweb:/ipfs/QmR3o3miPVJ5HJEid59ysAm5QnBKD4CqRcS1nKncTDfhCN\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200001d3362000023565b620000e0565b6001600160a01b03811662000084576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806200358d6026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b61349d80620000f06000396000f3fe60806040526004361061014a5760003560e01c80638aeba37e116100b6578063d41d0aa31161006f578063d41d0aa314610b3a578063e985e9c514610b73578063ed70554d14610bae578063f242432a14610c2c578063f2fde38b14610cbf578063f8a5a07c14610cf25761014a565b80638aeba37e146108865780638da5cb5b146108bf578063a22cb465146108f0578063c02f303c1461092b578063c40b87ae1461095e578063d1660e1814610afb5761014a565b80634392e577116101085780634392e577146104845780634ab0d253146104e55780634e1273f4146106675780635dafec1b146107e75780637627b732146108205780638870147b146108535761014a565b8062fdd58e1461014f57806301ffc9a71461019a5780632eb2c2d6146101e25780632ed42bf71461030b5780633cacd7d61461039f578063414ed0ce146103f2575b600080fd5b34801561015b57600080fd5b506101886004803603604081101561017257600080fd5b506001600160a01b038135169060200135610e29565b60408051918252519081900360200190f35b3480156101a657600080fd5b506101ce600480360360208110156101bd57600080fd5b50356001600160e01b031916610e9e565b604080519115158252519081900360200190f35b610309600480360360a08110156101f857600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561022b57600080fd5b82018360208201111561023d57600080fd5b803590602001918460208302840111600160201b8311171561025e57600080fd5b919390929091602081019035600160201b81111561027b57600080fd5b82018360208201111561028d57600080fd5b803590602001918460208302840111600160201b831117156102ae57600080fd5b919390929091602081019035600160201b8111156102cb57600080fd5b8201836020820111156102dd57600080fd5b803590602001918460018302840111600160201b831117156102fe57600080fd5b509092509050610ee5565b005b34801561031757600080fd5b5061032061126b565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561036357818101518382015260200161034b565b50505050905090810190601f1680156103905780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103ab57600080fd5b506103d2600480360360208110156103c257600080fd5b50356001600160a01b0316611301565b604080519315158452911515602084015282820152519081900360600190f35b3480156103fe57600080fd5b5061041c6004803603602081101561041557600080fd5b5035611327565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561049057600080fd5b5061030960048036036101408110156104a857600080fd5b81019080806101400190600a806020026040519081016040528092919082600a6020028082843760009201919091525091945061139a9350505050565b3480156104f157600080fd5b50610309600480360361014081101561050957600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b81111561055e57600080fd5b82018360208201111561057057600080fd5b803590602001918460208302840111600160201b8311171561059157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156105e057600080fd5b8201836020820111156105f257600080fd5b803590602001918460208302840111600160201b8311171561061357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166113f2565b34801561067357600080fd5b506107976004803603604081101561068a57600080fd5b810190602081018135600160201b8111156106a457600080fd5b8201836020820111156106b657600080fd5b803590602001918460208302840111600160201b831117156106d757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561072657600080fd5b82018360208201111561073857600080fd5b803590602001918460208302840111600160201b8311171561075957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506114e9945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156107d35781810151838201526020016107bb565b505050509050019250505060405180910390f35b3480156107f357600080fd5b506101ce6004803603604081101561080a57600080fd5b50803590602001356001600160a01b031661166d565b34801561082c57600080fd5b506103096004803603602081101561084357600080fd5b50356001600160a01b0316611680565b34801561085f57600080fd5b506103096004803603602081101561087657600080fd5b50356001600160a01b03166116eb565b34801561089257600080fd5b50610309600480360360408110156108a957600080fd5b50803590602001356001600160a01b0316611753565b3480156108cb57600080fd5b506108d46117d1565b604080516001600160a01b039092168252519081900360200190f35b3480156108fc57600080fd5b506103096004803603604081101561091357600080fd5b506001600160a01b03813516906020013515156117e0565b34801561093757600080fd5b506101ce6004803603602081101561094e57600080fd5b50356001600160a01b0316611896565b34801561096a57600080fd5b5061030960048036036101a081101561098257600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b8111156109f257600080fd5b820183602082011115610a0457600080fd5b803590602001918460208302840111600160201b83111715610a2557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610a7457600080fd5b820183602082011115610a8657600080fd5b803590602001918460208302840111600160201b83111715610aa757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166118a1565b348015610b0757600080fd5b5061018860048036036060811015610b1e57600080fd5b506001600160a01b038135169060208101359060400135611960565b348015610b4657600080fd5b5061030960048036036040811015610b5d57600080fd5b50803590602001356001600160a01b0316611975565b348015610b7f57600080fd5b506101ce60048036036040811015610b9657600080fd5b506001600160a01b03813581169160200135166119f0565b348015610bba57600080fd5b50610bd860048036036020811015610bd157600080fd5b5035611a31565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b610309600480360360a0811015610c4257600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610c8157600080fd5b820183602082011115610c9357600080fd5b803590602001918460018302840111600160201b83111715610cb457600080fd5b509092509050611a8d565b348015610ccb57600080fd5b5061030960048036036020811015610ce257600080fd5b50356001600160a01b0316611ce7565b348015610cfe57600080fd5b5061030960048036036060811015610d1557600080fd5b81359190810190604081016020820135600160201b811115610d3657600080fd5b820183602082011115610d4857600080fd5b803590602001918460208302840111600160201b83111715610d6957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610db857600080fd5b820183602082011115610dca57600080fd5b803590602001918460208302840111600160201b83111715610deb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d3a945050505050565b60006001600160a01b038316610e705760405162461bcd60e51b815260040180806020018281038252602b815260200180613252602b913960400191505060405180910390fd5b506000818152600d602090815260408083206001600160a01b03861684526007019091529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b1480610ecf57506001600160e01b03198216636cdb3d1360e11b145b15610edc57506001610ee0565b5060005b919050565b848314610f235760405162461bcd60e51b815260040180806020018281038252602e815260200180613409602e913960400191505060405180910390fd5b6001600160a01b038716610f685760405162461bcd60e51b81526004018080602001828103825260288152602001806132a36028913960400191505060405180910390fd5b6001600160a01b038816331480610f8a5750610f8488336119f0565b15156001145b610fc55760405162461bcd60e51b81526004018080602001828103825260378152602001806133d26037913960400191505060405180910390fd5b6000803411610fef576001600160a01b0389166000908152600c6020526040902060010154610ff1565b345b905060005b8681101561103b5761102f8a8a8a8a8581811061100f57fe5b9050602002013589898681811061102257fe5b9050602002013586611edd565b90910390600101610ff6565b50876001600160a01b0316896001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a8a8a8a6040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a4611191338a8a8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c91829185019084908082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525061209992505050565b6000341180156111a15750600081115b1561123c57604051600090339083908381818185875af1925050503d80600081146111e8576040519150601f19603f3d011682016040523d82523d6000602084013e6111ed565b606091505b5050905080611236576040805162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015290519081900360640190fd5b50611260565b34611260576001600160a01b0389166000908152600c602052604090206001018190555b505050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156112f75780601f106112cc576101008083540402835291602001916112f7565b820191906000526020600020905b8154815290600101906020018083116112da57829003601f168201915b5050505050905082565b600c602052600090815260409020805460019091015460ff808316926101009004169083565b600e6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b6113a2612292565b6113e1576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6113ee600282600a6130fd565b5050565b876113fd81336122a3565b611448576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000898152600d6020526040902054611498576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b6114a889898989898989896122dd565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b6060815183511461152b5760405162461bcd60e51b81526004018080602001828103825260308152602001806132f76030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561154557600080fd5b5060405190808252806020026020018201604052801561156f578160200160208202803683370190505b50905060005b84518110156116655760006001600160a01b031685828151811061159557fe5b60200260200101516001600160a01b031614156115e35760405162461bcd60e51b815260040180806020018281038252603481526020018061335d6034913960400191505060405180910390fd5b600d60008583815181106115f357fe5b60200260200101518152602001908152602001600020600701600086838151811061161a57fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061165257fe5b6020908102919091010152600101611575565b509392505050565b600061167983836122a3565b9392505050565b611688612292565b6116c7576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600c60205260409020805460ff19166001179055565b6116f3612292565b611732576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600c60205260409020805460ff19169055565b61175b612292565b61179a576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600f546001600160a01b031690565b336001600160a01b03831614156118285760405162461bcd60e51b815260040180806020018281038252602c8152602001806132cb602c913960400191505060405180910390fd5b3360008181526010602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610e9882612481565b6118aa33612481565b6118f5576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6119088b8b8b8b8b8b8b8b8b8b8b6124ab565b604080518b8152602081018b905281516001600160a01b038e169260009233927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62929181900390910190a45050505050505050505050565b600061196d848484612614565b949350505050565b61197d612292565b6119bc576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b60006119fc83836127f6565b806116795750506001600160a01b03918216600090815260106020908152604080832093909416825291909152205460ff1690565b600d60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516611ad25760405162461bcd60e51b81526004018080602001828103825260288152602001806132a36028913960400191505060405180910390fd5b6001600160a01b038616331480611af45750611aee86336119f0565b15156001145b611b2f5760405162461bcd60e51b81526004018080602001828103825260378152602001806133d26037913960400191505060405180910390fd5b6000803411611b59576001600160a01b0387166000908152600c6020526040902060010154611b5b565b345b9050611b6a8787878785611edd565b81039050856001600160a01b0316876001600160a01b0316336001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051808381526020018281526020019250505060405180910390a4611c0f338888888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506128dd92505050565b600034118015611c1f5750600081115b15611cba57604051600090339083908381818185875af1925050503d8060008114611c66576040519150601f19603f3d011682016040523d82523d6000602084013e611c6b565b606091505b5050905080611cb4576040805162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015290519081900360640190fd5b50611cde565b34611cde576001600160a01b0387166000908152600c602052604090206001018190555b50505050505050565b611cef612292565b611d2e576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b611d3781612a52565b50565b611d4333612481565b611d8e576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000838152600d602052604090205415801590611dac575080518251145b611df1576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015611ed757611e2e84848381518110611e0d57fe5b6020026020010151848481518110611e2157fe5b6020026020010151612af3565b6000848152600d602052604081206008018054909190611e4a57fe5b600091825260208220015484516001600160a01b03909116919033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290879086908110611e9457fe5b6020026020010151600d60008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a4600101611df4565b50505050565b6000611eea868585612614565b905080821015611f41576040805162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e742045544820666f72206665657300000000000000604482015290519081900360640190fd5b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000878152600d82528381206001600160a01b038b1682526007019091529190912054611f9d918590612c95565b6000858152600d602090815260408083206001600160a01b038b168452600701909152902055611fce858585612d2c565b60005b6000858152600d602052604090206009015481101561208f576000858152600d6020526040812060090180548390811061200757fe5b6000918252602080832090910154888352600d90915260408220600a0180546001600160a01b039092169350908490811061203e57fe5b600091825260209091200154905061206261271061205c8684612f2a565b90612f83565b6001600160a01b039092166000908152600c60205260409020600190810180549093019092555001611fd1565b5095945050505050565b6120ab846001600160a01b0316612fc5565b1561228a5763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561214b578181015183820152602001612133565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561218a578181015183820152602001612172565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156121c65781810151838201526020016121ae565b50505050905090810190601f1680156121f35780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561221857600080fd5b505af115801561222c573d6000803e3d6000fd5b505050506040513d602081101561224257600080fd5b50516001600160e01b0319161461228a5760405162461bcd60e51b81526004018080602001828103825260368152602001806133276036913960400191505060405180910390fd5b505050505050565b600f546001600160a01b0316331490565b6000828152600d602090815260408083206001600160a01b038516845260070190915281206002015460ff16806116795750611679612292565b6000805b855181101561230d578581815181106122f657fe5b6020026020010151820191508060010190506122e1565b506000865111801561231d575060015b801561232a575080612710145b8015612337575061271084105b61237c576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600d60209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b9091018054600181018255908552929093206123dc939283020191613155565b506000898152600d6020908152604090912087516124029260099092019189019061318f565b506000898152600d60209081526040909120865161242892600a909201918801906131e3565b50506000978852600d602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b6001600160a01b0381166000908152600c602052604081205460ff1680610e985750610e98612292565b60008a8152600d60205260409020541580156124c75750600089115b61250c576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b88600d60008c81526020019081526020016000206000018190555087600d60008c8152602001908152602001600020600101819055506001600d60008c81526020019081526020016000206007016000336001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600d60008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506125fc8a888888888888886122dd565b6126078b8b8b612d2c565b5050505050505050505050565b6000828152600d60205260408120600b015481904290600019015b6000868152600d60205260408120600b0180548390811061264c57fe5b60009182526020822060029091020101546000888152600d60205260408120600b01805492935090918490811061267f57fe5b906000526020600020906002020160016002811061269957fe5b01546000898152600d602090815260408083206001600160a01b038e168452600701909152812060010154919250908311612736576000898152600d602090815260408083206001600160a01b038e16845260070190915290206001015461270b90620151809061205c908890612ffc565b905080612716575060015b61272a886127248385612f2a565b90612f2a565b86019550505050612775565b6127476201518061205c8786612ffc565b905080612752575060015b9193508391612765886127248385612f2a565b909501945050506000190161262f565b506000858152600d6020526040902060010154612796908390600a0a612f83565b6000868152600d6020526040812060030154919350906127c1906305f5e1009061205c908890612f2a565b6000878152600d60205260409020600201549091506127eb906127e4908361303e565b849061303e565b979650505050505050565b6000805b600a8110156128d3576000600282600a811061281257fe5b01546001600160a01b0316146128cb576000600282600a811061283157fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b15801561288357600080fd5b505afa158015612897573d6000803e3d6000fd5b505050506040513d60208110156128ad57600080fd5b50516001600160a01b031614156128c957600192505050610e98565b505b6001016127fa565b5060009392505050565b6128ef846001600160a01b0316612fc5565b1561228a5763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612990578181015183820152602001612978565b50505050905090810190601f1680156129bd5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b1580156129e057600080fd5b505af11580156129f4573d6000803e3d6000fd5b505050506040513d6020811015612a0a57600080fd5b50516001600160e01b0319161461228a5760405162461bcd60e51b81526004018080602001828103825260318152602001806134376031913960400191505060405180910390fd5b6001600160a01b038116612a975760405162461bcd60e51b815260040180806020018281038252602681526020018061327d6026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b6000838152600d602052604081206008018054612c909290612b1157fe5b6000918252602080832090910154868352600d8083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a949093908401929190612b7b57fe5b9060005260206000209060020201600160028110612b9557fe5b0154905260008a8152600d602090815260409182902060090180548351818402810184019094528084529091830182828015612bfa57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612bdc575b50505060008d8152600d6020908152604091829020600a0180548351818402810184019094528084529294509250830182828015612c5757602002820191906000526020600020905b815481526020019060010190808311612c43575b50505060008e8152600d60205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b03166124ab565b505050565b60008184841115612d245760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612ce9578181015183820152602001612cd1565b50505050905090810190601f168015612d165780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828152600d602090815260408083206001600160a01b0387168452600701909152812054612d5c908361303e565b6000848152600d602090815260408083206001600160a01b0389168452600701909152902054909150612e59576000838152600d602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16612e28576001600160a01b0384166000818152600c6020908152604080832060020180546001818101835591855283852001889055878452600d83529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b6000838152600d602090815260408083206001600160a01b0388168452600701909152902042600190910155612efa565b6000838152600d602090815260408083206001600160a01b0388168452600701909152812060010154612e8d904290612ffc565b6000858152600d602090815260408083206001600160a01b038a16845260070190915281205491925090612ec790849061205c9085612f2a565b6000868152600d602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b6000928352600d602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b600082612f3957506000610e98565b82820282848281612f4657fe5b04146116795760405162461bcd60e51b81526004018080602001828103825260218152602001806133916021913960400191505060405180910390fd5b600061167983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613098565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061196d5750141592915050565b600061167983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c95565b600082820183811015611679576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081836130e75760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612ce9578181015183820152602001612cd1565b5060008385816130f357fe5b0495945050505050565b82600a8101928215613145579160200282015b8281111561314557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613110565b5061315192915061321d565b5090565b8260028101928215613183579160200282015b82811115613183578251825591602001919060010190613168565b5061315192915061323c565b828054828255906000526020600020908101928215613145579160200282018281111561314557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613110565b8280548282559060005260206000209081019282156131835791602002820182811115613183578251825591602001919060010190613168565b5b808211156131515780546001600160a01b031916815560010161321e565b5b80821115613151576000815560010161323d56fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a2646970667358221220ef211ef2fcf077f43ca2aa1ae20d6cb22f3d47a3ba9ff73702789e3ff042d40164736f6c634300070100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x60806040526004361061014a5760003560e01c80638aeba37e116100b6578063d41d0aa31161006f578063d41d0aa314610b3a578063e985e9c514610b73578063ed70554d14610bae578063f242432a14610c2c578063f2fde38b14610cbf578063f8a5a07c14610cf25761014a565b80638aeba37e146108865780638da5cb5b146108bf578063a22cb465146108f0578063c02f303c1461092b578063c40b87ae1461095e578063d1660e1814610afb5761014a565b80634392e577116101085780634392e577146104845780634ab0d253146104e55780634e1273f4146106675780635dafec1b146107e75780637627b732146108205780638870147b146108535761014a565b8062fdd58e1461014f57806301ffc9a71461019a5780632eb2c2d6146101e25780632ed42bf71461030b5780633cacd7d61461039f578063414ed0ce146103f2575b600080fd5b34801561015b57600080fd5b506101886004803603604081101561017257600080fd5b506001600160a01b038135169060200135610e29565b60408051918252519081900360200190f35b3480156101a657600080fd5b506101ce600480360360208110156101bd57600080fd5b50356001600160e01b031916610e9e565b604080519115158252519081900360200190f35b610309600480360360a08110156101f857600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561022b57600080fd5b82018360208201111561023d57600080fd5b803590602001918460208302840111600160201b8311171561025e57600080fd5b919390929091602081019035600160201b81111561027b57600080fd5b82018360208201111561028d57600080fd5b803590602001918460208302840111600160201b831117156102ae57600080fd5b919390929091602081019035600160201b8111156102cb57600080fd5b8201836020820111156102dd57600080fd5b803590602001918460018302840111600160201b831117156102fe57600080fd5b509092509050610ee5565b005b34801561031757600080fd5b5061032061126b565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561036357818101518382015260200161034b565b50505050905090810190601f1680156103905780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103ab57600080fd5b506103d2600480360360208110156103c257600080fd5b50356001600160a01b0316611301565b604080519315158452911515602084015282820152519081900360600190f35b3480156103fe57600080fd5b5061041c6004803603602081101561041557600080fd5b5035611327565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561049057600080fd5b5061030960048036036101408110156104a857600080fd5b81019080806101400190600a806020026040519081016040528092919082600a6020028082843760009201919091525091945061139a9350505050565b3480156104f157600080fd5b50610309600480360361014081101561050957600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b81111561055e57600080fd5b82018360208201111561057057600080fd5b803590602001918460208302840111600160201b8311171561059157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156105e057600080fd5b8201836020820111156105f257600080fd5b803590602001918460208302840111600160201b8311171561061357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166113f2565b34801561067357600080fd5b506107976004803603604081101561068a57600080fd5b810190602081018135600160201b8111156106a457600080fd5b8201836020820111156106b657600080fd5b803590602001918460208302840111600160201b831117156106d757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561072657600080fd5b82018360208201111561073857600080fd5b803590602001918460208302840111600160201b8311171561075957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506114e9945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156107d35781810151838201526020016107bb565b505050509050019250505060405180910390f35b3480156107f357600080fd5b506101ce6004803603604081101561080a57600080fd5b50803590602001356001600160a01b031661166d565b34801561082c57600080fd5b506103096004803603602081101561084357600080fd5b50356001600160a01b0316611680565b34801561085f57600080fd5b506103096004803603602081101561087657600080fd5b50356001600160a01b03166116eb565b34801561089257600080fd5b50610309600480360360408110156108a957600080fd5b50803590602001356001600160a01b0316611753565b3480156108cb57600080fd5b506108d46117d1565b604080516001600160a01b039092168252519081900360200190f35b3480156108fc57600080fd5b506103096004803603604081101561091357600080fd5b506001600160a01b03813516906020013515156117e0565b34801561093757600080fd5b506101ce6004803603602081101561094e57600080fd5b50356001600160a01b0316611896565b34801561096a57600080fd5b5061030960048036036101a081101561098257600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b8111156109f257600080fd5b820183602082011115610a0457600080fd5b803590602001918460208302840111600160201b83111715610a2557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610a7457600080fd5b820183602082011115610a8657600080fd5b803590602001918460208302840111600160201b83111715610aa757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166118a1565b348015610b0757600080fd5b5061018860048036036060811015610b1e57600080fd5b506001600160a01b038135169060208101359060400135611960565b348015610b4657600080fd5b5061030960048036036040811015610b5d57600080fd5b50803590602001356001600160a01b0316611975565b348015610b7f57600080fd5b506101ce60048036036040811015610b9657600080fd5b506001600160a01b03813581169160200135166119f0565b348015610bba57600080fd5b50610bd860048036036020811015610bd157600080fd5b5035611a31565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b610309600480360360a0811015610c4257600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610c8157600080fd5b820183602082011115610c9357600080fd5b803590602001918460018302840111600160201b83111715610cb457600080fd5b509092509050611a8d565b348015610ccb57600080fd5b5061030960048036036020811015610ce257600080fd5b50356001600160a01b0316611ce7565b348015610cfe57600080fd5b5061030960048036036060811015610d1557600080fd5b81359190810190604081016020820135600160201b811115610d3657600080fd5b820183602082011115610d4857600080fd5b803590602001918460208302840111600160201b83111715610d6957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610db857600080fd5b820183602082011115610dca57600080fd5b803590602001918460208302840111600160201b83111715610deb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d3a945050505050565b60006001600160a01b038316610e705760405162461bcd60e51b815260040180806020018281038252602b815260200180613252602b913960400191505060405180910390fd5b506000818152600d602090815260408083206001600160a01b03861684526007019091529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b1480610ecf57506001600160e01b03198216636cdb3d1360e11b145b15610edc57506001610ee0565b5060005b919050565b848314610f235760405162461bcd60e51b815260040180806020018281038252602e815260200180613409602e913960400191505060405180910390fd5b6001600160a01b038716610f685760405162461bcd60e51b81526004018080602001828103825260288152602001806132a36028913960400191505060405180910390fd5b6001600160a01b038816331480610f8a5750610f8488336119f0565b15156001145b610fc55760405162461bcd60e51b81526004018080602001828103825260378152602001806133d26037913960400191505060405180910390fd5b6000803411610fef576001600160a01b0389166000908152600c6020526040902060010154610ff1565b345b905060005b8681101561103b5761102f8a8a8a8a8581811061100f57fe5b9050602002013589898681811061102257fe5b9050602002013586611edd565b90910390600101610ff6565b50876001600160a01b0316896001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a8a8a8a6040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a4611191338a8a8a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808e0282810182019093528d82529093508d92508c91829185019084908082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525061209992505050565b6000341180156111a15750600081115b1561123c57604051600090339083908381818185875af1925050503d80600081146111e8576040519150601f19603f3d011682016040523d82523d6000602084013e6111ed565b606091505b5050905080611236576040805162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015290519081900360640190fd5b50611260565b34611260576001600160a01b0389166000908152600c602052604090206001018190555b505050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156112f75780601f106112cc576101008083540402835291602001916112f7565b820191906000526020600020905b8154815290600101906020018083116112da57829003601f168201915b5050505050905082565b600c602052600090815260409020805460019091015460ff808316926101009004169083565b600e6020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b6113a2612292565b6113e1576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6113ee600282600a6130fd565b5050565b876113fd81336122a3565b611448576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000898152600d6020526040902054611498576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b6114a889898989898989896122dd565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b6060815183511461152b5760405162461bcd60e51b81526004018080602001828103825260308152602001806132f76030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561154557600080fd5b5060405190808252806020026020018201604052801561156f578160200160208202803683370190505b50905060005b84518110156116655760006001600160a01b031685828151811061159557fe5b60200260200101516001600160a01b031614156115e35760405162461bcd60e51b815260040180806020018281038252603481526020018061335d6034913960400191505060405180910390fd5b600d60008583815181106115f357fe5b60200260200101518152602001908152602001600020600701600086838151811061161a57fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061165257fe5b6020908102919091010152600101611575565b509392505050565b600061167983836122a3565b9392505050565b611688612292565b6116c7576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600c60205260409020805460ff19166001179055565b6116f3612292565b611732576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600c60205260409020805460ff19169055565b61175b612292565b61179a576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19166001179055565b600f546001600160a01b031690565b336001600160a01b03831614156118285760405162461bcd60e51b815260040180806020018281038252602c8152602001806132cb602c913960400191505060405180910390fd5b3360008181526010602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6000610e9882612481565b6118aa33612481565b6118f5576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6119088b8b8b8b8b8b8b8b8b8b8b6124ab565b604080518b8152602081018b905281516001600160a01b038e169260009233927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62929181900390910190a45050505050505050505050565b600061196d848484612614565b949350505050565b61197d612292565b6119bc576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b6000918252600d602090815260408084206001600160a01b039093168452600790920190529020600201805460ff19169055565b60006119fc83836127f6565b806116795750506001600160a01b03918216600090815260106020908152604080832093909416825291909152205460ff1690565b600d60205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516611ad25760405162461bcd60e51b81526004018080602001828103825260288152602001806132a36028913960400191505060405180910390fd5b6001600160a01b038616331480611af45750611aee86336119f0565b15156001145b611b2f5760405162461bcd60e51b81526004018080602001828103825260378152602001806133d26037913960400191505060405180910390fd5b6000803411611b59576001600160a01b0387166000908152600c6020526040902060010154611b5b565b345b9050611b6a8787878785611edd565b81039050856001600160a01b0316876001600160a01b0316336001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051808381526020018281526020019250505060405180910390a4611c0f338888888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506128dd92505050565b600034118015611c1f5750600081115b15611cba57604051600090339083908381818185875af1925050503d8060008114611c66576040519150601f19603f3d011682016040523d82523d6000602084013e611c6b565b606091505b5050905080611cb4576040805162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015290519081900360640190fd5b50611cde565b34611cde576001600160a01b0387166000908152600c602052604090206001018190555b50505050505050565b611cef612292565b611d2e576040805162461bcd60e51b815260206004820181905260248201526000805160206133b2833981519152604482015290519081900360640190fd5b611d3781612a52565b50565b611d4333612481565b611d8e576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b6000838152600d602052604090205415801590611dac575080518251145b611df1576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b8251811015611ed757611e2e84848381518110611e0d57fe5b6020026020010151848481518110611e2157fe5b6020026020010151612af3565b6000848152600d602052604081206008018054909190611e4a57fe5b600091825260208220015484516001600160a01b03909116919033907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290879086908110611e9457fe5b6020026020010151600d60008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a4600101611df4565b50505050565b6000611eea868585612614565b905080821015611f41576040805162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e742045544820666f72206665657300000000000000604482015290519081900360640190fd5b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b6020808301919091526000878152600d82528381206001600160a01b038b1682526007019091529190912054611f9d918590612c95565b6000858152600d602090815260408083206001600160a01b038b168452600701909152902055611fce858585612d2c565b60005b6000858152600d602052604090206009015481101561208f576000858152600d6020526040812060090180548390811061200757fe5b6000918252602080832090910154888352600d90915260408220600a0180546001600160a01b039092169350908490811061203e57fe5b600091825260209091200154905061206261271061205c8684612f2a565b90612f83565b6001600160a01b039092166000908152600c60205260409020600190810180549093019092555001611fd1565b5095945050505050565b6120ab846001600160a01b0316612fc5565b1561228a5763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561214b578181015183820152602001612133565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561218a578181015183820152602001612172565b50505050905001848103825285818151815260200191508051906020019080838360005b838110156121c65781810151838201526020016121ae565b50505050905090810190601f1680156121f35780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b15801561221857600080fd5b505af115801561222c573d6000803e3d6000fd5b505050506040513d602081101561224257600080fd5b50516001600160e01b0319161461228a5760405162461bcd60e51b81526004018080602001828103825260368152602001806133276036913960400191505060405180910390fd5b505050505050565b600f546001600160a01b0316331490565b6000828152600d602090815260408083206001600160a01b038516845260070190915281206002015460ff16806116795750611679612292565b6000805b855181101561230d578581815181106122f657fe5b6020026020010151820191508060010190506122e1565b506000865111801561231d575060015b801561232a575080612710145b8015612337575061271084105b61237c576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600d60209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b9091018054600181018255908552929093206123dc939283020191613155565b506000898152600d6020908152604090912087516124029260099092019189019061318f565b506000898152600d60209081526040909120865161242892600a909201918801906131e3565b50506000978852600d602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b6001600160a01b0381166000908152600c602052604081205460ff1680610e985750610e98612292565b60008a8152600d60205260409020541580156124c75750600089115b61250c576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b88600d60008c81526020019081526020016000206000018190555087600d60008c8152602001908152602001600020600101819055506001600d60008c81526020019081526020016000206007016000336001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600d60008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506125fc8a888888888888886122dd565b6126078b8b8b612d2c565b5050505050505050505050565b6000828152600d60205260408120600b015481904290600019015b6000868152600d60205260408120600b0180548390811061264c57fe5b60009182526020822060029091020101546000888152600d60205260408120600b01805492935090918490811061267f57fe5b906000526020600020906002020160016002811061269957fe5b01546000898152600d602090815260408083206001600160a01b038e168452600701909152812060010154919250908311612736576000898152600d602090815260408083206001600160a01b038e16845260070190915290206001015461270b90620151809061205c908890612ffc565b905080612716575060015b61272a886127248385612f2a565b90612f2a565b86019550505050612775565b6127476201518061205c8786612ffc565b905080612752575060015b9193508391612765886127248385612f2a565b909501945050506000190161262f565b506000858152600d6020526040902060010154612796908390600a0a612f83565b6000868152600d6020526040812060030154919350906127c1906305f5e1009061205c908890612f2a565b6000878152600d60205260409020600201549091506127eb906127e4908361303e565b849061303e565b979650505050505050565b6000805b600a8110156128d3576000600282600a811061281257fe5b01546001600160a01b0316146128cb576000600282600a811061283157fe5b01546040805163c455279160e01b81526001600160a01b0388811660048301529151928216935090861691839163c4552791916024808301926020929190829003018186803b15801561288357600080fd5b505afa158015612897573d6000803e3d6000fd5b505050506040513d60208110156128ad57600080fd5b50516001600160a01b031614156128c957600192505050610e98565b505b6001016127fa565b5060009392505050565b6128ef846001600160a01b0316612fc5565b1561228a5763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612990578181015183820152602001612978565b50505050905090810190601f1680156129bd5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b1580156129e057600080fd5b505af11580156129f4573d6000803e3d6000fd5b505050506040513d6020811015612a0a57600080fd5b50516001600160e01b0319161461228a5760405162461bcd60e51b81526004018080602001828103825260318152602001806134376031913960400191505060405180910390fd5b6001600160a01b038116612a975760405162461bcd60e51b815260040180806020018281038252602681526020018061327d6026913960400191505060405180910390fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b6000838152600d602052604081206008018054612c909290612b1157fe5b6000918252602080832090910154868352600d8083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a949093908401929190612b7b57fe5b9060005260206000209060020201600160028110612b9557fe5b0154905260008a8152600d602090815260409182902060090180548351818402810184019094528084529091830182828015612bfa57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612bdc575b50505060008d8152600d6020908152604091829020600a0180548351818402810184019094528084529294509250830182828015612c5757602002820191906000526020600020905b815481526020019060010190808311612c43575b50505060008e8152600d60205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b03166124ab565b505050565b60008184841115612d245760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612ce9578181015183820152602001612cd1565b50505050905090810190601f168015612d165780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828152600d602090815260408083206001600160a01b0387168452600701909152812054612d5c908361303e565b6000848152600d602090815260408083206001600160a01b0389168452600701909152902054909150612e59576000838152600d602090815260408083206001600160a01b0388168452600701909152902060020154610100900460ff16612e28576001600160a01b0384166000818152600c6020908152604080832060020180546001818101835591855283852001889055878452600d83529083206008810180549283018155845282842090910180546001600160a01b0319168517905592909152600790910190525b6000838152600d602090815260408083206001600160a01b0388168452600701909152902042600190910155612efa565b6000838152600d602090815260408083206001600160a01b0388168452600701909152812060010154612e8d904290612ffc565b6000858152600d602090815260408083206001600160a01b038a16845260070190915281205491925090612ec790849061205c9085612f2a565b6000868152600d602090815260408083206001600160a01b038b1684526007019091529020429190910360019091015550505b6000928352600d602090815260408085206001600160a01b03909616855260079095019052929091209190915550565b600082612f3957506000610e98565b82820282848281612f4657fe5b04146116795760405162461bcd60e51b81526004018080602001828103825260218152602001806133916021913960400191505060405180910390fd5b600061167983836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613098565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470811580159061196d5750141592915050565b600061167983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c95565b600082820183811015611679576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081836130e75760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612ce9578181015183820152602001612cd1565b5060008385816130f357fe5b0495945050505050565b82600a8101928215613145579160200282015b8281111561314557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613110565b5061315192915061321d565b5090565b8260028101928215613183579160200282015b82811115613183578251825591602001919060010190613168565b5061315192915061323c565b828054828255906000526020600020908101928215613145579160200282018281111561314557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613110565b8280548282559060005260206000209081019282156131835791602002820182811115613183578251825591602001919060010190613168565b5b808211156131515780546001600160a01b031916815560010161321e565b5b80821115613151576000815560010161323d56fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a2646970667358221220ef211ef2fcf077f43ca2aa1ae20d6cb22f3d47a3ba9ff73702789e3ff042d40164736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "130:2398:10:-:0;;;;;;;;;;;;-1:-1:-1;639:30:12;658:10;639:18;:30::i;:::-;130:2398:10;;1396:225:12;-1:-1:-1;;;;;1469:22:12;;1461:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:6;;1549:38;;-1:-1:-1;;;;;1549:38:12;;;;1570:6;;1549:38;;1570:6;;1549:38;1597:6;:17;;-1:-1:-1;;;;;;1597:17:12;-1:-1:-1;;;;;1597:17:12;;;;;;;;;;1396:225::o;130:2398:10:-;;;;;;;",
  "deployedSourceMap": "130:2398:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:234:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1748:234:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1153:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1153:255:8;-1:-1:-1;;;;;;1153:255:8;;:::i;:::-;;;;;;;;;;;;;;;;;;6363:1231;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6363:1231:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6363:1231:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6363:1231:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6363:1231:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6363:1231:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6363:1231:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6363:1231:8;;;;;;;;;;-1:-1:-1;6363:1231:8;;-1:-1:-1;6363:1231:8;-1:-1:-1;6363:1231:8;:::i;:::-;;1699:22:15;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1727:39:15;-1:-1:-1;;;;;1727:39:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1819:47:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1819:47:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;416:151:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;416:151:14;;-1:-1:-1;416:151:14;;-1:-1:-1;;;;416:151:14:i;1702:823:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1702:823:10;;;;;;;;-1:-1:-1;1702:823:10;;-1:-1:-1;;;;1702:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1702:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1702:823:10;;;;;;;;-1:-1:-1;1702:823:10;;-1:-1:-1;;;;;1702:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1702:823:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1702:823:10;;-1:-1:-1;;1702:823:10;;;-1:-1:-1;;;1702:823:10;;;;;;;;;;-1:-1:-1;;;;;1702:823:10;;:::i;2306:631:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2306:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2306:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2306:631:8;;;;;;;;-1:-1:-1;2306:631:8;;-1:-1:-1;;;;;2306:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2306:631:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2306:631:8;;-1:-1:-1;2306:631:8;;-1:-1:-1;;;;;2306:631:8:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:132:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1424:132:10;;;;;;-1:-1:-1;;;;;1424:132:10;;:::i;696:119:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;696:119:11;-1:-1:-1;;;;;696:119:11;;:::i;952:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;952:117:11;-1:-1:-1;;;;;952:117:11;;:::i;743:144:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;743:144:10;;;;;;-1:-1:-1;;;;;743:144:10;;:::i;752:86:12:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;752:86:12;;;;;;;;;;;;;;3415:296:8;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3415:296:8;;;;;;;;;;:::i;1215:116:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1215:116:11;-1:-1:-1;;;;;1215:116:11;;:::i;5506:1038::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5506:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5506:1038:11;;;;;;;;-1:-1:-1;5506:1038:11;;-1:-1:-1;;;;5506:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5506:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5506:1038:11;;;;;;;;-1:-1:-1;5506:1038:11;;-1:-1:-1;;;;;5506:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5506:1038:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5506:1038:11;;-1:-1:-1;;5506:1038:11;;;-1:-1:-1;;;5506:1038:11;;;;;;;;;;-1:-1:-1;;;;;5506:1038:11;;:::i;3760:159:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3760:159:7;;;;;;;;;;;;;:::i;1056:142:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1056:142:10;;;;;;-1:-1:-1;;;;;1056:142:10;;:::i;3992:203:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3992:203:8;;;;;;;;;;:::i;1772:41:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1772:41:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1772:41:15;;;;;;;;;;;;;;;;;;;;;;;;;;4749:1025:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4749:1025:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4749:1025:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4749:1025:8;;;;;;;;;;-1:-1:-1;4749:1025:8;;-1:-1:-1;4749:1025:8;-1:-1:-1;4749:1025:8;:::i;1179:116:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1179:116:12;-1:-1:-1;;;;;1179:116:12;;:::i;6771:645:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6771:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6771:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6771:645:11;;;;;;;;-1:-1:-1;6771:645:11;;-1:-1:-1;;;;;6771:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6771:645:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6771:645:11;;-1:-1:-1;6771:645:11;;-1:-1:-1;;;;;6771:645:11:i;1748:234:8:-;1826:7;-1:-1:-1;;;;;1853:21:8;;1845:77;;;;-1:-1:-1;;;1845:77:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1939:11:8;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1939:28:8;;;;:19;;:28;;;;;:36;1748:234;;;;;:::o;1153:255::-;1233:4;-1:-1:-1;;;;;;1251:42:8;;-1:-1:-1;;;1251:42:8;;:99;;-1:-1:-1;;;;;;;1307:43:8;;-1:-1:-1;;;1307:43:8;1251:99;1247:135;;;-1:-1:-1;1369:4:8;1362:11;;1247:135;-1:-1:-1;1396:5:8;1153:255;;;;:::o;6363:1231::-;6594:27;;;6586:86;;;;-1:-1:-1;;;6586:86:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6690:16:8;;6682:69;;;;-1:-1:-1;;;6682:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6782:18:8;;6790:10;6782:18;;:64;;;6804:34;6821:4;6827:10;6804:16;:34::i;:::-;:42;;6842:4;6804:42;6782:64;6761:166;;;;-1:-1:-1;;;6761:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6938:19;6972:1;6960:9;:13;:51;;-1:-1:-1;;;;;6988:12:8;;;;;;:6;:12;;;;;:23;;;6960:51;;;6976:9;6960:51;6938:73;;7026:9;7021:147;7041:14;;;7021:147;;;7104:53;7116:4;7122:2;7126:3;;7130:1;7126:6;;;;;;;;;;;;;7134;;7141:1;7134:9;;;;;;;;;;;;;7145:11;7104;:53::i;:::-;7090:67;;;;7057:3;;7021:147;;;;7215:2;-1:-1:-1;;;;;7183:48:8;7209:4;-1:-1:-1;;;;;7183:48:8;7197:10;-1:-1:-1;;;;;7183:48:8;;7219:3;;7224:6;;7183:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7183:48:8;;;;;;;;;;;;;;;;;-1:-1:-1;7183:48:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7183:48:8;;;;;;;;-1:-1:-1;7183:48:8;;-1:-1:-1;;;;;;;7183:48:8;7242:76;7278:10;7290:4;7296:2;7300:3;;7242:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7242:76:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7305:6:8;;-1:-1:-1;7305:6:8;;;;7242:76;;;7305:6;;7242:76;7305:6;7242:76;;;;;;;;;-1:-1:-1;;7242:76:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7313:4:8;;-1:-1:-1;7313:4:8;;;;7242:76;;7313:4;;;;7242:76;;;;;;;;;-1:-1:-1;7242:35:8;;-1:-1:-1;;;7242:76:8:i;:::-;7345:1;7333:9;:13;:32;;;;;7364:1;7350:11;:15;7333:32;7329:259;;;7400:39;;7382:12;;7400:10;;7423:11;;7382:12;7400:39;7382:12;7400:39;7423:11;7400:10;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7381:58;;;7461:7;7453:36;;;;;-1:-1:-1;;;7453:36:8;;;;;;;;;;;;-1:-1:-1;;;7453:36:8;;;;;;;;;;;;;;;7329:259;;;;7510:9;7506:82;;-1:-1:-1;;;;;7540:12:8;;;;;;:6;:12;;;;;:23;;:37;;;7506:82;6363:1231;;;;;;;;;:::o;1699:22:15:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1699:22:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1727:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1819:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1819:47:15;;;;-1:-1:-1;;;1819:47:15;;;;;-1:-1:-1;;;1819:47:15;;;;;-1:-1:-1;;;1819:47:15;;;;;-1:-1:-1;;;1819:47:15;;;;;-1:-1:-1;;;1819:47:15;;;;;:::o;416:151:14:-;965:10:12;:8;:10::i;:::-;957:55;;;;;-1:-1:-1;;;957:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;957:55:12;;;;;;;;;;;;;;;513:47:14::1;:30;546:14:::0;513:47:::1;;:::i;:::-;;416:151:::0;:::o;1702:823:10:-;2137:2;534:28;547:2;551:10;534:12;:28::i;:::-;526:64;;;;;-1:-1:-1;;;526:64:10;;;;;;;;;;;;-1:-1:-1;;;526:64:10;;;;;;;;;;;;;;;2180:1:::1;2159:11:::0;;;:7:::1;:11;::::0;;;;:18;2151:48:::1;;;::::0;;-1:-1:-1;;;2151:48:10;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2151:48:10;;;;;;;;;;;;;::::1;;2210:262;2220:2;2242:12;2274:15;2309:14;2343:24;2387:21;2428:9;2457:14;2210:9;:262::i;:::-;2488:30;::::0;;;;;;;2501:2;;2488:30:::1;::::0;;;;;::::1;::::0;;::::1;1702:823:::0;;;;;;;;;:::o;2306:631:8:-;2455:16;2514:3;:10;2495:8;:15;:29;2487:90;;;;-1:-1:-1;;;2487:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2588:30;2635:8;:15;2621:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2621:30:8;;2588:63;;2667:9;2662:238;2686:8;:15;2682:1;:19;2662:238;;;2753:1;-1:-1:-1;;;;;2730:25:8;:8;2739:1;2730:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2730:25:8;;;2722:90;;;;-1:-1:-1;;;2722:90:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2845:7;:15;2853:3;2857:1;2853:6;;;;;;;;;;;;;;2845:15;;;;;;;;;;;:23;;:36;2869:8;2878:1;2869:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2845:36:8;-1:-1:-1;;;;;2845:36:8;;;;;;;;;;;;:44;;;2826:13;2840:1;2826:16;;;;;;;;;;;;;;;;;:63;2703:3;;2662:238;;;-1:-1:-1;2917:13:8;2306:631;-1:-1:-1;;;2306:631:8:o;1424:132:10:-;1499:4;1522:27;1535:2;1539:9;1522:12;:27::i;:::-;1515:34;1424:132;-1:-1:-1;;;1424:132:10:o;696:119:11:-;965:10:12;:8;:10::i;:::-;957:55;;;;;-1:-1:-1;;;957:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;957:55:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;772:17:11::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;772:36:11::1;804:4;772:36;::::0;;696:119::o;952:117::-;965:10:12;:8;:10::i;:::-;957:55;;;;;-1:-1:-1;;;957:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;957:55:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;1025:17:11::1;1057:5;1025:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;1025:37:11::1;::::0;;952:117::o;743:144:10:-;965:10:12;:8;:10::i;:::-;957:55;;;;;-1:-1:-1;;;957:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;957:55:12;;;;;;;;;;;;;;;831:11:10::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;831:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;831:49:10::1;876:4;831:49;::::0;;743:144::o;752:86:12:-;825:6;;-1:-1:-1;;;;;825:6:12;752:86;:::o;3415:296:8:-;3511:10;-1:-1:-1;;;;;3511:22:8;;;;3503:79;;;;-1:-1:-1;;;3503:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3611:10;3592:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;3592:40:8;;;;;;;;;;;;:51;;-1:-1:-1;;3592:51:8;;;;;;;;;;3658:46;;;;;;;3592:40;;3611:10;3658:46;;;;;;;;;;;3415:296;;:::o;1215:116:11:-;1278:4;1301:23;1314:9;1301:12;:23::i;5506:1038::-;493:24;506:10;493:12;:24::i;:::-;485:60;;;;;-1:-1:-1;;;485:60:11;;;;;;;;;;;;-1:-1:-1;;;485:60:11;;;;;;;;;;;;;;;6083:378:::1;6096:9;6128:2;6153:6;6182:8;6213:12;6248:15;6286:14;6323:24;6370:21;6414:9;6446:14;6083:12;:378::i;:::-;6476:61;::::0;;;;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;6476:61:11;::::1;::::0;6511:1:::1;::::0;6491:10:::1;::::0;6476:61:::1;::::0;;;;;;;;;::::1;5506:1038:::0;;;;;;;;;;;:::o;3760:159:7:-;3850:7;3876:36;3893:7;3902:2;3906:5;3876:16;:36::i;:::-;3869:43;3760:159;-1:-1:-1;;;;3760:159:7:o;1056:142:10:-;965:10:12;:8;:10::i;:::-;957:55;;;;;-1:-1:-1;;;957:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;957:55:12;;;;;;;;;;;;;;;1186:5:10::1;1141:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1141:30:10;;::::1;::::0;;:19:::1;::::0;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1141:50:10::1;::::0;;1056:142::o;3992:203:8:-;4083:4;4106:41;4129:7;4138:8;4106:22;:41::i;:::-;:82;;;-1:-1:-1;;;;;;;4151:27:8;;;;;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3992:203::o;1772:41:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1772:41:15;;;;-1:-1:-1;;;1772:41:15;;;;;-1:-1:-1;;;1772:41:15;;;;:::o;4749:1025:8:-;-1:-1:-1;;;;;4951:16:8;;4943:69;;;;-1:-1:-1;;;4943:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5043:18:8;;5051:10;5043:18;;:64;;;5065:34;5082:4;5088:10;5065:16;:34::i;:::-;:42;;5103:4;5065:42;5043:64;5022:166;;;;-1:-1:-1;;;5022:166:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5199:19;5233:1;5221:9;:13;:51;;-1:-1:-1;;;;;5249:12:8;;;;;;:6;:12;;;;;:23;;;5221:51;;;5237:9;5221:51;5199:73;;5310:45;5322:4;5328:2;5332;5336:5;5343:11;5310;:45::i;:::-;5296:11;:59;5282:73;;5404:2;-1:-1:-1;;;;;5371:47:8;5398:4;-1:-1:-1;;;;;5371:47:8;5386:10;-1:-1:-1;;;;;5371:47:8;;5408:2;5412:5;5371:47;;;;;;;;;;;;;;;;;;;;;;;;5429:69;5460:10;5472:4;5478:2;5482;5486:5;5493:4;;5429:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5429:30:8;;-1:-1:-1;;;5429:69:8:i;:::-;5525:1;5513:9;:13;:32;;;;;5544:1;5530:11;:15;5513:32;5509:259;;;5580:39;;5562:12;;5580:10;;5603:11;;5562:12;5580:39;5562:12;5580:39;5603:11;5580:10;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5561:58;;;5641:7;5633:36;;;;;-1:-1:-1;;;5633:36:8;;;;;;;;;;;;-1:-1:-1;;;5633:36:8;;;;;;;;;;;;;;;5509:259;;;;5690:9;5686:82;;-1:-1:-1;;;;;5720:12:8;;;;;;:6;:12;;;;;:23;;:37;;;5686:82;4749:1025;;;;;;;:::o;1179:116:12:-;965:10;:8;:10::i;:::-;957:55;;;;;-1:-1:-1;;;957:55:12;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;957:55:12;;;;;;;;;;;;;;;1260:28:::1;1279:8;1260:18;:28::i;:::-;1179:116:::0;:::o;6771:645:11:-;493:24;506:10;493:12;:24::i;:::-;485:60;;;;;-1:-1:-1;;;485:60:11;;;;;;;;;;;;-1:-1:-1;;;485:60:11;;;;;;;;;;;;;;;6972:1:::1;6951:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;7007:14;:21;6993:3;:10;:35;6951:77;6943:107;;;::::0;;-1:-1:-1;;;6943:107:11;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6943:107:11;;;;;;;;;;;;;::::1;;7066:9;7061:349;7085:3;:10;7081:1;:14;7061:349;;;7116:42;7128:2;7132:3;7136:1;7132:6;;;;;;;;;;;;;;7140:14;7155:1;7140:17;;;;;;;;;;;;;;7116:11;:42::i;:::-;7281:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;7340:6;;-1:-1:-1;;;;;7281:25:11;;::::1;::::0;;7193:10:::1;::::0;7178:221:::1;::::0;7340:3;;7344:1;;7340:6;::::1;;;;;;;;;;;7380:7;:11;7388:2;7380:11;;;;;;;;;;;:18;;;7178:221;;;;;;;;;;;;;;;;;;;;;;;;7097:3;;7061:349;;;;6771:645:::0;;;:::o;2754:772:7:-;2875:12;2906:33;2923:4;2929:2;2933:5;2906:16;:33::i;:::-;2899:40;;2972:4;2957:11;:19;;2949:57;;;;;-1:-1:-1;;;2949:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;3053:68;;;;;;;;;;;-1:-1:-1;;;3053:68:7;;;;;;;;-1:-1:-1;3053:11:7;;;:7;:11;;;;;-1:-1:-1;;;;;3053:25:7;;;;:19;;:25;;;;;;;:33;:68;;3091:5;;3053:37;:68::i;:::-;3017:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3017:25:7;;;;:19;;:25;;;;;:104;3132:28;3146:2;3025;3154:5;3132:13;:28::i;:::-;3176:9;3171:327;3195:11;;;;:7;:11;;;;;:26;;:33;3191:37;;3171:327;;;3249:21;3273:11;;;:7;:11;;;;;:26;;:29;;3300:1;;3273:29;;;;;;;;;;;;;;;;;;3351:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;3273:29:7;;;;-1:-1:-1;3351:36:7;3388:1;;3351:39;;;;;;;;;;;;;;;;;-1:-1:-1;3440:47:7;3481:5;3441:34;:4;3351:39;3441:8;:34::i;:::-;3440:40;;:47::i;:::-;-1:-1:-1;;;;;3404:21:7;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;3230:3:7;3171:327;;;;2754:772;;;;;;;:::o;8122:558:8:-;8365:15;:2;-1:-1:-1;;;;;8365:13:8;;:15::i;:::-;8362:312;;;8523:52;;;-1:-1:-1;;;;;8421:154:8;;8438:2;-1:-1:-1;;;;;8421:43:8;;8465:8;8475:4;8481:3;8486:6;8494:4;8421:78;;;;;;;;;;;;;-1:-1:-1;;;;;8421:78:8;;;;;;-1:-1:-1;;;;;8421:78:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8421:78:8;-1:-1:-1;;;;;;8421:154:8;;8396:267;;;;-1:-1:-1;;;8396:267:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8122:558;;;;;;:::o;1704:93:12:-;1784:6;;-1:-1:-1;;;;;1784:6:12;1770:10;:20;;1704:93::o;313:162:10:-;389:4;412:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;412:30:10;;;;:19;;:30;;;;;:42;;;;;;:56;;;458:10;:8;:10::i;1476:1359:11:-;1895:23;1937:9;1932:120;1956:24;:31;1952:1;:35;1932:120;;;2025:24;2050:1;2025:27;;;;;;;;;;;;;;2006:46;;;;1989:3;;;;;1932:120;;;;2095:1;2071:14;:21;:25;:75;;;;-1:-1:-1;2100:46:11;2071:75;:119;;;;;2166:15;2185:5;2166:24;2071:119;:168;;;;;2234:5;2210:21;:29;2071:168;2063:214;;;;;-1:-1:-1;;;2063:214:11;;;;;;;;;;;;-1:-1:-1;;;2063:214:11;;;;;;;;;;;;;;;2288:11;;;;:7;:11;;;;;;;;:24;;;:39;;;2374:18;;2337:34;;;;:55;;;;2437:18;;;;-1:-1:-1;2402:32:11;;:53;2465:74;;;;;;;2502:15;2465:74;;2519:18;;;;2465:74;;;;:30;;;;:74;;2453:1;2465:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2549:11:11;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;2602:11:11;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;2675:11:11;;;;:7;:11;;;;;;:33;;;:57;;;;2742:21;;;;:33;;-1:-1:-1;;;;2742:33:11;-1:-1:-1;;;2742:33:11;;;;;;;;;;;-1:-1:-1;;;;;;2785:43:11;-1:-1:-1;;;;;2785:43:11;;;;;;;;;;-1:-1:-1;;;;1476:1359:11:o;307:137::-;-1:-1:-1;;;;;394:17:11;;371:4;394:17;;;:6;:17;;;;;:29;;;;:43;;;427:10;:8;:10::i;2842:1165::-;3424:11;;;;:7;:11;;;;;:18;:23;:37;;;;;3460:1;3451:6;:10;3424:37;3416:67;;;;;-1:-1:-1;;;3416:67:11;;;;;;;;;;;;-1:-1:-1;;;3416:67:11;;;;;;;;;;;;;;;3515:6;3494:7;:11;3502:2;3494:11;;;;;;;;;;;:18;;:27;;;;3554:8;3531:7;:11;3539:2;3531:11;;;;;;;;;;;:20;;:31;;;;3618:4;3572:7;:11;3580:2;3572:11;;;;;;;;;;;:19;;:31;3592:10;-1:-1:-1;;;;;3572:31:11;-1:-1:-1;;;;;3572:31:11;;;;;;;;;;;;:43;;;:50;;;;;;;;;;;;;;;;;;3676:4;3632:7;:11;3640:2;3632:11;;;;;;;;;;;:19;;:30;3652:9;-1:-1:-1;;;;;3632:30:11;-1:-1:-1;;;;;3632:30:11;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;3691:262;3701:2;3723:12;3755:15;3790:14;3824:24;3868:21;3909:9;3938:14;3691:9;:262::i;:::-;3964:36;3978:9;3989:2;3993:6;3964:13;:36::i;:::-;2842:1165;;;;;;;;;;;:::o;1347:1318:7:-;1440:7;1551:11;;;:7;:11;;;;;:30;;:37;1440:7;;1511:15;;-1:-1:-1;;1551:41:7;1537:835;1622:19;1644:11;;;:7;:11;;;;;:30;;:33;;1675:1;;1644:33;;;;;;;;;;;;;;;;;;:36;;1694:12;1709:11;;;:7;:11;;;;;:30;;:33;;1644:36;;-1:-1:-1;1694:12:7;;1740:1;;1709:33;;;;;;;;;;;;;;;;1743:1;1709:36;;;;;;;;;1759:19;1797:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1797:28:7;;;;:19;;:28;;;;;:37;;;1709:36;;-1:-1:-1;1759:19:7;1797:52;-1:-1:-1;1793:569:7;;1899:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1899:28:7;;;;:19;;:28;;;;;:37;;;1883:66;;1943:5;;1884:53;;:10;;:14;:53::i;1883:66::-;1869:80;-1:-1:-1;1971:16:7;1967:37;;-1:-1:-1;2003:1:7;1967:37;2035:34;2063:5;2036:21;:11;2052:4;2036:15;:21::i;:::-;2035:27;;:34::i;:::-;2022:47;;;;2087:5;;;;;1793:569;2145:40;2179:5;2146:27;:10;2161:11;2146:14;:27::i;2145:40::-;2131:54;-1:-1:-1;2207:16:7;2203:37;;-1:-1:-1;2239:1:7;2203:37;2271:11;;-1:-1:-1;2271:11:7;;2313:34;2341:5;2314:21;:11;2330:4;2314:15;:21::i;2313:34::-;2300:47;;;;-1:-1:-1;;;;;1602:3:7;1537:835;;;-1:-1:-1;2429:11:7;;;;:7;:11;;;;;:20;;;2411:39;;:9;;2425:2;:24;2411:13;:39::i;:::-;2500:17;2531:11;;;:7;:11;;;;;:32;;;2399:51;;-1:-1:-1;2500:17:7;2520:56;;2570:5;;2521:43;;:5;;:9;:43::i;2520:56::-;2608:11;;;;:7;:11;;;;;:34;;;2500:76;;-1:-1:-1;2594:64:7;;2608:49;;2500:76;2608:38;:49::i;:::-;2594:9;;:13;:64::i;:::-;2587:71;1347:1318;-1:-1:-1;;;;;;;1347:1318:7:o;573:516:14:-;663:4;;679:382;703:37;699:1;:41;679:382;;;810:1;765:30;796:1;765:33;;;;;;;;;-1:-1:-1;;;;;765:33:14;:47;761:290;;832:27;876:30;907:1;876:33;;;;;;;;;940:30;;;-1:-1:-1;;;940:30:14;;-1:-1:-1;;;;;940:30:14;;;;;;;;;876:33;;;;-1:-1:-1;932:51:14;;;;876:33;;940:21;;:30;;;;;;;;;;;;;;876:33;940:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:30:14;-1:-1:-1;;;;;932:51:14;;928:109;;;1014:4;1007:11;;;;;;928:109;761:290;;742:3;;679:382;;;-1:-1:-1;1077:5:14;;573:516;-1:-1:-1;;;573:516:14:o;7600::8:-;7818:15;:2;-1:-1:-1;;;;;7818:13:8;;:15::i;:::-;7815:295;;;7969:47;;;-1:-1:-1;;;;;7874:142:8;;7891:2;-1:-1:-1;;;;;7874:38:8;;7913:8;7923:4;7929:2;7933:5;7940:4;7874:71;;;;;;;;;;;;;-1:-1:-1;;;;;7874:71:8;;;;;;-1:-1:-1;;;;;7874:71:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7874:71:8;-1:-1:-1;;;;;;7874:142:8;;7849:250;;;;-1:-1:-1;;;7849:250:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:225:12;-1:-1:-1;;;;;1469:22:12;;1461:73;;;;-1:-1:-1;;;1461:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:6;;1549:38;;-1:-1:-1;;;;;1549:38:12;;;;1570:6;;1549:38;;1570:6;;1549:38;1597:6;:17;;-1:-1:-1;;;;;;1597:17:12;-1:-1:-1;;;;;1597:17:12;;;;;;;;;;1396:225::o;4013:766:11:-;4117:11;;;;:7;:11;;;;;:22;;:25;;4104:668;;4117:11;:25;;;;;;;;;;;;;;;;4195:11;;;:7;:11;;;;;;;:18;;4117:25;4236:20;;;4104:668;;;;;;;4339:34;;;;4104:668;;4398:32;;;;4104:668;;;;4455:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;4117:25:11;;;;4165:7;;4195:18;;4236:20;;4279:12;;4104:668;;;;;;4455:30;4117:25;4455:33;;;;;;;;;;;;;;4489:1;4455:36;;;;;;;;;4104:668;;4537:11;;;;:7;:11;;;;;;;;;:26;;4104:668;;;;;;;;;;;;;;;;;4537:26;;4104:668;;4537:26;4104:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4104:668:11;;;;;;;;;;;;;;;;-1:-1:-1;;;4586:11:11;;;;:7;:11;;;;;;;;;:36;;4104:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;4586:36:11;-1:-1:-1;4104:668:11;;4586:36;4104:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4645:11:11;;;;:7;:11;;;;;:33;;;;4701:21;;;;;4645:33;;-1:-1:-1;4701:21:11;-1:-1:-1;;;4701:21:11;;;;-1:-1:-1;;;;;;4745:26:11;4104:12;:668::i;:::-;4013:766;;;:::o;1877:187:17:-;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:17;;;1877:187::o;301:1006:7:-;397:18;418:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;418:30:7;;;;:19;;:30;;;;;:38;:49;;461:5;418:42;:49::i;:::-;482:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;482:30:7;;;;:19;;:30;;;;;:38;397:70;;-1:-1:-1;478:761:7;;547:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;547:30:7;;;;:19;;:30;;;;;:39;;;;;;;;542:225;;-1:-1:-1;;;;;606:17:7;;;;;;:6;:17;;;;;;;;:24;;:33;;;;;;;;;;;;;;;;;;657:11;;;:7;:11;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;657:38:7;;;;;713:30;;;;:19;;;;:30;;542:225;781:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;781:30:7;;;;:19;;:30;;;;;823:15;781:39;;;;:57;478:761;;;949:20;992:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;992:30:7;;;;:19;;:30;;;;;:39;;;972:60;;:15;;:19;:60::i;:::-;1046:19;1069:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1069:30:7;;;;:19;;:30;;;;;:38;949:83;;-1:-1:-1;1046:19:7;1068:74;;1131:10;;1069:56;;949:83;1069:42;:56::i;1068:74::-;1157:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1157:30:7;;;;:19;;:30;;;;;1199:15;:29;;;;1157:39;;;;:71;-1:-1:-1;;478:761:7;1249:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1249:30:7;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;301:1006:7:o;2304:459:17:-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:17;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:130;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;590:797:16:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:16;;;1329:51;-1:-1:-1;;590:797:16:o;1307:134:17:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;867:176::-;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:17;;;;;;;;;;;;;;;;;;;;;;;;;;;3969:338;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:17:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.7.1;\n\nimport \"../utils/SafeMath.sol\";\nimport './Mintable.sol';\n\n\ncontract Maintenable is Mintable {\n\n    using SafeMath for uint256;\n\n\n    /***************************************\n    PERMISSIONS\n    ****************************************/\n\n\n    function _isMaintener(uint256 id, address maintener) internal view returns (bool) {\n        return _tokens[id].holders[maintener].isMaintener || _isOwner();\n    }\n\n    modifier onlyMaintener(uint256 id) {\n        require(_isMaintener(id, msg.sender), \"Insufficient permission\");\n        _;\n    }\n\n    /**\n     * @dev Function to authorize an address to maintain a token.\n     * @param maintener The authorized address\n     */\n    function authorizeMaintener(uint256 id, address maintener) external onlyOwner {\n        _tokens[id].holders[maintener].isMaintener = true;\n    }\n\n    /**\n     * @dev Function to revoke the authorization to maintain a token.\n     * @param id the token id\n     * @param maintener The authorized address\n     */\n    function revokeMaintener(uint256 id, address maintener) external onlyOwner {\n        _tokens[id].holders[maintener].isMaintener = false;\n    }\n\n    /**\n     * @dev Function to check if an address is authorized to maintain a token.\n     * @param id the token id\n     * @param maintener The authorized address\n     * @return true if it's a maintener address\n     */\n    function isMaintener(uint256 id, address maintener) external view returns (bool) {\n        return _isMaintener(id, maintener);\n    }\n\n\n    /***************************************\n    TOKENS CREATION AND MAINTENANCE FUNCTIONS\n    ****************************************/\n\n\n    function updateToken(uint256 id,\n                         uint256 metadataHash,\n                         uint256[3] memory transactionFees,\n                         address[] memory feesRecipients,\n                         uint256[] memory feesRecipientsPercentage,\n                         uint256 minHoldingForCallback,\n                         bool isPrivate,\n                         address legalAuthority) external onlyMaintener(id) {\n        require(_tokens[id].supply > 0, \"Unknown token\");\n\n        _setToken(id,\n                  metadataHash,\n                  transactionFees,\n                  feesRecipients,\n                  feesRecipientsPercentage,\n                  minHoldingForCallback,\n                  isPrivate,\n                  legalAuthority);\n\n        emit TokenUpdated(id, metadataHash);\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
    "exportedSymbols": {
      "Maintenable": [
        2469
      ]
    },
    "id": 2470,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2314,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:10"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol",
        "file": "../utils/SafeMath.sol",
        "id": 2315,
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 3623,
        "src": "71:31:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol",
        "file": "./Mintable.sol",
        "id": 2316,
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 2991,
        "src": "103:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2317,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2990,
              "src": "154:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$2990",
                "typeString": "contract Mintable"
              }
            },
            "id": 2318,
            "nodeType": "InheritanceSpecifier",
            "src": "154:8:10"
          }
        ],
        "contractDependencies": [
          259,
          321,
          344,
          1492,
          2080,
          2990,
          3082,
          3259,
          3379
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2469,
        "linearizedBaseContracts": [
          2469,
          2990,
          2080,
          3259,
          3082,
          344,
          1492,
          3379,
          259,
          321
        ],
        "name": "Maintenable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2321,
            "libraryName": {
              "id": 2319,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3622,
              "src": "176:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3622",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "170:27:10",
            "typeName": {
              "id": 2320,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "189:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2341,
              "nodeType": "Block",
              "src": "395:80:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2330,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3364,
                              "src": "412:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3319_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 2332,
                            "indexExpression": {
                              "id": 2331,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2323,
                              "src": "420:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "412:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3319_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 2333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3304,
                          "src": "412:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3282_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 2335,
                        "indexExpression": {
                          "id": 2334,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2325,
                          "src": "432:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "412:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3282_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 2336,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3277,
                      "src": "412:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2337,
                        "name": "_isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3081,
                        "src": "458:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "458:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "412:56:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2329,
                  "id": 2340,
                  "nodeType": "Return",
                  "src": "405:63:10"
                }
              ]
            },
            "id": 2342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "335:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2325,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "347:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "334:31:10"
            },
            "returnParameters": {
              "id": 2329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2328,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "389:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2327,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:6:10"
            },
            "scope": 2469,
            "src": "313:162:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2356,
              "nodeType": "Block",
              "src": "516:92:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2348,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2344,
                            "src": "547:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 2349,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "551:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "551:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2347,
                          "name": "_isMaintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2342,
                          "src": "534:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,address) view returns (bool)"
                          }
                        },
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "534:28:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e74207065726d697373696f6e",
                        "id": 2352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "564:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        },
                        "value": "Insufficient permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        }
                      ],
                      "id": 2346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "526:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2354,
                  "nodeType": "ExpressionStatement",
                  "src": "526:64:10"
                },
                {
                  "id": 2355,
                  "nodeType": "PlaceholderStatement",
                  "src": "600:1:10"
                }
              ]
            },
            "id": 2357,
            "name": "onlyMaintener",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2344,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "504:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "503:12:10"
            },
            "src": "481:127:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2377,
              "nodeType": "Block",
              "src": "821:66:10",
              "statements": [
                {
                  "expression": {
                    "id": 2375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2367,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3364,
                              "src": "831:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3319_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 2369,
                            "indexExpression": {
                              "id": 2368,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2360,
                              "src": "839:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "831:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3319_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 2370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3304,
                          "src": "831:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3282_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 2372,
                        "indexExpression": {
                          "id": 2371,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2362,
                          "src": "851:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "831:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3282_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 2373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3277,
                      "src": "831:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "876:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "831:49:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2376,
                  "nodeType": "ExpressionStatement",
                  "src": "831:49:10"
                }
              ]
            },
            "documentation": {
              "id": 2358,
              "nodeType": "StructuredDocumentation",
              "src": "614:124:10",
              "text": " @dev Function to authorize an address to maintain a token.\n @param maintener The authorized address"
            },
            "functionSelector": "8aeba37e",
            "id": 2378,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2365,
                "modifierName": {
                  "id": 2364,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3029,
                  "src": "811:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "811:9:10"
              }
            ],
            "name": "authorizeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2360,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "771:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2362,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "783:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "783:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "770:31:10"
            },
            "returnParameters": {
              "id": 2366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "821:0:10"
            },
            "scope": 2469,
            "src": "743:144:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2398,
              "nodeType": "Block",
              "src": "1131:67:10",
              "statements": [
                {
                  "expression": {
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2388,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3364,
                              "src": "1141:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3319_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 2390,
                            "indexExpression": {
                              "id": 2389,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2381,
                              "src": "1149:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1141:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3319_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 2391,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3304,
                          "src": "1141:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3282_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 2393,
                        "indexExpression": {
                          "id": 2392,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2383,
                          "src": "1161:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1141:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3282_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 2394,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3277,
                      "src": "1141:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1186:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1141:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "1141:50:10"
                }
              ]
            },
            "documentation": {
              "id": 2379,
              "nodeType": "StructuredDocumentation",
              "src": "893:158:10",
              "text": " @dev Function to revoke the authorization to maintain a token.\n @param id the token id\n @param maintener The authorized address"
            },
            "functionSelector": "d41d0aa3",
            "id": 2399,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2386,
                "modifierName": {
                  "id": 2385,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3029,
                  "src": "1121:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1121:9:10"
              }
            ],
            "name": "revokeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2381,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1081:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2383,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1093:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1080:31:10"
            },
            "returnParameters": {
              "id": 2387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1131:0:10"
            },
            "scope": 2469,
            "src": "1056:142:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2414,
              "nodeType": "Block",
              "src": "1505:51:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2410,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2402,
                        "src": "1535:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2411,
                        "name": "maintener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2404,
                        "src": "1539:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2409,
                      "name": "_isMaintener",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2342,
                      "src": "1522:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2408,
                  "id": 2413,
                  "nodeType": "Return",
                  "src": "1515:34:10"
                }
              ]
            },
            "documentation": {
              "id": 2400,
              "nodeType": "StructuredDocumentation",
              "src": "1204:215:10",
              "text": " @dev Function to check if an address is authorized to maintain a token.\n @param id the token id\n @param maintener The authorized address\n @return true if it's a maintener address"
            },
            "functionSelector": "5dafec1b",
            "id": 2415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1445:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2404,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1457:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1444:31:10"
            },
            "returnParameters": {
              "id": 2408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2407,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1499:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2406,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:6:10"
            },
            "scope": 2469,
            "src": "1424:132:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2467,
              "nodeType": "Block",
              "src": "2141:384:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2442,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3364,
                              "src": "2159:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3319_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 2444,
                            "indexExpression": {
                              "id": 2443,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2417,
                              "src": "2167:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2159:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3319_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 2445,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3284,
                          "src": "2159:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2180:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2159:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6b6e6f776e20746f6b656e",
                        "id": 2448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2183:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        },
                        "value": "Unknown token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        }
                      ],
                      "id": 2441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2151:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2151:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2450,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:48:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2452,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "2220:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2453,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2419,
                        "src": "2242:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2454,
                        "name": "transactionFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2423,
                        "src": "2274:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "id": 2455,
                        "name": "feesRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2426,
                        "src": "2309:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2456,
                        "name": "feesRecipientsPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "2343:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2457,
                        "name": "minHoldingForCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "2387:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2458,
                        "name": "isPrivate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2433,
                        "src": "2428:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2459,
                        "name": "legalAuthority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2435,
                        "src": "2457:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2451,
                      "name": "_setToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2692,
                      "src": "2210:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256[3] memory,address[] memory,uint256[] memory,uint256,bool,address)"
                      }
                    },
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:262:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2461,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:262:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2463,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "2501:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2464,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2419,
                        "src": "2505:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2462,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3378,
                      "src": "2488:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2466,
                  "nodeType": "EmitStatement",
                  "src": "2483:35:10"
                }
              ]
            },
            "functionSelector": "4ab0d253",
            "id": 2468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2438,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2417,
                    "src": "2137:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2439,
                "modifierName": {
                  "id": 2437,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2357,
                  "src": "2123:13:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2123:17:10"
              }
            ],
            "name": "updateToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2417,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1723:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2419,
                  "mutability": "mutable",
                  "name": "metadataHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1760:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2423,
                  "mutability": "mutable",
                  "name": "transactionFees",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1807:33:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2420,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1807:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2422,
                    "length": {
                      "hexValue": "33",
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1815:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1807:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2426,
                  "mutability": "mutable",
                  "name": "feesRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1867:31:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2424,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1867:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2425,
                    "nodeType": "ArrayTypeName",
                    "src": "1867:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "feesRecipientsPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1925:41:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2427,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1925:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2428,
                    "nodeType": "ArrayTypeName",
                    "src": "1925:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "minHoldingForCallback",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1993:29:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2433,
                  "mutability": "mutable",
                  "name": "isPrivate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2049:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2432,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2435,
                  "mutability": "mutable",
                  "name": "legalAuthority",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2090:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1722:391:10"
            },
            "returnParameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:0:10"
            },
            "scope": 2469,
            "src": "1702:823:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2470,
        "src": "130:2398:10"
      }
    ],
    "src": "46:2483:10"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
    "exportedSymbols": {
      "Maintenable": [
        2469
      ]
    },
    "id": 2470,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2314,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:10"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol",
        "file": "../utils/SafeMath.sol",
        "id": 2315,
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 3623,
        "src": "71:31:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol",
        "file": "./Mintable.sol",
        "id": 2316,
        "nodeType": "ImportDirective",
        "scope": 2470,
        "sourceUnit": 2991,
        "src": "103:24:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2317,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2990,
              "src": "154:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$2990",
                "typeString": "contract Mintable"
              }
            },
            "id": 2318,
            "nodeType": "InheritanceSpecifier",
            "src": "154:8:10"
          }
        ],
        "contractDependencies": [
          259,
          321,
          344,
          1492,
          2080,
          2990,
          3082,
          3259,
          3379
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2469,
        "linearizedBaseContracts": [
          2469,
          2990,
          2080,
          3259,
          3082,
          344,
          1492,
          3379,
          259,
          321
        ],
        "name": "Maintenable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2321,
            "libraryName": {
              "id": 2319,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3622,
              "src": "176:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3622",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "170:27:10",
            "typeName": {
              "id": 2320,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "189:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2341,
              "nodeType": "Block",
              "src": "395:80:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2330,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3364,
                              "src": "412:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3319_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 2332,
                            "indexExpression": {
                              "id": 2331,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2323,
                              "src": "420:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "412:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3319_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 2333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3304,
                          "src": "412:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3282_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 2335,
                        "indexExpression": {
                          "id": 2334,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2325,
                          "src": "432:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "412:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3282_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 2336,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3277,
                      "src": "412:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2337,
                        "name": "_isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3081,
                        "src": "458:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "458:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "412:56:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2329,
                  "id": 2340,
                  "nodeType": "Return",
                  "src": "405:63:10"
                }
              ]
            },
            "id": 2342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2323,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "335:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2325,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "347:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "334:31:10"
            },
            "returnParameters": {
              "id": 2329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2328,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2342,
                  "src": "389:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2327,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:6:10"
            },
            "scope": 2469,
            "src": "313:162:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2356,
              "nodeType": "Block",
              "src": "516:92:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2348,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2344,
                            "src": "547:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 2349,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "551:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "551:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2347,
                          "name": "_isMaintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2342,
                          "src": "534:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,address) view returns (bool)"
                          }
                        },
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "534:28:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e74207065726d697373696f6e",
                        "id": 2352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "564:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        },
                        "value": "Insufficient permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        }
                      ],
                      "id": 2346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "526:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2354,
                  "nodeType": "ExpressionStatement",
                  "src": "526:64:10"
                },
                {
                  "id": 2355,
                  "nodeType": "PlaceholderStatement",
                  "src": "600:1:10"
                }
              ]
            },
            "id": 2357,
            "name": "onlyMaintener",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2344,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2357,
                  "src": "504:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "503:12:10"
            },
            "src": "481:127:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2377,
              "nodeType": "Block",
              "src": "821:66:10",
              "statements": [
                {
                  "expression": {
                    "id": 2375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2367,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3364,
                              "src": "831:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3319_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 2369,
                            "indexExpression": {
                              "id": 2368,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2360,
                              "src": "839:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "831:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3319_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 2370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3304,
                          "src": "831:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3282_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 2372,
                        "indexExpression": {
                          "id": 2371,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2362,
                          "src": "851:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "831:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3282_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 2373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3277,
                      "src": "831:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "876:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "831:49:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2376,
                  "nodeType": "ExpressionStatement",
                  "src": "831:49:10"
                }
              ]
            },
            "documentation": {
              "id": 2358,
              "nodeType": "StructuredDocumentation",
              "src": "614:124:10",
              "text": " @dev Function to authorize an address to maintain a token.\n @param maintener The authorized address"
            },
            "functionSelector": "8aeba37e",
            "id": 2378,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2365,
                "modifierName": {
                  "id": 2364,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3029,
                  "src": "811:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "811:9:10"
              }
            ],
            "name": "authorizeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2360,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "771:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2362,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "783:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "783:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "770:31:10"
            },
            "returnParameters": {
              "id": 2366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "821:0:10"
            },
            "scope": 2469,
            "src": "743:144:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2398,
              "nodeType": "Block",
              "src": "1131:67:10",
              "statements": [
                {
                  "expression": {
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2388,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3364,
                              "src": "1141:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3319_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 2390,
                            "indexExpression": {
                              "id": 2389,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2381,
                              "src": "1149:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1141:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3319_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 2391,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3304,
                          "src": "1141:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$3282_storage_$",
                            "typeString": "mapping(address => struct StashBloxData.Holder storage ref)"
                          }
                        },
                        "id": 2393,
                        "indexExpression": {
                          "id": 2392,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2383,
                          "src": "1161:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1141:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$3282_storage",
                          "typeString": "struct StashBloxData.Holder storage ref"
                        }
                      },
                      "id": 2394,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3277,
                      "src": "1141:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1186:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1141:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "1141:50:10"
                }
              ]
            },
            "documentation": {
              "id": 2379,
              "nodeType": "StructuredDocumentation",
              "src": "893:158:10",
              "text": " @dev Function to revoke the authorization to maintain a token.\n @param id the token id\n @param maintener The authorized address"
            },
            "functionSelector": "d41d0aa3",
            "id": 2399,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2386,
                "modifierName": {
                  "id": 2385,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3029,
                  "src": "1121:9:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1121:9:10"
              }
            ],
            "name": "revokeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2381,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1081:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2383,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2399,
                  "src": "1093:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1080:31:10"
            },
            "returnParameters": {
              "id": 2387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1131:0:10"
            },
            "scope": 2469,
            "src": "1056:142:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2414,
              "nodeType": "Block",
              "src": "1505:51:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2410,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2402,
                        "src": "1535:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2411,
                        "name": "maintener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2404,
                        "src": "1539:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2409,
                      "name": "_isMaintener",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2342,
                      "src": "1522:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:27:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2408,
                  "id": 2413,
                  "nodeType": "Return",
                  "src": "1515:34:10"
                }
              ]
            },
            "documentation": {
              "id": 2400,
              "nodeType": "StructuredDocumentation",
              "src": "1204:215:10",
              "text": " @dev Function to check if an address is authorized to maintain a token.\n @param id the token id\n @param maintener The authorized address\n @return true if it's a maintener address"
            },
            "functionSelector": "5dafec1b",
            "id": 2415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2402,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1445:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1445:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2404,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1457:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1457:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1444:31:10"
            },
            "returnParameters": {
              "id": 2408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2407,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2415,
                  "src": "1499:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2406,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1499:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1498:6:10"
            },
            "scope": 2469,
            "src": "1424:132:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2467,
              "nodeType": "Block",
              "src": "2141:384:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2442,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3364,
                              "src": "2159:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$3319_storage_$",
                                "typeString": "mapping(uint256 => struct StashBloxData.Token storage ref)"
                              }
                            },
                            "id": 2444,
                            "indexExpression": {
                              "id": 2443,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2417,
                              "src": "2167:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2159:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$3319_storage",
                              "typeString": "struct StashBloxData.Token storage ref"
                            }
                          },
                          "id": 2445,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3284,
                          "src": "2159:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2180:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2159:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6b6e6f776e20746f6b656e",
                        "id": 2448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2183:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        },
                        "value": "Unknown token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        }
                      ],
                      "id": 2441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2151:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2151:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2450,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:48:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2452,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "2220:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2453,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2419,
                        "src": "2242:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2454,
                        "name": "transactionFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2423,
                        "src": "2274:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "id": 2455,
                        "name": "feesRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2426,
                        "src": "2309:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2456,
                        "name": "feesRecipientsPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "2343:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2457,
                        "name": "minHoldingForCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "2387:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2458,
                        "name": "isPrivate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2433,
                        "src": "2428:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2459,
                        "name": "legalAuthority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2435,
                        "src": "2457:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2451,
                      "name": "_setToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2692,
                      "src": "2210:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256[3] memory,address[] memory,uint256[] memory,uint256,bool,address)"
                      }
                    },
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:262:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2461,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:262:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2463,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2417,
                        "src": "2501:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2464,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2419,
                        "src": "2505:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2462,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3378,
                      "src": "2488:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2466,
                  "nodeType": "EmitStatement",
                  "src": "2483:35:10"
                }
              ]
            },
            "functionSelector": "4ab0d253",
            "id": 2468,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2438,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2417,
                    "src": "2137:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2439,
                "modifierName": {
                  "id": 2437,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2357,
                  "src": "2123:13:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2123:17:10"
              }
            ],
            "name": "updateToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2417,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1723:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2419,
                  "mutability": "mutable",
                  "name": "metadataHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1760:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2423,
                  "mutability": "mutable",
                  "name": "transactionFees",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1807:33:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2420,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1807:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2422,
                    "length": {
                      "hexValue": "33",
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1815:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1807:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2426,
                  "mutability": "mutable",
                  "name": "feesRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1867:31:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2424,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1867:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2425,
                    "nodeType": "ArrayTypeName",
                    "src": "1867:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "feesRecipientsPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1925:41:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2427,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1925:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2428,
                    "nodeType": "ArrayTypeName",
                    "src": "1925:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "minHoldingForCallback",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "1993:29:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2433,
                  "mutability": "mutable",
                  "name": "isPrivate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2049:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2432,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2435,
                  "mutability": "mutable",
                  "name": "legalAuthority",
                  "nodeType": "VariableDeclaration",
                  "scope": 2468,
                  "src": "2090:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1722:391:10"
            },
            "returnParameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:0:10"
            },
            "scope": 2469,
            "src": "1702:823:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2470,
        "src": "130:2398:10"
      }
    ],
    "src": "46:2483:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-20T17:55:09.275Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setProxyRegistryAddress(address[10])": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddresses": "List of addresses"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}