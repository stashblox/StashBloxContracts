{
  "contractName": "Maintenable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_documentHash",
          "type": "uint256"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "_values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_callbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "escrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "callCounter",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "documentHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needLegalApproval",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "approvedByLegal",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "refused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "accepted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_config",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "callbackAutoExecuteMaxAddresses",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "versionRecipient",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "GSNTrustedForwarder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proxyRegistryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lumpSumTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "valueTransactionFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isTokenizer",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLocked",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "ETHBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "authorizeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "averageAge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "metadataHashes",
          "type": "uint256[]"
        }
      ],
      "name": "cloneToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "createToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "isTokenizer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenizer",
          "type": "address"
        }
      ],
      "name": "revokeTokenizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        }
      ],
      "name": "setProxyRegistryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transactionFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "authorizeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "revokeMaintener",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "maintener",
          "type": "address"
        }
      ],
      "name": "isMaintener",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "metadataHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[3]",
          "name": "transactionFees",
          "type": "uint256[3]"
        },
        {
          "internalType": "address[]",
          "name": "feesRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feesRecipientsPercentage",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minHoldingForCallback",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isPrivate",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "legalAuthority",
          "type": "address"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_documentHash\",\"type\":\"uint256\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_callbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"escrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"callCounter\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"documentHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needLegalApproval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"approvedByLegal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"refused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"accepted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_config\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"callbackAutoExecuteMaxAddresses\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"versionRecipient\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"GSNTrustedForwarder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proxyRegistryAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lumpSumTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valueTransactionFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isTokenizer\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"ETHBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"authorizeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"authorizeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"averageAge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"metadataHashes\",\"type\":\"uint256[]\"}],\"name\":\"cloneToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"createToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"isMaintener\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"isTokenizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maintener\",\"type\":\"address\"}],\"name\":\"revokeMaintener\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenizer\",\"type\":\"address\"}],\"name\":\"revokeTokenizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"}],\"name\":\"setProxyRegistryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transactionFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"metadataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"transactionFees\",\"type\":\"uint256[3]\"},{\"internalType\":\"address[]\",\"name\":\"feesRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feesRecipientsPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minHoldingForCallback\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPrivate\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"legalAuthority\",\"type\":\"address\"}],\"name\":\"updateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeMaintener(uint256,address)\":{\"details\":\"Function to authorize an address to maintain a token.\",\"params\":{\"maintener\":\"The authorized address\"}},\"authorizeTokenizer(address)\":{\"details\":\"Function to authorize an address to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"averageAge(address,uint256)\":{\"details\":\"Function to get the average age of the token for the given address.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\"},\"returns\":{\"_0\":\"average age in seconds\"}},\"balanceOf(address,uint256)\":{\"details\":\"Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.\",\"params\":{\"account\":\"The address of the token holder\",\"id\":\"ID of the token\"},\"returns\":{\"_0\":\"The account's balance of the token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.\",\"params\":{\"accounts\":\"The addresses of the token holders\",\"ids\":\"IDs of the tokens\"},\"returns\":{\"_0\":\"Balances for each account and token id pair\"}},\"cloneToken(uint256,uint256[],uint256[])\":{\"details\":\"Function to mint tokens in batch.\",\"params\":{\"id\":\"Identifier of the template\",\"ids\":\"list of IDs of the tokens to be minted\",\"metadataHashes\":\"list of metadata file hashes\"}},\"createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to mint an amount of a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be minted\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"recipient\":\"The address that will own the minted tokens\",\"supply\":\"Amount of the token to be minted\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"account\":\"The account of the Tokens\",\"operator\":\"Address of authorized operator\"},\"returns\":{\"_0\":\"True if the operator is approved, false if not\"}},\"isMaintener(uint256,address)\":{\"details\":\"Function to check if an address is authorized to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"},\"returns\":{\"_0\":\"true if it's a maintener address\"}},\"isTokenizer(address)\":{\"details\":\"Function to check if an address is authorized to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"revokeMaintener(uint256,address)\":{\"details\":\"Function to revoke the authorization to maintain a token.\",\"params\":{\"id\":\"the token id\",\"maintener\":\"The authorized address\"}},\"revokeTokenizer(address)\":{\"details\":\"Function to revoke the authorization to create a token.\",\"params\":{\"tokenizer\":\"The authorized address\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"ids\":\"IDs of each token type\",\"to\":\"Target address\",\"values\":\"Transfer amounts per token type\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.\",\"params\":{\"data\":\"Data forwarded to `onERC1155Received` if `to` is a contract receiver\",\"from\":\"Source address\",\"id\":\"ID of the token type\",\"to\":\"Target address\",\"value\":\"Transfer amount\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"address to set the approval\"}},\"setProxyRegistryAddress(address)\":{\"details\":\"Function to update the operator whitelist\",\"params\":{\"proxyAddress\":\"Proxy address\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}},\"transactionFees(address,uint256,uint256)\":{\"details\":\"Function to get the transaction price to transfer tokens.\",\"params\":{\"account\":\"the address from where to transfer the tokens\",\"id\":\"The token ID\",\"value\":\"The amount to transfer\"},\"returns\":{\"_0\":\"transfer price\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)\":{\"details\":\"Function to update a token with the given ID.\",\"params\":{\"feesRecipients\":\"list of addresses receiving transfer fees\",\"feesRecipientsPercentage\":\"list of percentage, each one for the corresponding feesRecipients\",\"id\":\"ID of the token to be updated\",\"isPrivate\":\"true if holder need approval\",\"legalAuthority\":\"address of the legal authority\",\"metadataHash\":\"Metadata file hash\",\"minHoldingForCallback\":\"minimum holding to propose a callback\",\"transactionFees\":\"transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\"}},\"uri(uint256)\":{\"params\":{\"id\":\"Token ID\"},\"returns\":{\"_0\":\"URI string\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given account.\"},\"isTrustedForwarder(address)\":{\"notice\":\"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":\"Maintenable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xe0121db1d8ff46e6f422f69cb0e2d826b6b3fc701ee2af64644965ed3e527f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70bf80157d73b53af3e3fe94f1b995fa521bb143a44ae79b6c2d3d923a59b331\",\"dweb:/ipfs/QmNPwXgdkYJcZofamebRCqiDPtMRqhaQsyRBeqUd2841YV\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Metadata.sol\":{\"keccak256\":\"0x121c132f1a15fafd91c187380702cb32d60beab1a4054670efc987e36bc2b70f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://425182c1ecd27456fc2f1c3fd82444b17a13f2e4e503bb3f7b973e83d2ceb1bb\",\"dweb:/ipfs/QmU54fpZCpdGtjUAbQkr4cYikCzKKQqjS3LPNQpYpJXiA8\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC1155Receiver.sol\":{\"keccak256\":\"0xa2e894006f84deca9f9d37735ce39044f101b5d035cb5e21242c55e52de6e881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2444dcc76058c4d324fde1a42484f86cacaf2348faabfd334bb053c435082b64\",\"dweb:/ipfs/Qmb94fe1Y1Wqq6h9pxpCfsn58ZMdjGSmJ5hC5Ex2yB1gNm\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x1588ef316db84c168b02bc9a38926a11fae69741da7dacb4314631318b90e777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d51ab1e9deae9cac01eb549b89a1d11410c12301933d1679bdfd5e5ab8ff691\",\"dweb:/ipfs/QmdQW8fZkocPQxNQm6wgse6k3Mqt87sS8QiQFE96U6rkGj\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x7d35a40f601c5245c540eb35f11a2227389b965acdee1abab1c88c7360c10050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9fb40310238de5d7a8b39154b1baff899f089984f62ed052ec07f86b9d5603ba\",\"dweb:/ipfs/QmQBLGwAEiAFQpJC6d61qgGDi1n93v2eWKAaRABhckNzW3\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/interfaces/IRelayRecipient.sol\":{\"keccak256\":\"0xd73f72cf3f4a2f4cde3e8f3950d60202e1aa89405e5aaedf971ced063261edd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e01873a56115a6f3f1f6ce5dee198bbc2023ed36178ad693099de8b24baf2074\",\"dweb:/ipfs/QmQ4B48S3idc1CQtZyzQV3HH5tYPLk3ncRtS2ovUWxFsqW\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/ChargeableTransfer.sol\":{\"keccak256\":\"0xcdcde4ba36ac03653ff34931b8e89a657f6f156f15d9bf376cf5925c7611ed62\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://00cbe945c44ff218abbc143095cf9286f5fc5f3a24467049d7c3cbdc61bec29f\",\"dweb:/ipfs/QmRAWFt5KTo6THg45BcmZbPJYhHcqgCJ8tuexsjQcY1LYu\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Data.sol\":{\"keccak256\":\"0xc059cb57b9c571410d400b063d559a7b43ad764bc6b59ef80566605403c45585\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://775773224023ba4f71469b76fce9ee336ed1d5701995ac496e8b7478c2d51fd2\",\"dweb:/ipfs/QmayBeNmwVenYUkgmjrY5Ua1JNd5oeNAz8DkyNgnSrJKGd\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/GSNCapable.sol\":{\"keccak256\":\"0xe62044b6d2130c6f00fc99898edf8605ca1cf1b0825ab13e2f5b78d7a0a5906c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://512c10b024ae37f020cc05fc2fa909793d8762eb210d894ead5e27bb1be55ebc\",\"dweb:/ipfs/QmNxYnbQELq18PKYvgRLj1QEpKiY1UpWGCQwSA2ezcnUGQ\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol\":{\"keccak256\":\"0x995c62950584716d782295bdc47ec89a822d1e856955e626461e55f7a78058ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7bdbc7822173239170c192563023beb95d31aeb0102c0f66cc12cedb506e6f89\",\"dweb:/ipfs/Qmb7WJEDHnXxRqDQumCGcDkAur1h1uPEomcWrqC2TRkRDF\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol\":{\"keccak256\":\"0xd5019a259ee94a211172c19d30424b28a912d02507ab220a096046ac4fdd2068\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://daa7dc075a17ef143feca5828e939af66e383b404cce31fb47fafde265f03305\",\"dweb:/ipfs/QmaGPAikYBr8GmJUbzKTzRRtWLfqXwvAHwkZYcogZA4SdD\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/MultiToken.sol\":{\"keccak256\":\"0x5922c39f3d83a885d67924ba9c2416cd6429c7f775491586c4ab77f9444397a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f19db9460901c3ec860b56ff7f6b85c4018527e44200692b7fba0e92f8f5c1fa\",\"dweb:/ipfs/QmNW8wyDYtKX5rp5uF15JZD1swSDR5WGjEBif49Ax3mgBM\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Ownable.sol\":{\"keccak256\":\"0x8779572989fe688bfa3e374845056f5798d1db5a9533e3ce4375713fd352f979\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c90a1f8d3d2e62b615c5e807578a030ce04eb3d21c506a7f79522dc87d9870\",\"dweb:/ipfs/QmRYy1iTAha4CZPX2T8gU2Eh9FnjwdKKgRFpAWTiHM3KyP\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/lib/Proxyable.sol\":{\"keccak256\":\"0x8d845a4483b74885e357199bc4a68253f78edeb0adf2f00ed55349950aabc827\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://12bf4c78fc6573e7406f6ebb460c4618f327824c3dda204fc4185e0b3d649666\",\"dweb:/ipfs/QmcnaRDooS1ZKDAT5EMkGknRFd5tGWirnaSgMdPc353d1s\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0dc4de30066c07be6906b80d9e520fd774cb390e34214c2267c566f30c192eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd2eff6112eef024b2c10eca51411b26c58766e172c26efaf49b77b06f1cbe9f\",\"dweb:/ipfs/QmSL8DnsgxrCpGAiqpxz17SVzJTD1tULFBo1iuFfnknv2z\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xcc6d500a21adcca1c123ed1bf04715f8b1fa116d83b9742c3f5729d43a3f7e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8154509e193b9dd26c3a6cd3c413f7e2dd376a9d37458e74976e37c77c225422\",\"dweb:/ipfs/QmSUCBLGPGwRg7t9gFMvCWH6A54jSvzvHXBScpmZE5N4uq\"]},\"/home/ouziel/Work/StashBloxContracts/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x700249db0ed6aa2be4fc7675c9cdb5cdcc4e49abec52eefa58c2b02092784188\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4a8babf975072c842269b5cb10aedfed77307629626cc6ab6173e68462eaebb\",\"dweb:/ipfs/QmVSAHYR99a4Q6jrrSqvRxMEnD2dhNAUPLyGA9KGJGTLDL\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5062000026620000206200002c565b62000062565b62000133565b60006018361080159062000046575062000046336200011f565b156200005c575060131936013560601c6200005f565b50335b90565b6001600160a01b038116620000c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062003bf16026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b0390811691161490565b613aae80620001436000396000f3fe6080604052600436106101b65760003560e01c80638870147b116100ec578063d26ea6c01161008a578063ed70554d11610064578063ed70554d14610da2578063f242432a14610e20578063f2fde38b14610eb3578063f8a5a07c14610ee6576101b6565b8063d26ea6c014610cfb578063d41d0aa314610d2e578063e985e9c514610d67576101b6565b8063a22cb465116100c6578063a22cb46514610ab1578063c02f303c14610aec578063c40b87ae14610b1f578063d1660e1814610cbc576101b6565b80638870147b14610a145780638aeba37e14610a475780638da5cb5b14610a80576101b6565b8063486ff0cd11610159578063572b6c0511610133578063572b6c051461093c578063585941d51461096f5780635dafec1b146109a85780637627b732146109e1576101b6565b8063486ff0cd146106255780634ab0d2531461063a5780634e1273f4146107bc576101b6565b80632eb2c2d6116101955780632eb2c2d6146102ed5780632ed42bf7146104165780633cacd7d614610540578063414ed0ce14610593576101b6565b8062fdd58e146101bb57806301ffc9a7146102065780630e89341c1461024e575b600080fd5b3480156101c757600080fd5b506101f4600480360360408110156101de57600080fd5b506001600160a01b03813516906020013561101d565b60408051918252519081900360200190f35b34801561021257600080fd5b5061023a6004803603602081101561022957600080fd5b50356001600160e01b031916611091565b604080519115158252519081900360200190f35b34801561025a57600080fd5b506102786004803603602081101561027157600080fd5b50356110d8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102b257818101518382015260200161029a565b50505050905090810190601f1680156102df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610414600480360360a081101561030357600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561033657600080fd5b82018360208201111561034857600080fd5b803590602001918460208302840111600160201b8311171561036957600080fd5b919390929091602081019035600160201b81111561038657600080fd5b82018360208201111561039857600080fd5b803590602001918460208302840111600160201b831117156103b957600080fd5b919390929091602081019035600160201b8111156103d657600080fd5b8201836020820111156103e857600080fd5b803590602001918460018302840111600160201b8311171561040957600080fd5b509092509050611179565b005b34801561042257600080fd5b5061042b61144c565b604051808781526020018060200180602001866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b03168152602001838103835288818151815260200191508051906020019080838360005b8381101561049f578181015183820152602001610487565b50505050905090810190601f1680156104cc5780820380516001836020036101000a031916815260200191505b50838103825287518152875160209182019189019080838360005b838110156104ff5781810151838201526020016104e7565b50505050905090810190601f16801561052c5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561054c57600080fd5b506105736004803603602081101561056357600080fd5b50356001600160a01b0316611595565b604080519315158452911515602084015282820152519081900360600190f35b34801561059f57600080fd5b506105bd600480360360208110156105b657600080fd5b50356115bb565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561063157600080fd5b5061027861162e565b34801561064657600080fd5b50610414600480360361014081101561065e57600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b8111156106b357600080fd5b8201836020820111156106c557600080fd5b803590602001918460208302840111600160201b831117156106e657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561073557600080fd5b82018360208201111561074757600080fd5b803590602001918460208302840111600160201b8311171561076857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166116c2565b3480156107c857600080fd5b506108ec600480360360408110156107df57600080fd5b810190602081018135600160201b8111156107f957600080fd5b82018360208201111561080b57600080fd5b803590602001918460208302840111600160201b8311171561082c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561087b57600080fd5b82018360208201111561088d57600080fd5b803590602001918460208302840111600160201b831117156108ae57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506117c0945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610928578181015183820152602001610910565b505050509050019250505060405180910390f35b34801561094857600080fd5b5061023a6004803603602081101561095f57600080fd5b50356001600160a01b0316611944565b34801561097b57600080fd5b506101f46004803603604081101561099257600080fd5b506001600160a01b038135169060200135611958565b3480156109b457600080fd5b5061023a600480360360408110156109cb57600080fd5b50803590602001356001600160a01b0316611992565b3480156109ed57600080fd5b5061041460048036036020811015610a0457600080fd5b50356001600160a01b031661199e565b348015610a2057600080fd5b5061041460048036036020811015610a3757600080fd5b50356001600160a01b0316611a09565b348015610a5357600080fd5b5061041460048036036040811015610a6a57600080fd5b50803590602001356001600160a01b0316611a71565b348015610a8c57600080fd5b50610a95611aee565b604080516001600160a01b039092168252519081900360200190f35b348015610abd57600080fd5b5061041460048036036040811015610ad457600080fd5b506001600160a01b0381351690602001351515611afd565b348015610af857600080fd5b5061023a60048036036020811015610b0f57600080fd5b50356001600160a01b0316611bf0565b348015610b2b57600080fd5b5061041460048036036101a0811015610b4357600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610bb357600080fd5b820183602082011115610bc557600080fd5b803590602001918460208302840111600160201b83111715610be657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610c3557600080fd5b820183602082011115610c4757600080fd5b803590602001918460208302840111600160201b83111715610c6857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611bfb565b348015610cc857600080fd5b506101f460048036036060811015610cdf57600080fd5b506001600160a01b038135169060208101359060400135611cd2565b348015610d0757600080fd5b5061041460048036036020811015610d1e57600080fd5b50356001600160a01b0316611ce7565b348015610d3a57600080fd5b5061041460048036036040811015610d5157600080fd5b50803590602001356001600160a01b0316611d50565b348015610d7357600080fd5b5061023a60048036036040811015610d8a57600080fd5b506001600160a01b0381358116916020013516611dca565b348015610dae57600080fd5b50610dcc60048036036020811015610dc557600080fd5b5035611dd6565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b610414600480360360a0811015610e3657600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610e7557600080fd5b820183602082011115610e8757600080fd5b803590602001918460018302840111600160201b83111715610ea857600080fd5b509092509050611e32565b348015610ebf57600080fd5b5061041460048036036020811015610ed657600080fd5b50356001600160a01b0316611fa9565b348015610ef257600080fd5b5061041460048036036060811015610f0957600080fd5b81359190810190604081016020820135600160201b811115610f2a57600080fd5b820183602082011115610f3c57600080fd5b803590602001918460208302840111600160201b83111715610f5d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610fac57600080fd5b820183602082011115610fbe57600080fd5b803590602001918460208302840111600160201b83111715610fdf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611ffc945050505050565b60006001600160a01b0383166110645760405162461bcd60e51b815260040180806020018281038252602b815260200180613863602b913960400191505060405180910390fd5b5060008181526007602081815260408084206001600160a01b038716855290920190529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b14806110c257506001600160e01b03198216636cdb3d1360e11b145b156110cf575060016110d3565b5060005b919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815260609361108b93919290918301828280156111665780601f1061113b57610100808354040283529160200191611166565b820191906000526020600020905b81548152906001019060200180831161114957829003601f168201915b5050505050611174846121aa565b612266565b8483146111b75760405162461bcd60e51b815260040180806020018281038252602e815260200180613a1a602e913960400191505060405180910390fd5b6001600160a01b0387166111fc5760405162461bcd60e51b81526004018080602001828103825260288152602001806138b46028913960400191505060405180910390fd5b611204612370565b6001600160a01b0316886001600160a01b03161480611235575061122f8861122a612370565b611dca565b15156001145b6112705760405162461bcd60e51b81526004018080602001828103825260378152602001806139e36037913960400191505060405180910390fd5b6112df888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a9182918501908490808284376000920191909152506123a292505050565b866001600160a01b0316886001600160a01b03166112fb612370565b6001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a46114426113a2612370565b898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061245c92505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156114d85780601f106114ad576101008083540402835291602001916114d8565b820191906000526020600020905b8154815290600101906020018083116114bb57829003601f168201915b50505060028085018054604080516020601f600019610100600187161502019094169590950492830185900485028101850190915281815295969594509092509083018282801561156a5780601f1061153f5761010080835404028352916020019161156a565b820191906000526020600020905b81548152906001019060200180831161154d57829003601f168201915b505050506003830154600484015460059094015492936001600160a01b039182169390821692501686565b6006602052600090815260409020805460019091015460ff808316926101009004169083565b60086020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156116b75780601f1061168c576101008083540402835291602001916116b7565b820191906000526020600020905b81548152906001019060200180831161169a57829003601f168201915b505050505090505b90565b876116d4816116cf612370565b61264d565b61171f576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b60008981526007602052604090205461176f576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b61177f8989898989898989612686565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b606081518351146118025760405162461bcd60e51b81526004018080602001828103825260308152602001806139086030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561181c57600080fd5b50604051908082528060200260200182016040528015611846578160200160208202803683370190505b50905060005b845181101561193c5760006001600160a01b031685828151811061186c57fe5b60200260200101516001600160a01b031614156118ba5760405162461bcd60e51b815260040180806020018281038252603481526020018061396e6034913960400191505060405180910390fd5b600760008583815181106118ca57fe5b6020026020010151815260200190815260200160002060070160008683815181106118f157fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061192957fe5b602090810291909101015260010161184c565b509392505050565b6004546001600160a01b0390811691161490565b60008181526007602081815260408084206001600160a01b0387168552909201905281206001015461198b90429061282a565b9392505050565b600061198b838361264d565b6119a661286c565b6119e5576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b611a1161286c565b611a50576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600660205260409020805460ff19169055565b611a7961286c565b611ab8576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b60009182526007602081815260408085206001600160a01b0390941685529290910190529020600201805460ff19166001179055565b6003546001600160a01b031690565b816001600160a01b0316611b0f612370565b6001600160a01b03161415611b555760405162461bcd60e51b815260040180806020018281038252602c8152602001806138dc602c913960400191505060405180910390fd5b8060066000611b62612370565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825260039092019093529120805460ff191692151592909217909155611baa612370565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b600061108b82612892565b611c0b611c06612370565b612892565b611c56576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b611c698b8b8b8b8b8b8b8b8b8b8b6128bc565b6001600160a01b038b166000611c7d612370565b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628d8d604051808381526020018281526020019250505060405180910390a45050505050505050505050565b6000611cdf8484846129fb565b949350505050565b611cef61286c565b611d2e576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b611d5861286c565b611d97576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b60009182526007602081815260408085206001600160a01b0390941685529290910190529020600201805460ff19169055565b600061198b8383612be1565b600760205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516611e775760405162461bcd60e51b81526004018080602001828103825260288152602001806138b46028913960400191505060405180910390fd5b611e7f612370565b6001600160a01b0316866001600160a01b03161480611eab5750611ea58661122a612370565b15156001145b611ee65760405162461bcd60e51b81526004018080602001828103825260378152602001806139e36037913960400191505060405180910390fd5b611ef286868686612c26565b846001600160a01b0316866001600160a01b0316611f0e612370565b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611fa1611f61612370565b8787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612c9e92505050565b505050505050565b611fb161286c565b611ff0576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b611ff981612e13565b50565b612007611c06612370565b612052576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b60008381526007602052604090205415801590612070575080518251145b6120b5576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b82518110156121a4576120f2848483815181106120d157fe5b60200260200101518484815181106120e557fe5b6020026020010151612eb4565b6000848152600760205260408120600801805490919061210e57fe5b60009182526020822001546001600160a01b03169061212b612370565b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6286858151811061216157fe5b6020026020010151600760008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a46001016120b8565b50505050565b60606000825b80156121c65760019190910190601090046121b0565b60608267ffffffffffffffff811180156121df57600080fd5b506040519080825280601f01601f19166020018201604052801561220a576020820181803683370190505b50905060005b8381101561225d5760108606925061222783613056565b826001838703038151811061223857fe5b60200101906001600160f81b031916908160001a905350601086049550600101612210565b50949350505050565b805182516060918491849184910167ffffffffffffffff8111801561228a57600080fd5b506040519080825280601f01601f1916602001820160405280156122b5576020820181803683370190505b509050806000805b855181101561230e578581815181106122d257fe5b602001015160f81c60f81b8383806001019450815181106122ef57fe5b60200101906001600160f81b031916908160001a9053506001016122bd565b5060005b84518110156123635784818151811061232757fe5b602001015160f81c60f81b83838060010194508151811061234457fe5b60200101906001600160f81b031916908160001a905350600101612312565b5090979650505050505050565b600060183610801590612387575061238733611944565b1561239b575060131936013560601c6116bf565b50336116bf565b60008034116123cc576001600160a01b0385166000908152600660205260409020600101546123ce565b345b905060005b835181101561244a5761244061241187878785815181106123f057fe5b602002602001015187868151811061240457fe5b602002602001015161309a565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528491906131ec565b91506001016123d3565b506124558582613283565b5050505050565b61246e846001600160a01b0316613307565b15611fa15763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561250e5781810151838201526020016124f6565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561254d578181015183820152602001612535565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015612589578181015183820152602001612571565b50505050905090810190601f1680156125b65780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156125db57600080fd5b505af11580156125ef573d6000803e3d6000fd5b505050506040513d602081101561260557600080fd5b50516001600160e01b03191614611fa15760405162461bcd60e51b81526004018080602001828103825260368152602001806139386036913960400191505060405180910390fd5b60008281526007602081815260408084206001600160a01b0386168552909201905281206002015460ff168061198b575061198b61286c565b6000805b85518110156126b65785818151811061269f57fe5b60200260200101518201915080600101905061268a565b50600086511180156126c6575060015b80156126d3575080612710145b80156126e0575061271084105b612725576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600760209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b909101805460018101825590855292909320612785939283020191613755565b50600089815260076020908152604090912087516127ab92600990920191890190613793565b50600089815260076020908152604090912086516127d192600a909201918801906137f4565b505060009788526007602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b600061198b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506131ec565b6003546000906001600160a01b0316612883612370565b6001600160a01b031614905090565b6001600160a01b03811660009081526006602052604081205460ff168061108b575061108b61286c565b60008a8152600760205260409020541580156128d85750600089115b61291d576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60008a815260076020819052604082208b815560018082018c905592910190612944612370565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600760008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506129e38a88888888888888612686565b6129ee8b8b8b61333e565b5050505050505050505050565b6000828152600760205260408120600b015481904290600019015b6000868152600760205260408120600b01805483908110612a3357fe5b60009182526020822060029091020101546000888152600760205260408120600b018054929350909184908110612a6657fe5b9060005260206000209060020201600160028110612a8057fe5b015460008981526007602081815260408084206001600160a01b038f1685529092019052812060010154919250908311612b215760008981526007602081815260408084206001600160a01b038f1685529092019052902060010154612af6906201518090612af090889061282a565b90613545565b905080612b01575060015b612b1588612b0f8385613587565b90613587565b86019550505050612b60565b612b3262015180612af0878661282a565b905080612b3d575060015b9193508391612b5088612b0f8385613587565b9095019450505060001901612a16565b50600085815260076020526040902060010154612b81908390600a0a613545565b60008681526007602052604081206003015491935090612bac906305f5e10090612af0908890613587565b600087815260076020526040902060020154909150612bd690612bcf90836135e0565b84906135e0565b979650505050505050565b6000612bed838361363a565b8061198b5750506001600160a01b0391821660009081526006602090815260408083209390941682526003909201909152205460ff1690565b6000803411612c50576001600160a01b038516600090815260066020526040902060010154612c52565b345b9050612c92612c638686868661309a565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528391906131ec565b90506124558582613283565b612cb0846001600160a01b0316613307565b15611fa15763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612d51578181015183820152602001612d39565b50505050905090810190601f168015612d7e5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015612da157600080fd5b505af1158015612db5573d6000803e3d6000fd5b505050506040513d6020811015612dcb57600080fd5b50516001600160e01b03191614611fa15760405162461bcd60e51b8152600401808060200182810382526031815260200180613a486031913960400191505060405180910390fd5b6001600160a01b038116612e585760405162461bcd60e51b815260040180806020018281038252602681526020018061388e6026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b600083815260076020526040812060080180546130519290612ed257fe5b600091825260208083209091015486835260078083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a949093908401929190612f3c57fe5b9060005260206000209060020201600160028110612f5657fe5b0154905260008a81526007602090815260409182902060090180548351818402810184019094528084529091830182828015612fbb57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612f9d575b50505060008d815260076020908152604091829020600a018054835181840281018401909452808452929450925083018282801561301857602002820191906000526020600020905b815481526020019060010190808311613004575b50505060008e8152600760205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b03166128bc565b505050565b600060098260ff161161307057506030810160f81b6110d3565b8160ff16600a111580156130885750600f8260ff1611155b156101b657506057810160f81b6110d3565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b602080830191909152600085815260078083528482206001600160a01b038a16835201909152918220546130f49184906131ec565b60008481526007602081815260408084206001600160a01b038b168552909201905290205561312484848461333e565b61312f8584846129fb565b905060005b60008481526007602052604090206009015481101561225d57600084815260076020526040812060090180548390811061316a57fe5b6000918252602080832090910154878352600790915260408220600a0180546001600160a01b03909216935090849081106131a157fe5b60009182526020909120015490506131bf612710612af08684613587565b6001600160a01b039092166000908152600660205260409020600190810180549093019092555001613134565b6000818484111561327b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613240578181015183820152602001613228565b50505050905090810190601f16801561326d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000341180156132935750600081115b156132df576001600160a01b0382166000908152600660205260409020600101546132be90826135e0565b6001600160a01b038316600090815260066020526040902060010155613303565b34613303576001600160a01b03821660009081526006602052604090206001018190555b5050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611cdf5750141592915050565b60008281526007602081815260408084206001600160a01b0388168552909201905281205461336d90836135e0565b60008481526007602081815260408084206001600160a01b038a16855290920190529020549091506134785760008381526007602081815260408084206001600160a01b03891685529092019052902060020154610100900460ff16613448576001600160a01b038416600081815260066020908152604080832060029081018054600181810183559186528486200189905588855260078085528386206008810180549384018155875285872090920180546001600160a01b03191688179055958552909401909152902001805461ff0019166101001790555b60008381526007602081815260408084206001600160a01b03891685529092019052902042600190910155613516565b60008381526007602081815260408084206001600160a01b038916855290920190528120600101546134ab90429061282a565b60008581526007602081815260408084206001600160a01b038b1685529092019052812054919250906134e4908490612af09085613587565b60008681526007602081815260408084206001600160a01b038c16855290920190529020429190910360019091015550505b60009283526007602081815260408086206001600160a01b039097168652959091019052929091209190915550565b600061198b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506136f0565b6000826135965750600061108b565b828202828482816135a357fe5b041461198b5760405162461bcd60e51b81526004018080602001828103825260218152602001806139a26021913960400191505060405180910390fd5b60008282018381101561198b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6005546000906001600160a01b0316156136e7576005546040805163c455279160e01b81526001600160a01b03868116600483015291519282169291851691839163c4552791916024808301926020929190829003018186803b1580156136a057600080fd5b505afa1580156136b4573d6000803e3d6000fd5b505050506040513d60208110156136ca57600080fd5b50516001600160a01b031614156136e557600191505061108b565b505b50600092915050565b6000818361373f5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315613240578181015183820152602001613228565b50600083858161374b57fe5b0495945050505050565b8260028101928215613783579160200282015b82811115613783578251825591602001919060010190613768565b5061378f92915061382e565b5090565b8280548282559060005260206000209081019282156137e8579160200282015b828111156137e857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906137b3565b5061378f929150613843565b8280548282559060005260206000209081019282156137835791602002820182811115613783578251825591602001919060010190613768565b5b8082111561378f576000815560010161382f565b5b8082111561378f5780546001600160a01b031916815560010161384456fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a26469706673582212204d21a749386be4656b14a2b38aa4ee946459d679e0fa238b1a1a2b8598eba6be64736f6c634300070100334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x6080604052600436106101b65760003560e01c80638870147b116100ec578063d26ea6c01161008a578063ed70554d11610064578063ed70554d14610da2578063f242432a14610e20578063f2fde38b14610eb3578063f8a5a07c14610ee6576101b6565b8063d26ea6c014610cfb578063d41d0aa314610d2e578063e985e9c514610d67576101b6565b8063a22cb465116100c6578063a22cb46514610ab1578063c02f303c14610aec578063c40b87ae14610b1f578063d1660e1814610cbc576101b6565b80638870147b14610a145780638aeba37e14610a475780638da5cb5b14610a80576101b6565b8063486ff0cd11610159578063572b6c0511610133578063572b6c051461093c578063585941d51461096f5780635dafec1b146109a85780637627b732146109e1576101b6565b8063486ff0cd146106255780634ab0d2531461063a5780634e1273f4146107bc576101b6565b80632eb2c2d6116101955780632eb2c2d6146102ed5780632ed42bf7146104165780633cacd7d614610540578063414ed0ce14610593576101b6565b8062fdd58e146101bb57806301ffc9a7146102065780630e89341c1461024e575b600080fd5b3480156101c757600080fd5b506101f4600480360360408110156101de57600080fd5b506001600160a01b03813516906020013561101d565b60408051918252519081900360200190f35b34801561021257600080fd5b5061023a6004803603602081101561022957600080fd5b50356001600160e01b031916611091565b604080519115158252519081900360200190f35b34801561025a57600080fd5b506102786004803603602081101561027157600080fd5b50356110d8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102b257818101518382015260200161029a565b50505050905090810190601f1680156102df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610414600480360360a081101561030357600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b81111561033657600080fd5b82018360208201111561034857600080fd5b803590602001918460208302840111600160201b8311171561036957600080fd5b919390929091602081019035600160201b81111561038657600080fd5b82018360208201111561039857600080fd5b803590602001918460208302840111600160201b831117156103b957600080fd5b919390929091602081019035600160201b8111156103d657600080fd5b8201836020820111156103e857600080fd5b803590602001918460018302840111600160201b8311171561040957600080fd5b509092509050611179565b005b34801561042257600080fd5b5061042b61144c565b604051808781526020018060200180602001866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b03168152602001838103835288818151815260200191508051906020019080838360005b8381101561049f578181015183820152602001610487565b50505050905090810190601f1680156104cc5780820380516001836020036101000a031916815260200191505b50838103825287518152875160209182019189019080838360005b838110156104ff5781810151838201526020016104e7565b50505050905090810190601f16801561052c5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561054c57600080fd5b506105736004803603602081101561056357600080fd5b50356001600160a01b0316611595565b604080519315158452911515602084015282820152519081900360600190f35b34801561059f57600080fd5b506105bd600480360360208110156105b657600080fd5b50356115bb565b604080519b8c5260208c019a909a528a8a019890985260608a019690965260808901949094526001600160a01b0390921660a0880152151560c0870152151560e086015215156101008501521515610120840152151561014083015251908190036101600190f35b34801561063157600080fd5b5061027861162e565b34801561064657600080fd5b50610414600480360361014081101561065e57600080fd5b6040805160608181018352843594602081013594810193909260a08401929091840190600390839083908082843760009201919091525091949392602081019250359050600160201b8111156106b357600080fd5b8201836020820111156106c557600080fd5b803590602001918460208302840111600160201b831117156106e657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561073557600080fd5b82018360208201111561074757600080fd5b803590602001918460208302840111600160201b8311171561076857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b03166116c2565b3480156107c857600080fd5b506108ec600480360360408110156107df57600080fd5b810190602081018135600160201b8111156107f957600080fd5b82018360208201111561080b57600080fd5b803590602001918460208302840111600160201b8311171561082c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561087b57600080fd5b82018360208201111561088d57600080fd5b803590602001918460208302840111600160201b831117156108ae57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506117c0945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610928578181015183820152602001610910565b505050509050019250505060405180910390f35b34801561094857600080fd5b5061023a6004803603602081101561095f57600080fd5b50356001600160a01b0316611944565b34801561097b57600080fd5b506101f46004803603604081101561099257600080fd5b506001600160a01b038135169060200135611958565b3480156109b457600080fd5b5061023a600480360360408110156109cb57600080fd5b50803590602001356001600160a01b0316611992565b3480156109ed57600080fd5b5061041460048036036020811015610a0457600080fd5b50356001600160a01b031661199e565b348015610a2057600080fd5b5061041460048036036020811015610a3757600080fd5b50356001600160a01b0316611a09565b348015610a5357600080fd5b5061041460048036036040811015610a6a57600080fd5b50803590602001356001600160a01b0316611a71565b348015610a8c57600080fd5b50610a95611aee565b604080516001600160a01b039092168252519081900360200190f35b348015610abd57600080fd5b5061041460048036036040811015610ad457600080fd5b506001600160a01b0381351690602001351515611afd565b348015610af857600080fd5b5061023a60048036036020811015610b0f57600080fd5b50356001600160a01b0316611bf0565b348015610b2b57600080fd5b5061041460048036036101a0811015610b4357600080fd5b60408051606081810183526001600160a01b03853516946020810135949381013593828201359360808301359391830192916101008301919060a0840190600390839083908082843760009201919091525091949392602081019250359050600160201b811115610bb357600080fd5b820183602082011115610bc557600080fd5b803590602001918460208302840111600160201b83111715610be657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610c3557600080fd5b820183602082011115610c4757600080fd5b803590602001918460208302840111600160201b83111715610c6857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020810135151590604001356001600160a01b0316611bfb565b348015610cc857600080fd5b506101f460048036036060811015610cdf57600080fd5b506001600160a01b038135169060208101359060400135611cd2565b348015610d0757600080fd5b5061041460048036036020811015610d1e57600080fd5b50356001600160a01b0316611ce7565b348015610d3a57600080fd5b5061041460048036036040811015610d5157600080fd5b50803590602001356001600160a01b0316611d50565b348015610d7357600080fd5b5061023a60048036036040811015610d8a57600080fd5b506001600160a01b0381358116916020013516611dca565b348015610dae57600080fd5b50610dcc60048036036020811015610dc557600080fd5b5035611dd6565b60408051998a5260208a0198909852888801969096526060880194909452608087019290925260a08601526001600160a01b031660c0850152151560e0840152151561010083015251908190036101200190f35b610414600480360360a0811015610e3657600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b811115610e7557600080fd5b820183602082011115610e8757600080fd5b803590602001918460018302840111600160201b83111715610ea857600080fd5b509092509050611e32565b348015610ebf57600080fd5b5061041460048036036020811015610ed657600080fd5b50356001600160a01b0316611fa9565b348015610ef257600080fd5b5061041460048036036060811015610f0957600080fd5b81359190810190604081016020820135600160201b811115610f2a57600080fd5b820183602082011115610f3c57600080fd5b803590602001918460208302840111600160201b83111715610f5d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610fac57600080fd5b820183602082011115610fbe57600080fd5b803590602001918460208302840111600160201b83111715610fdf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611ffc945050505050565b60006001600160a01b0383166110645760405162461bcd60e51b815260040180806020018281038252602b815260200180613863602b913960400191505060405180910390fd5b5060008181526007602081815260408084206001600160a01b038716855290920190529020545b92915050565b60006001600160e01b031982166301ffc9a760e01b14806110c257506001600160e01b03198216636cdb3d1360e11b145b156110cf575060016110d3565b5060005b919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815260609361108b93919290918301828280156111665780601f1061113b57610100808354040283529160200191611166565b820191906000526020600020905b81548152906001019060200180831161114957829003601f168201915b5050505050611174846121aa565b612266565b8483146111b75760405162461bcd60e51b815260040180806020018281038252602e815260200180613a1a602e913960400191505060405180910390fd5b6001600160a01b0387166111fc5760405162461bcd60e51b81526004018080602001828103825260288152602001806138b46028913960400191505060405180910390fd5b611204612370565b6001600160a01b0316886001600160a01b03161480611235575061122f8861122a612370565b611dca565b15156001145b6112705760405162461bcd60e51b81526004018080602001828103825260378152602001806139e36037913960400191505060405180910390fd5b6112df888888888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a9182918501908490808284376000920191909152506123a292505050565b866001600160a01b0316886001600160a01b03166112fb612370565b6001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040518080602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600083820152604051601f909101601f19169092018290039850909650505050505050a46114426113a2612370565b898989898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525050604080516020601f8c018190048102820181019092528a815292508a915089908190840183828082843760009201919091525061245c92505050565b5050505050505050565b6000805460018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815293949392918301828280156114d85780601f106114ad576101008083540402835291602001916114d8565b820191906000526020600020905b8154815290600101906020018083116114bb57829003601f168201915b50505060028085018054604080516020601f600019610100600187161502019094169590950492830185900485028101850190915281815295969594509092509083018282801561156a5780601f1061153f5761010080835404028352916020019161156a565b820191906000526020600020905b81548152906001019060200180831161154d57829003601f168201915b505050506003830154600484015460059094015492936001600160a01b039182169390821692501686565b6006602052600090815260409020805460019091015460ff808316926101009004169083565b60086020526000908152604090208054600182015460028301546003840154600485015460059095015493949293919290916001600160a01b0381169060ff600160a01b8204811691600160a81b8104821691600160b01b8204811691600160b81b8104821691600160c01b909104168b565b60028054604080516020601f60001961010060018716150201909416859004938401819004810282018101909252828152606093909290918301828280156116b75780601f1061168c576101008083540402835291602001916116b7565b820191906000526020600020905b81548152906001019060200180831161169a57829003601f168201915b505050505090505b90565b876116d4816116cf612370565b61264d565b61171f576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b60008981526007602052604090205461176f576040805162461bcd60e51b815260206004820152600d60248201526c2ab735b737bbb7103a37b5b2b760991b604482015290519081900360640190fd5b61177f8989898989898989612686565b6040805189815290518a917f199acc06cd2556bbc146fa3cb578799037dffcbf256eca32aaf2ef656925d2fd919081900360200190a2505050505050505050565b606081518351146118025760405162461bcd60e51b81526004018080602001828103825260308152602001806139086030913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561181c57600080fd5b50604051908082528060200260200182016040528015611846578160200160208202803683370190505b50905060005b845181101561193c5760006001600160a01b031685828151811061186c57fe5b60200260200101516001600160a01b031614156118ba5760405162461bcd60e51b815260040180806020018281038252603481526020018061396e6034913960400191505060405180910390fd5b600760008583815181106118ca57fe5b6020026020010151815260200190815260200160002060070160008683815181106118f157fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000015482828151811061192957fe5b602090810291909101015260010161184c565b509392505050565b6004546001600160a01b0390811691161490565b60008181526007602081815260408084206001600160a01b0387168552909201905281206001015461198b90429061282a565b9392505050565b600061198b838361264d565b6119a661286c565b6119e5576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b611a1161286c565b611a50576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152600660205260409020805460ff19169055565b611a7961286c565b611ab8576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b60009182526007602081815260408085206001600160a01b0390941685529290910190529020600201805460ff19166001179055565b6003546001600160a01b031690565b816001600160a01b0316611b0f612370565b6001600160a01b03161415611b555760405162461bcd60e51b815260040180806020018281038252602c8152602001806138dc602c913960400191505060405180910390fd5b8060066000611b62612370565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825260039092019093529120805460ff191692151592909217909155611baa612370565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b600061108b82612892565b611c0b611c06612370565b612892565b611c56576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b611c698b8b8b8b8b8b8b8b8b8b8b6128bc565b6001600160a01b038b166000611c7d612370565b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628d8d604051808381526020018281526020019250505060405180910390a45050505050505050505050565b6000611cdf8484846129fb565b949350505050565b611cef61286c565b611d2e576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b611d5861286c565b611d97576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b60009182526007602081815260408085206001600160a01b0390941685529290910190529020600201805460ff19169055565b600061198b8383612be1565b600760205260009081526040902080546001820154600283015460038401546004850154600586015460069096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b6001600160a01b038516611e775760405162461bcd60e51b81526004018080602001828103825260288152602001806138b46028913960400191505060405180910390fd5b611e7f612370565b6001600160a01b0316866001600160a01b03161480611eab5750611ea58661122a612370565b15156001145b611ee65760405162461bcd60e51b81526004018080602001828103825260378152602001806139e36037913960400191505060405180910390fd5b611ef286868686612c26565b846001600160a01b0316866001600160a01b0316611f0e612370565b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051808381526020018281526020019250505060405180910390a4611fa1611f61612370565b8787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250612c9e92505050565b505050505050565b611fb161286c565b611ff0576040805162461bcd60e51b815260206004820181905260248201526000805160206139c3833981519152604482015290519081900360640190fd5b611ff981612e13565b50565b612007611c06612370565b612052576040805162461bcd60e51b815260206004820152601760248201527624b739bab33334b1b4b2b73a103832b936b4b9b9b4b7b760491b604482015290519081900360640190fd5b60008381526007602052604090205415801590612070575080518251145b6120b5576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60005b82518110156121a4576120f2848483815181106120d157fe5b60200260200101518484815181106120e557fe5b6020026020010151612eb4565b6000848152600760205260408120600801805490919061210e57fe5b60009182526020822001546001600160a01b03169061212b612370565b6001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6286858151811061216157fe5b6020026020010151600760008a815260200190815260200160002060000154604051808381526020018281526020019250505060405180910390a46001016120b8565b50505050565b60606000825b80156121c65760019190910190601090046121b0565b60608267ffffffffffffffff811180156121df57600080fd5b506040519080825280601f01601f19166020018201604052801561220a576020820181803683370190505b50905060005b8381101561225d5760108606925061222783613056565b826001838703038151811061223857fe5b60200101906001600160f81b031916908160001a905350601086049550600101612210565b50949350505050565b805182516060918491849184910167ffffffffffffffff8111801561228a57600080fd5b506040519080825280601f01601f1916602001820160405280156122b5576020820181803683370190505b509050806000805b855181101561230e578581815181106122d257fe5b602001015160f81c60f81b8383806001019450815181106122ef57fe5b60200101906001600160f81b031916908160001a9053506001016122bd565b5060005b84518110156123635784818151811061232757fe5b602001015160f81c60f81b83838060010194508151811061234457fe5b60200101906001600160f81b031916908160001a905350600101612312565b5090979650505050505050565b600060183610801590612387575061238733611944565b1561239b575060131936013560601c6116bf565b50336116bf565b60008034116123cc576001600160a01b0385166000908152600660205260409020600101546123ce565b345b905060005b835181101561244a5761244061241187878785815181106123f057fe5b602002602001015187868151811061240457fe5b602002602001015161309a565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528491906131ec565b91506001016123d3565b506124558582613283565b5050505050565b61246e846001600160a01b0316613307565b15611fa15763bc197c8160e01b6001600160e01b031916846001600160a01b031663bc197c8188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561250e5781810151838201526020016124f6565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561254d578181015183820152602001612535565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015612589578181015183820152602001612571565b50505050905090810190601f1680156125b65780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156125db57600080fd5b505af11580156125ef573d6000803e3d6000fd5b505050506040513d602081101561260557600080fd5b50516001600160e01b03191614611fa15760405162461bcd60e51b81526004018080602001828103825260368152602001806139386036913960400191505060405180910390fd5b60008281526007602081815260408084206001600160a01b0386168552909201905281206002015460ff168061198b575061198b61286c565b6000805b85518110156126b65785818151811061269f57fe5b60200260200101518201915080600101905061268a565b50600086511180156126c6575060015b80156126d3575080612710145b80156126e0575061271084105b612725576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b6000898152600760209081526040808320600581018c90558a516002808301919091558b840151600383015582518084018452428152928c015183850152600b909101805460018101825590855292909320612785939283020191613755565b50600089815260076020908152604090912087516127ab92600990920191890190613793565b50600089815260076020908152604090912086516127d192600a909201918801906137f4565b505060009788526007602052604090972060048101929092556006909101805460ff60a01b1916600160a01b92151592909202919091176001600160a01b0319166001600160a01b039096169590951790945550505050565b600061198b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506131ec565b6003546000906001600160a01b0316612883612370565b6001600160a01b031614905090565b6001600160a01b03811660009081526006602052604081205460ff168061108b575061108b61286c565b60008a8152600760205260409020541580156128d85750600089115b61291d576040805162461bcd60e51b8152602060048201526011602482015270496e76616c696420617267756d656e747360781b604482015290519081900360640190fd5b60008a815260076020819052604082208b815560018082018c905592910190612944612370565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600760008c815260200190815260200160002060070160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506129e38a88888888888888612686565b6129ee8b8b8b61333e565b5050505050505050505050565b6000828152600760205260408120600b015481904290600019015b6000868152600760205260408120600b01805483908110612a3357fe5b60009182526020822060029091020101546000888152600760205260408120600b018054929350909184908110612a6657fe5b9060005260206000209060020201600160028110612a8057fe5b015460008981526007602081815260408084206001600160a01b038f1685529092019052812060010154919250908311612b215760008981526007602081815260408084206001600160a01b038f1685529092019052902060010154612af6906201518090612af090889061282a565b90613545565b905080612b01575060015b612b1588612b0f8385613587565b90613587565b86019550505050612b60565b612b3262015180612af0878661282a565b905080612b3d575060015b9193508391612b5088612b0f8385613587565b9095019450505060001901612a16565b50600085815260076020526040902060010154612b81908390600a0a613545565b60008681526007602052604081206003015491935090612bac906305f5e10090612af0908890613587565b600087815260076020526040902060020154909150612bd690612bcf90836135e0565b84906135e0565b979650505050505050565b6000612bed838361363a565b8061198b5750506001600160a01b0391821660009081526006602090815260408083209390941682526003909201909152205460ff1690565b6000803411612c50576001600160a01b038516600090815260066020526040902060010154612c52565b345b9050612c92612c638686868661309a565b60408051808201909152601081526f092dce6eaccccd2c6d2cadce8408aa8960831b60208201528391906131ec565b90506124558582613283565b612cb0846001600160a01b0316613307565b15611fa15763f23a6e6160e01b6001600160e01b031916846001600160a01b031663f23a6e6188888787876040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612d51578181015183820152602001612d39565b50505050905090810190601f168015612d7e5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015612da157600080fd5b505af1158015612db5573d6000803e3d6000fd5b505050506040513d6020811015612dcb57600080fd5b50516001600160e01b03191614611fa15760405162461bcd60e51b8152600401808060200182810382526031815260200180613a486031913960400191505060405180910390fd5b6001600160a01b038116612e585760405162461bcd60e51b815260040180806020018281038252602681526020018061388e6026913960400191505060405180910390fd5b6003546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600380546001600160a01b0319166001600160a01b0392909216919091179055565b600083815260076020526040812060080180546130519290612ed257fe5b600091825260208083209091015486835260078083526040808520805460018201548351606081018552600284015481526003840154818901528c895294909652600b90910180546001600160a01b03909516968a96929592948a949093908401929190612f3c57fe5b9060005260206000209060020201600160028110612f5657fe5b0154905260008a81526007602090815260409182902060090180548351818402810184019094528084529091830182828015612fbb57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612f9d575b50505060008d815260076020908152604091829020600a018054835181840281018401909452808452929450925083018282801561301857602002820191906000526020600020905b815481526020019060010190808311613004575b50505060008e8152600760205260409020600481015460069091015490925060ff600160a01b82041691506001600160a01b03166128bc565b505050565b600060098260ff161161307057506030810160f81b6110d3565b8160ff16600a111580156130885750600f8260ff1611155b156101b657506057810160f81b6110d3565b6040805180820182526014815273496e73756666696369656e742062616c616e636560601b602080830191909152600085815260078083528482206001600160a01b038a16835201909152918220546130f49184906131ec565b60008481526007602081815260408084206001600160a01b038b168552909201905290205561312484848461333e565b61312f8584846129fb565b905060005b60008481526007602052604090206009015481101561225d57600084815260076020526040812060090180548390811061316a57fe5b6000918252602080832090910154878352600790915260408220600a0180546001600160a01b03909216935090849081106131a157fe5b60009182526020909120015490506131bf612710612af08684613587565b6001600160a01b039092166000908152600660205260409020600190810180549093019092555001613134565b6000818484111561327b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613240578181015183820152602001613228565b50505050905090810190601f16801561326d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000341180156132935750600081115b156132df576001600160a01b0382166000908152600660205260409020600101546132be90826135e0565b6001600160a01b038316600090815260066020526040902060010155613303565b34613303576001600160a01b03821660009081526006602052604090206001018190555b5050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590611cdf5750141592915050565b60008281526007602081815260408084206001600160a01b0388168552909201905281205461336d90836135e0565b60008481526007602081815260408084206001600160a01b038a16855290920190529020549091506134785760008381526007602081815260408084206001600160a01b03891685529092019052902060020154610100900460ff16613448576001600160a01b038416600081815260066020908152604080832060029081018054600181810183559186528486200189905588855260078085528386206008810180549384018155875285872090920180546001600160a01b03191688179055958552909401909152902001805461ff0019166101001790555b60008381526007602081815260408084206001600160a01b03891685529092019052902042600190910155613516565b60008381526007602081815260408084206001600160a01b038916855290920190528120600101546134ab90429061282a565b60008581526007602081815260408084206001600160a01b038b1685529092019052812054919250906134e4908490612af09085613587565b60008681526007602081815260408084206001600160a01b038c16855290920190529020429190910360019091015550505b60009283526007602081815260408086206001600160a01b039097168652959091019052929091209190915550565b600061198b83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506136f0565b6000826135965750600061108b565b828202828482816135a357fe5b041461198b5760405162461bcd60e51b81526004018080602001828103825260218152602001806139a26021913960400191505060405180910390fd5b60008282018381101561198b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6005546000906001600160a01b0316156136e7576005546040805163c455279160e01b81526001600160a01b03868116600483015291519282169291851691839163c4552791916024808301926020929190829003018186803b1580156136a057600080fd5b505afa1580156136b4573d6000803e3d6000fd5b505050506040513d60208110156136ca57600080fd5b50516001600160a01b031614156136e557600191505061108b565b505b50600092915050565b6000818361373f5760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315613240578181015183820152602001613228565b50600083858161374b57fe5b0495945050505050565b8260028101928215613783579160200282015b82811115613783578251825591602001919060010190613768565b5061378f92915061382e565b5090565b8280548282559060005260206000209081019282156137e8579160200282015b828111156137e857825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906137b3565b5061378f929150613843565b8280548282559060005260206000209081019282156137835791602002820182811115613783578251825591602001919060010190613768565b5b8082111561378f576000815560010161382f565b5b8082111561378f5780546001600160a01b031916815560010161384456fe455243313135353a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373455243313135353a207461726765742061646472657373206d757374206265206e6f6e2d7a65726f455243313135353a2063616e6e6f742073657420617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420494473206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e4552433131353542617463685265636569766564455243313135353a20736f6d65206164647265737320696e2062617463682062616c616e6365207175657279206973207a65726f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572455243313135353a206e656564206f70657261746f7220617070726f76616c20666f7220337264207061727479207472616e7366657273455243313135353a2049447320616e642076616c756573206d75737420686176652073616d65206c656e67746873455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206f6e455243313135355265636569766564a26469706673582212204d21a749386be4656b14a2b38aa4ee946459d679e0fa238b1a1a2b8598eba6be64736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "96:3246:12:-:0;;;;;;;;;;;;-1:-1:-1;649:32:15;668:12;:10;:12::i;:::-;649:18;:32::i;:::-;96:3246:12;;782:556:10;844:19;898:2;879:8;:21;;;;:55;;-1:-1:-1;904:30:10;923:10;904:18;:30::i;:::-;875:457;;;-1:-1:-1;;;1240:14:10;1236:22;1223:36;1220:2;1216:44;1191:83;;;-1:-1:-1;1311:10:10;875:457;782:556;:::o;1691:239:15:-;-1:-1:-1;;;;;1764:22:15;;1756:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:13;;1844:45;;-1:-1:-1;;;;;1844:45:15;;;;1865:13;;1844:45;;1865:7;;1844:45;1899:13;:24;;-1:-1:-1;;;;;;1899:24:15;-1:-1:-1;;;;;1899:24:15;;;;;;;;;;1691:239::o;384:146:10:-;496:27;;-1:-1:-1;;;;;496:27:10;;;483:40;;;;384:146::o;96:3246:12:-;;;;;;;",
  "deployedSourceMap": "96:3246:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:234:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1687:234:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1092:255;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1092:255:14;-1:-1:-1;;;;;;1092:255:14;;:::i;:::-;;;;;;;;;;;;;;;;;;6733:141;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6733:141:14;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5881:778;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5881:778:14;;;;;;;;;;-1:-1:-1;5881:778:14;;-1:-1:-1;5881:778:14;-1:-1:-1;5881:778:14;:::i;:::-;;2079:22:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2079:22:9;;;;;;-1:-1:-1;;;;;2079:22:9;;;;;;-1:-1:-1;;;;;2079:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2079:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2107:39;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2107:39:9;-1:-1:-1;;;;;2107:39:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:47;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2199:47:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2199:47:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:167:10;;;;;;;;;;;;;:::i;2253:823:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2253:823:12;;-1:-1:-1;;2253:823:12;;;-1:-1:-1;;;2253:823:12;;;;;;;;;;-1:-1:-1;;;;;2253:823:12;;:::i;2245:631:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2245:631:14;;;;;;;;-1:-1:-1;2245:631:14;;-1:-1:-1;;;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2245:631:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2245:631:14;;-1:-1:-1;2245:631:14;;-1:-1:-1;;;;;2245:631:14:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:146:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;384:146:10;-1:-1:-1;;;;;384:146:10;;:::i;961:161:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;961:161:8;;;;;;;;:::i;1414:132:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1414:132:12;;;;;;-1:-1:-1;;;;;1414:132:12;;:::i;631:119:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;631:119:13;-1:-1:-1;;;;;631:119:13;;:::i;887:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;887:117:13;-1:-1:-1;;;;;887:117:13;;:::i;733:144:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;733:144:12;;;;;;-1:-1:-1;;;;;733:144:12;;:::i;1137:93:15:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1137:93:15;;;;;;;;;;;;;;3354:308:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3354:308:14;;;;;;;;;;:::i;1150:116:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1150:116:13;-1:-1:-1;;;;;1150:116:13;;:::i;2105:1040::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2105:1040:13;;-1:-1:-1;;2105:1040:13;;;-1:-1:-1;;;2105:1040:13;;;;;;;;;;-1:-1:-1;;;;;2105:1040:13;;:::i;564:159:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;564:159:8;;;;;;;;;;;;;:::i;459:134:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;459:134:17;-1:-1:-1;;;;;459:134:17;;:::i;1046:142:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1046:142:12;;;;;;-1:-1:-1;;;;;1046:142:12;;:::i;3943:157:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3943:157:14;;;;;;;;;;:::i;2152:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2152:41:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2152:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;4654:638:14;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4654:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4654:638:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4654:638:14;;;;;;;;;;-1:-1:-1;4654:638:14;;-1:-1:-1;4654:638:14;-1:-1:-1;4654:638:14;:::i;1379:116:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1379:116:15;-1:-1:-1;;;;;1379:116:15;;:::i;3372:647:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3372:647:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3372:647:13;;-1:-1:-1;3372:647:13;;-1:-1:-1;;;;;3372:647:13:i;1687:234:14:-;1765:7;-1:-1:-1;;;;;1792:21:14;;1784:77;;;;-1:-1:-1;;;1784:77:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1878:11:14;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1878:28:14;;;;:19;;;:28;;;;:36;1687:234;;;;;:::o;1092:255::-;1172:4;-1:-1:-1;;;;;;1190:42:14;;-1:-1:-1;;;1190:42:14;;:99;;-1:-1:-1;;;;;;;1246:43:14;;-1:-1:-1;;;1246:43:14;1190:99;1186:135;;;-1:-1:-1;1308:4:14;1301:11;;1186:135;-1:-1:-1;1335:5:14;1092:255;;;;:::o;6733:141::-;6833:15;6822:45;;;;;;;;;;;;;-1:-1:-1;;6822:45:14;;;;;;;;;;;;;;;;;;;;;;;;;;6790:13;;6822:45;;;;6833:15;;6822:45;;6833:15;6822:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6850:16;6863:2;6850:12;:16::i;:::-;6822:10;:45::i;5881:778::-;6112:27;;;6104:86;;;;-1:-1:-1;;;6104:86:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6208:16:14;;6200:69;;;;-1:-1:-1;;;6200:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6308:12;:10;:12::i;:::-;-1:-1:-1;;;;;6300:20:14;:4;-1:-1:-1;;;;;6300:20:14;;:68;;;;6324:36;6341:4;6347:12;:10;:12::i;:::-;6324:16;:36::i;:::-;:44;;6364:4;6324:44;6300:68;6279:170;;;;-1:-1:-1;;;6279:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6460:37;6475:4;6481:2;6485:3;;6460:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:37:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6490:6:14;;-1:-1:-1;6490:6:14;;;;6460:37;;;6490:6;;6460:37;6490:6;6460:37;;;;;;;;;-1:-1:-1;6460:14:14;;-1:-1:-1;;;6460:37:14:i;:::-;6547:2;-1:-1:-1;;;;;6513:50:14;6541:4;-1:-1:-1;;;;;6513:50:14;6527:12;:10;:12::i;:::-;-1:-1:-1;;;;;6513:50:14;;6551:3;;6556:6;;6513:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6513:50:14;;;;;;;;;;;;;;;;;-1:-1:-1;6513:50:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6513:50:14;;;;;;;;-1:-1:-1;6513:50:14;;-1:-1:-1;;;;;;;6513:50:14;6574:78;6610:12;:10;:12::i;:::-;6624:4;6630:2;6634:3;;6574:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6574:78:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6639:6:14;;-1:-1:-1;6639:6:14;;;;6574:78;;;6639:6;;6574:78;6639:6;6574:78;;;;;;;;;-1:-1:-1;;6574:78:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6647:4:14;;-1:-1:-1;6647:4:14;;;;6574:78;;6647:4;;;;6574:78;;;;;;;;;-1:-1:-1;6574:35:14;;-1:-1:-1;;;6574:78:14:i;:::-;5881:778;;;;;;;;:::o;2079:22:9:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;2079:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2079:22:9;;;;;;;;;;;-1:-1:-1;;2079:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2079:22:9;;-1:-1:-1;2079:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2079:22:9;;;;;;;;;;;;;;;-1:-1:-1;;;;;2079:22:9;;;;;;;;-1:-1:-1;2079:22:9;;:::o;2107:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2199:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2199:47:9;;;;-1:-1:-1;;;2199:47:9;;;;;-1:-1:-1;;;2199:47:9;;;;;-1:-1:-1;;;2199:47:9;;;;;-1:-1:-1;;;2199:47:9;;;;;-1:-1:-1;;;2199:47:9;;;;;:::o;2552:167:10:-;2688:24;2681:31;;;;;;;-1:-1:-1;;2681:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2612:13;;2681:31;;2688:24;;2681:31;;2688:24;2681:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:167;;:::o;2253:823:12:-;2688:2;427:30;440:2;444:12;:10;:12::i;:::-;427;:30::i;:::-;419:66;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;-1:-1:-1;;;419:66:12;;;;;;;;;;;;;;;2731:1:::1;2710:11:::0;;;:7:::1;:11;::::0;;;;:18;2702:48:::1;;;::::0;;-1:-1:-1;;;2702:48:12;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2702:48:12;;;;;;;;;;;;;::::1;;2761:262;2771:2;2793:12;2825:15;2860:14;2894:24;2938:21;2979:9;3008:14;2761:9;:262::i;:::-;3039:30;::::0;;;;;;;3052:2;;3039:30:::1;::::0;;;;;::::1;::::0;;::::1;2253:823:::0;;;;;;;;;:::o;2245:631:14:-;2394:16;2453:3;:10;2434:8;:15;:29;2426:90;;;;-1:-1:-1;;;2426:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:30;2574:8;:15;2560:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2560:30:14;;2527:63;;2606:9;2601:238;2625:8;:15;2621:1;:19;2601:238;;;2692:1;-1:-1:-1;;;;;2669:25:14;:8;2678:1;2669:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2669:25:14;;;2661:90;;;;-1:-1:-1;;;2661:90:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2784:7;:15;2792:3;2796:1;2792:6;;;;;;;;;;;;;;2784:15;;;;;;;;;;;:23;;:36;2808:8;2817:1;2808:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2784:36:14;-1:-1:-1;;;;;2784:36:14;;;;;;;;;;;;:44;;;2765:13;2779:1;2765:16;;;;;;;;;;;;;;;;;:63;2642:3;;2601:238;;;-1:-1:-1;2856:13:14;2245:631;-1:-1:-1;;;2245:631:14:o;384:146:10:-;496:27;;-1:-1:-1;;;;;496:27:10;;;483:40;;;;384:146::o;961:161:8:-;1031:7;1077:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1077:28:8;;;;:19;;;:28;;;;:37;;;1057:58;;:15;;:19;:58::i;:::-;1050:65;961:161;-1:-1:-1;;;961:161:8:o;1414:132:12:-;1489:4;1512:27;1525:2;1529:9;1512:12;:27::i;631:119:13:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;707:17:13::1;;::::0;;;:6:::1;:17;::::0;;;;:36;;-1:-1:-1;;707:36:13::1;739:4;707:36;::::0;;631:119::o;887:117::-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:17:13::1;992:5;960:17:::0;;;:6:::1;:17;::::0;;;;:37;;-1:-1:-1;;960:37:13::1;::::0;;887:117::o;733:144:12:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;821:11:12::1;::::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;821:30:12;;::::1;::::0;;:19;;;::::1;:30:::0;;;;:42:::1;;:49:::0;;-1:-1:-1;;821:49:12::1;866:4;821:49;::::0;;733:144::o;1137:93:15:-;1210:13;;-1:-1:-1;;;;;1210:13:15;1137:93;:::o;3354:308:14:-;3466:8;-1:-1:-1;;;;;3450:24:14;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3450:24:14;;;3442:81;;;;-1:-1:-1;;;3442:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3584:8;3533:6;:20;3540:12;:10;:12::i;:::-;-1:-1:-1;;;;;3533:20:14;;;;;;;;;;;;;;;;;-1:-1:-1;3533:20:14;;;:48;;;;;;:38;;;;:48;;;;;:59;;-1:-1:-1;;3533:59:14;;;;;;;;;;;3622:12;:10;:12::i;:::-;-1:-1:-1;;;;;3607:48:14;;3646:8;3607:48;;;;;;;;;;;;;;;;;;;;3354:308;;:::o;1150:116:13:-;1213:4;1236:23;1249:9;1236:12;:23::i;2105:1040::-;331:26;344:12;:10;:12::i;:::-;331;:26::i;:::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;;;;2682:378:::1;2695:9;2727:2;2752:6;2781:8;2812:12;2847:15;2885:14;2922:24;2969:21;3013:9;3045:14;2682:12;:378::i;:::-;-1:-1:-1::0;;;;;3075:63:13;::::1;3112:1;3090:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;3075:63:13::1;;3127:2;3131:6;3075:63;;;;;;;;;;;;;;;;;;;;;;;;2105:1040:::0;;;;;;;;;;;:::o;564:159:8:-;654:7;680:36;697:7;706:2;710:5;680:16;:36::i;:::-;673:43;564:159;-1:-1:-1;;;;564:159:8:o;459:134:17:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;543:28:17::1;:43:::0;;-1:-1:-1;;;;;;543:43:17::1;-1:-1:-1::0;;;;;543:43:17;;;::::1;::::0;;;::::1;::::0;;459:134::o;1046:142:12:-;901:10:15;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;1176:5:12::1;1131:11:::0;;;:7:::1;:11;::::0;;;;;;;-1:-1:-1;;;;;1131:30:12;;::::1;::::0;;:19;;;::::1;:30:::0;;;;:42:::1;;:50:::0;;-1:-1:-1;;1131:50:12::1;::::0;;1046:142::o;3943:157:14:-;4034:4;4057:36;4075:7;4084:8;4057:17;:36::i;2152:41:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2152:41:9;;;;-1:-1:-1;;;2152:41:9;;;;;-1:-1:-1;;;2152:41:9;;;;:::o;4654:638:14:-;-1:-1:-1;;;;;4856:16:14;;4848:69;;;;-1:-1:-1;;;4848:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4956:12;:10;:12::i;:::-;-1:-1:-1;;;;;4948:20:14;:4;-1:-1:-1;;;;;4948:20:14;;:68;;;;4972:36;4989:4;4995:12;:10;:12::i;4972:36::-;:44;;5012:4;4972:44;4948:68;4927:170;;;;-1:-1:-1;;;4927:170:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5108:30;5118:4;5124:2;5128;5132:5;5108:9;:30::i;:::-;5189:2;-1:-1:-1;;;;;5154:49:14;5183:4;-1:-1:-1;;;;;5154:49:14;5169:12;:10;:12::i;:::-;-1:-1:-1;;;;;5154:49:14;;5193:2;5197:5;5154:49;;;;;;;;;;;;;;;;;;;;;;;;5214:71;5245:12;:10;:12::i;:::-;5259:4;5265:2;5269;5273:5;5280:4;;5214:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5214:30:14;;-1:-1:-1;;;5214:71:14:i;:::-;4654:638;;;;;;:::o;1379:116:15:-;901:10;:8;:10::i;:::-;893:55;;;;;-1:-1:-1;;;893:55:15;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;893:55:15;;;;;;;;;;;;;;;1460:28:::1;1479:8;1460:18;:28::i;:::-;1379:116:::0;:::o;3372:647:13:-;331:26;344:12;:10;:12::i;331:26::-;323:62;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;-1:-1:-1;;;323:62:13;;;;;;;;;;;;;;;3573:1:::1;3552:11:::0;;;:7:::1;:11;::::0;;;;:18;:22;;;;:77:::1;;;3608:14;:21;3594:3;:10;:35;3552:77;3544:107;;;::::0;;-1:-1:-1;;;3544:107:13;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3544:107:13;;;;;;;;;;;;;::::1;;3667:9;3662:351;3686:3;:10;3682:1;:14;3662:351;;;3717:42;3729:2;3733:3;3737:1;3733:6;;;;;;;;;;;;;;3741:14;3756:1;3741:17;;;;;;;;;;;;;;3717:11;:42::i;:::-;3884:11;::::0;;;:7:::1;:11;::::0;;;;:22:::1;;:25:::0;;:22;;:11;:25:::1;;;;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3884:25:13::1;::::0;3794:12:::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;3779:223:13::1;;3943:3;3947:1;3943:6;;;;;;;;;;;;;;3983:7;:11;3991:2;3983:11;;;;;;;;;;;:18;;;3779:223;;;;;;;;;;;;;;;;;;;;;;;;3698:3;;3662:351;;;;3372:647:::0;;;:::o;933:419:21:-;986:13;1011:10;1044:1;1055:68;1062:6;;1055:68;;1084:7;;;;;;1110:2;1105:7;;1055:68;;;1132:16;1161:5;1151:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16:21;;1132:35;;1182:6;1177:141;1194:5;1192:1;:7;1177:141;;;1228:2;1224:1;:6;1220:10;;1265:21;1283:1;1265:11;:21::i;:::-;1244:3;1260:1;1256;1248:5;:9;:13;1244:18;;;;;;;;;;;:42;-1:-1:-1;;;;;1244:42:21;;;;;;;;-1:-1:-1;1305:2:21;1300:7;;;-1:-1:-1;1201:3:21;;1177:141;;;-1:-1:-1;1341:3:21;933:419;-1:-1:-1;;;;933:419:21:o;86:515::-;305:10;;292;;163:13;;213:1;;250;;163:13;;292:23;281:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;281:35:21;-1:-1:-1;262:54:21;-1:-1:-1;262:54:21;365:6;;405:76;421:3;:10;417:1;:14;405:76;;;464:3;468:1;464:6;;;;;;;;;;;;;;;;452:4;457:3;;;;;;452:9;;;;;;;;;;;:18;-1:-1:-1;;;;;452:18:21;;;;;;;;-1:-1:-1;433:3:21;;405:76;;;-1:-1:-1;499:1:21;490:76;506:3;:10;502:1;:14;490:76;;;549:3;553:1;549:6;;;;;;;;;;;;;;;;537:4;542:3;;;;;;537:9;;;;;;;;;;;:18;-1:-1:-1;;;;;537:18:21;;;;;;;;-1:-1:-1;518:3:21;;490:76;;;-1:-1:-1;589:4:21;;86:515;-1:-1:-1;;;;;;;86:515:21:o;782:556:10:-;844:19;898:2;879:8;:21;;;;:55;;;904:30;923:10;904:18;:30::i;:::-;875:457;;;-1:-1:-1;;;1240:14:10;1236:22;1223:36;1220:2;1216:44;1191:83;;;-1:-1:-1;1311:10:10;1304:17;;4778:404:8;4894:19;4928:1;4916:9;:13;:51;;-1:-1:-1;;;;;4944:12:8;;;;;;:6;:12;;;;;:23;;;4916:51;;;4932:9;4916:51;4894:73;;4982:9;4977:157;5001:3;:10;4997:1;:14;4977:157;;;5046:77;5062:40;5074:4;5080:2;5084:3;5088:1;5084:6;;;;;;;;;;;;;;5092;5099:1;5092:9;;;;;;;;;;;;;;5062:11;:40::i;:::-;5046:77;;;;;;;;;;;;-1:-1:-1;;;5046:77:8;;;;:11;;:77;:15;:77::i;:::-;5032:91;-1:-1:-1;5013:3:8;;4977:157;;;;5143:32;5157:4;5163:11;5143:13;:32::i;:::-;4778:404;;;;;:::o;7497:558:14:-;7740:15;:2;-1:-1:-1;;;;;7740:13:14;;:15::i;:::-;7737:312;;;7898:52;;;-1:-1:-1;;;;;7796:154:14;;7813:2;-1:-1:-1;;;;;7796:43:14;;7840:8;7850:4;7856:3;7861:6;7869:4;7796:78;;;;;;;;;;;;;-1:-1:-1;;;;;7796:78:14;;;;;;-1:-1:-1;;;;;7796:78:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7796:78:14;-1:-1:-1;;;;;;7796:154:14;;7771:267;;;;-1:-1:-1;;;7771:267:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3177:162:12;3253:4;3276:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3276:30:12;;;;:19;;;:30;;;;:42;;;;;;:56;;;3322:10;:8;:10::i;4263:1359:13:-;4682:23;4724:9;4719:120;4743:24;:31;4739:1;:35;4719:120;;;4812:24;4837:1;4812:27;;;;;;;;;;;;;;4793:46;;;;4776:3;;;;;4719:120;;;;4882:1;4858:14;:21;:25;:75;;;;-1:-1:-1;4887:46:13;4858:75;:119;;;;;4953:15;4972:5;4953:24;4858:119;:168;;;;;5021:5;4997:21;:29;4858:168;4850:214;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;-1:-1:-1;;;4850:214:13;;;;;;;;;;;;;;;5075:11;;;;:7;:11;;;;;;;;:24;;;:39;;;5161:18;;5124:34;;;;:55;;;;5224:18;;;;-1:-1:-1;5189:32:13;;:53;5252:74;;;;;;;5289:15;5252:74;;5306:18;;;;5252:74;;;;:30;;;;:74;;5240:1;5252:74;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5336:11:13;;;;:7;:11;;;;;;;;:43;;;;:26;;;;;:43;;;;:::i;:::-;-1:-1:-1;5389:11:13;;;;:7;:11;;;;;;;;:63;;;;:36;;;;;:63;;;;:::i;:::-;-1:-1:-1;;5462:11:13;;;;:7;:11;;;;;;:33;;;:57;;;;5529:21;;;;:33;;-1:-1:-1;;;;5529:33:13;-1:-1:-1;;;5529:33:13;;;;;;;;;;;-1:-1:-1;;;;;;5572:43:13;-1:-1:-1;;;;;5572:43:13;;;;;;;;;;-1:-1:-1;;;;4263:1359:13:o;1307:134:20:-;1365:7;1391:43;1395:1;1398;1391:43;;;;;;;;;;;;;;;;;:3;:43::i;2013:102:15:-;2095:13;;2056:4;;-1:-1:-1;;;;;2095:13:15;2079:12;:10;:12::i;:::-;-1:-1:-1;;;;;2079:29:15;;2072:36;;2013:102;:::o;4120:137:13:-;-1:-1:-1;;;;;4207:17:13;;4184:4;4207:17;;;:6;:17;;;;;:29;;;;:43;;;4240:10;:8;:10::i;5629:1167::-;6211:11;;;;:7;:11;;;;;:18;:23;:37;;;;;6247:1;6238:6;:10;6211:37;6203:67;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;-1:-1:-1;;;6203:67:13;;;;;;;;;;;;;;;6281:11;;;;:7;:11;;;;;;;:27;;;6318:20;;;;:31;;;:20;6359:19;;;6379:12;:10;:12::i;:::-;-1:-1:-1;;;;;6359:33:13;-1:-1:-1;;;;;6359:33:13;;;;;;;;;;;;:45;;;:52;;;;;;;;;;;;;;;;;;6465:4;6421:7;:11;6429:2;6421:11;;;;;;;;;;;:19;;:30;6441:9;-1:-1:-1;;;;;6421:30:13;-1:-1:-1;;;;;6421:30:13;;;;;;;;;;;;:41;;;:48;;;;;;;;;;;;;;;;;;6480:262;6490:2;6512:12;6544:15;6579:14;6613:24;6657:21;6698:9;6727:14;6480:9;:262::i;:::-;6753:36;6767:9;6778:2;6782:6;6753:13;:36::i;:::-;5629:1167;;;;;;;;;;;:::o;2355:1317:8:-;2448:7;2559:11;;;:7;:11;;;;;:30;;:37;2448:7;;2519:15;;-1:-1:-1;;2559:41:8;2545:835;2630:19;2652:11;;;:7;:11;;;;;:30;;:33;;2683:1;;2652:33;;;;;;;;;;;;;;;;;;:36;;2702:12;2717:11;;;:7;:11;;;;;:30;;:33;;2652:36;;-1:-1:-1;2702:12:8;;2748:1;;2717:33;;;;;;;;;;;;;;;;2751:1;2717:36;;;;;;;;;2767:19;2805:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2805:28:8;;;;:19;;;:28;;;;:37;;;2717:36;;-1:-1:-1;2767:19:8;2805:52;-1:-1:-1;2801:569:8;;2907:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2907:28:8;;;;:19;;;:28;;;;:37;;;2891:66;;2951:5;;2892:53;;:10;;:14;:53::i;:::-;2891:59;;:66::i;:::-;2877:80;-1:-1:-1;2979:16:8;2975:37;;-1:-1:-1;3011:1:8;2975:37;3043:34;3071:5;3044:21;:11;3060:4;3044:15;:21::i;:::-;3043:27;;:34::i;:::-;3030:47;;;;3095:5;;;;;2801:569;3153:40;3187:5;3154:27;:10;3169:11;3154:14;:27::i;3153:40::-;3139:54;-1:-1:-1;3215:16:8;3211:37;;-1:-1:-1;3247:1:8;3211:37;3279:11;;-1:-1:-1;3279:11:8;;3321:34;3349:5;3322:21;:11;3338:4;3322:15;:21::i;3321:34::-;3308:47;;;;-1:-1:-1;;;;;2610:3:8;2545:835;;;-1:-1:-1;3437:11:8;;;;:7;:11;;;;;:20;;;3419:39;;:9;;3433:2;:24;3419:13;:39::i;:::-;3508:17;3539:11;;;:7;:11;;;;;:32;;;3407:51;;-1:-1:-1;3508:17:8;3528:56;;3578:5;;3529:43;;:5;;:9;:43::i;3528:56::-;3615:11;;;;:7;:11;;;;;:34;;;3508:76;;-1:-1:-1;3601:64:8;;3615:49;;3508:76;3615:38;:49::i;:::-;3601:9;;:13;:64::i;:::-;3594:71;2355:1317;-1:-1:-1;;;;;;;2355:1317:8:o;1094:203:17:-;1179:4;1202:41;1225:7;1234:8;1202:22;:41::i;:::-;:88;;;-1:-1:-1;;;;;;;1247:15:17;;;;;;;:6;:15;;;;;;;;:43;;;;;;:33;;;;:43;;;;;;;;1094:203::o;4414:306:8:-;4505:19;4539:1;4527:9;:13;:51;;-1:-1:-1;;;;;4555:12:8;;;;;;:6;:12;;;;;:23;;;4527:51;;;4543:9;4527:51;4505:73;;4602:69;4618:32;4630:4;4636:2;4640;4644:5;4618:11;:32::i;:::-;4602:69;;;;;;;;;;;;-1:-1:-1;;;4602:69:8;;;;:11;;:69;:15;:69::i;:::-;4588:83;;4681:32;4695:4;4701:11;4681:13;:32::i;6975:516:14:-;7193:15;:2;-1:-1:-1;;;;;7193:13:14;;:15::i;:::-;7190:295;;;7344:47;;;-1:-1:-1;;;;;7249:142:14;;7266:2;-1:-1:-1;;;;;7249:38:14;;7288:8;7298:4;7304:2;7308:5;7315:4;7249:71;;;;;;;;;;;;;-1:-1:-1;;;;;7249:71:14;;;;;;-1:-1:-1;;;;;7249:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7249:71:14;-1:-1:-1;;;;;;7249:142:14;;7224:250;;;;-1:-1:-1;;;7224:250:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1691:239:15;-1:-1:-1;;;;;1764:22:15;;1756:73;;;;-1:-1:-1;;;1756:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1865:13;;1844:45;;-1:-1:-1;;;;;1844:45:15;;;;1865:13;;1844:45;;1865:7;;1844:45;1899:13;:24;;-1:-1:-1;;;;;;1899:24:15;-1:-1:-1;;;;;1899:24:15;;;;;;;;;;1691:239::o;6802:766:13:-;6906:11;;;;:7;:11;;;;;:22;;:25;;6893:668;;6906:11;:25;;;;;;;;;;;;;;;;6984:11;;;:7;:11;;;;;;;:18;;6906:25;7025:20;;;6893:668;;;;;;;7128:34;;;;6893:668;;7187:32;;;;6893:668;;;;7244:11;;;;;;;:30;;;;:33;;-1:-1:-1;;;;;6906:25:13;;;;6954:7;;6984:18;;7025:20;;7068:12;;6893:668;;;;;;7244:30;6906:25;7244:33;;;;;;;;;;;;;;7278:1;7244:36;;;;;;;;;6893:668;;7326:11;;;;:7;:11;;;;;;;;;:26;;6893:668;;;;;;;;;;;;;;;;;7326:26;;6893:668;;7326:26;6893:668;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6893:668:13;;;;;;;;;;;;;;;;-1:-1:-1;;;7375:11:13;;;;:7;:11;;;;;;;;;:36;;6893:668;;;;;;;;;;;;;;;;;;;-1:-1:-1;7375:36:13;-1:-1:-1;6893:668:13;;7375:36;6893:668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7434:11:13;;;;:7;:11;;;;;:33;;;;7490:21;;;;;7434:33;;-1:-1:-1;7490:21:13;-1:-1:-1;;;7490:21:13;;;;-1:-1:-1;;;;;;7534:26:13;6893:12;:668::i;:::-;6802:766;;;:::o;607:320:21:-;660:4;695:1;690;:6;;;676:187;;-1:-1:-1;724:16:21;:20;;:16;719:26;712:33;;676:187;778:1;766:14;;:2;:14;;:32;;;;;796:2;790:1;784:14;;;;766:32;762:101;;;-1:-1:-1;826:25:21;;;:16;821:31;814:38;;3678:683:8;3838:68;;;;;;;;;;;-1:-1:-1;;;3838:68:8;;;;;;;;3778:12;3838:11;;;:7;:11;;;;;;-1:-1:-1;;;;;3838:25:8;;;;:19;:25;;;;;;:33;:68;;3876:5;;3838:37;:68::i;:::-;3802:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;3802:25:8;;;;:19;;;:25;;;;:104;3916:28;3930:2;3810;3938:5;3916:13;:28::i;:::-;3962:33;3979:4;3985:2;3989:5;3962:16;:33::i;:::-;3955:40;;4011:9;4006:327;4030:11;;;;:7;:11;;;;;:26;;:33;4026:37;;4006:327;;;4084:21;4108:11;;;:7;:11;;;;;:26;;:29;;4135:1;;4108:29;;;;;;;;;;;;;;;;;;4186:11;;;:7;:11;;;;;;:36;;:39;;-1:-1:-1;;;;;4108:29:8;;;;-1:-1:-1;4186:36:8;4223:1;;4186:39;;;;;;;;;;;;;;;;;-1:-1:-1;4275:47:8;4316:5;4276:34;:4;4186:39;4276:8;:34::i;4275:47::-;-1:-1:-1;;;;;4239:21:8;;;;;;;:6;:21;;;;;:32;;;;:83;;;;;;;;-1:-1:-1;4065:3:8;4006:327;;1877:187:20;1963:7;1998:12;1990:6;;;;1982:29;;;;-1:-1:-1;;;1982:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:5:20;;;1877:187::o;5188:290:8:-;5279:1;5267:9;:13;:32;;;;;5298:1;5284:11;:15;5267:32;5263:209;;;-1:-1:-1;;;;;5339:12:8;;;;;;:6;:12;;;;;:23;;;:40;;5367:11;5339:27;:40::i;:::-;-1:-1:-1;;;;;5313:12:8;;;;;;:6;:12;;;;;:23;;:66;5263:209;;;5398:9;5394:78;;-1:-1:-1;;;;;5426:12:8;;;;;;:6;:12;;;;;:23;;:37;;;5394:78;5188:290;;:::o;590:797:19:-;650:4;1298:20;;1143:66;1337:15;;;;;:42;;-1:-1:-1;1356:23:19;;;1329:51;-1:-1:-1;;590:797:19:o;1302:1013:8:-;1398:18;1419:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1419:30:8;;;;:19;;;:30;;;;:38;:49;;1462:5;1419:42;:49::i;:::-;1483:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1483:30:8;;;;:19;;;:30;;;;:38;1398:70;;-1:-1:-1;1479:768:8;;1548:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1548:30:8;;;;:19;;;:30;;;;:39;;;;;;;;1543:232;;-1:-1:-1;;;;;1607:17:8;;;;;;:6;:17;;;;;;;;:24;;;;:33;;;;;;;;;;;;;;;;;;1658:11;;;:7;:11;;;;;;:22;;;:38;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1658:38:8;;;;;1714:30;;;:19;;;:30;;;;;:39;:46;;-1:-1:-1;;1714:46:8;1658:38;1714:46;;;1543:232;1789:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;1789:30:8;;;;:19;;;:30;;;;1831:15;1789:39;;;;:57;1479:768;;;1957:20;2000:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2000:30:8;;;;:19;;;:30;;;;:39;;;1980:60;;:15;;:19;:60::i;:::-;2054:19;2077:11;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2077:30:8;;;;:19;;;:30;;;;:38;1957:83;;-1:-1:-1;2054:19:8;2076:74;;2139:10;;2077:56;;1957:83;2077:42;:56::i;2076:74::-;2165:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2165:30:8;;;;:19;;;:30;;;;2207:15;:29;;;;2165:39;;;;:71;-1:-1:-1;;1479:768:8;2257:11;;;;:7;:11;;;;;;;;-1:-1:-1;;;;;2257:30:8;;;;;:19;;;;:30;;;;;;:51;;;;-1:-1:-1;1302:1013:8:o;3218:130:20:-;3276:7;3302:39;3306:1;3309;3302:39;;;;;;;;;;;;;;;;;:3;:39::i;2304:459::-;2362:7;2603:6;2599:45;;-1:-1:-1;2632:1:20;2625:8;;2599:45;2666:5;;;2670:1;2666;:5;:1;2689:5;;;;;:10;2681:56;;;;-1:-1:-1;;;2681:56:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;867:176;925:7;956:5;;;979:6;;;;971:46;;;;;-1:-1:-1;;;971:46:20;;;;;;;;;;;;;;;;;;;;;;;;;;;694:394:17;804:28;;784:4;;-1:-1:-1;;;;;804:28:17;:42;800:260;;906:28;;961:30;;;-1:-1:-1;;;961:30:17;;-1:-1:-1;;;;;961:30:17;;;;;;;;;906:28;;;;953:51;;;;906:28;;961:21;;:30;;;;;;;;;;;;;;906:28;961:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;961:30:17;-1:-1:-1;;;;;953:51:17;;949:101;;;1031:4;1024:11;;;;;949:101;800:260;;-1:-1:-1;1076:5:17;694:394;;;;:::o;3969:338:20:-;4055:7;4155:12;4148:5;4140:28;;;;-1:-1:-1;;;4140:28:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:9;4194:1;4190;:5;;;;;;;3969:338;-1:-1:-1;;;;;3969:338:20:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.7.1;\n\nimport './Mintable.sol';\n\ncontract Maintenable is Mintable {\n\n\n    /****************************\n    EVENTS\n    *****************************/\n\n\n    event TokenUpdated(uint256 indexed _id, uint256 _documentHash);\n\n\n    /****************************\n    MODIFIERS\n    *****************************/\n\n\n    modifier onlyMaintener(uint256 id) {\n        require(_isMaintener(id, _msgSender()), \"Insufficient permission\");\n        _;\n    }\n\n\n    /****************************\n    EXTERNAL FUNCTIONS\n    *****************************/\n\n\n    /**\n     * @dev Function to authorize an address to maintain a token.\n     * @param maintener The authorized address\n     */\n    function authorizeMaintener(uint256 id, address maintener) external onlyOwner {\n        _tokens[id].holders[maintener].isMaintener = true;\n    }\n\n    /**\n     * @dev Function to revoke the authorization to maintain a token.\n     * @param id the token id\n     * @param maintener The authorized address\n     */\n    function revokeMaintener(uint256 id, address maintener) external onlyOwner {\n        _tokens[id].holders[maintener].isMaintener = false;\n    }\n\n    /**\n     * @dev Function to check if an address is authorized to maintain a token.\n     * @param id the token id\n     * @param maintener The authorized address\n     * @return true if it's a maintener address\n     */\n    function isMaintener(uint256 id, address maintener) external view returns (bool) {\n        return _isMaintener(id, maintener);\n    }\n\n    /**\n     * @dev Function to update a token with the given ID.\n     * @param id ID of the token to be updated\n     * @param metadataHash Metadata file hash\n     * @param transactionFees transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\n     * @param feesRecipients list of addresses receiving transfer fees\n     * @param feesRecipientsPercentage list of percentage, each one for the corresponding feesRecipients\n     * @param minHoldingForCallback minimum holding to propose a callback\n     * @param isPrivate true if holder need approval\n     * @param legalAuthority address of the legal authority\n     */\n    function updateToken(uint256 id,\n                         uint256 metadataHash,\n                         uint256[3] memory transactionFees,\n                         address[] memory feesRecipients,\n                         uint256[] memory feesRecipientsPercentage,\n                         uint256 minHoldingForCallback,\n                         bool isPrivate,\n                         address legalAuthority) external onlyMaintener(id) {\n        require(_tokens[id].supply > 0, \"Unknown token\");\n\n        _setToken(id,\n                  metadataHash,\n                  transactionFees,\n                  feesRecipients,\n                  feesRecipientsPercentage,\n                  minHoldingForCallback,\n                  isPrivate,\n                  legalAuthority);\n\n        emit TokenUpdated(id, metadataHash);\n    }\n\n\n    /****************************\n    INTERNAL FUNCTIONS\n    *****************************/\n\n\n    function _isMaintener(uint256 id, address maintener) internal view returns (bool) {\n        return _tokens[id].holders[maintener].isMaintener || _isOwner();\n    }\n\n}\n",
  "sourcePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
  "ast": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
    "exportedSymbols": {
      "Maintenable": [
        2185
      ]
    },
    "id": 2186,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2027,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:12"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol",
        "file": "./Mintable.sol",
        "id": 2028,
        "nodeType": "ImportDirective",
        "scope": 2186,
        "sourceUnit": 2707,
        "src": "70:24:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2029,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2706,
              "src": "120:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$2706",
                "typeString": "contract Mintable"
              }
            },
            "id": 2030,
            "nodeType": "InheritanceSpecifier",
            "src": "120:8:12"
          }
        ],
        "contractDependencies": [
          155,
          167,
          217,
          240,
          269,
          1588,
          1712,
          1796,
          2706,
          3170,
          3268,
          3444,
          4099
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2185,
        "linearizedBaseContracts": [
          2185,
          2706,
          3170,
          3444,
          3268,
          1588,
          1796,
          1712,
          269,
          240,
          4099,
          167,
          155,
          217
        ],
        "name": "Maintenable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 2036,
            "name": "TokenUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "238:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "259:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:44:12"
            },
            "src": "219:63:12"
          },
          {
            "body": {
              "id": 2050,
              "nodeType": "Block",
              "src": "409:94:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2042,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2038,
                            "src": "440:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2043,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1760
                              ],
                              "referencedDeclaration": 1760,
                              "src": "444:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 2044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "444:12:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2041,
                          "name": "_isMaintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2184,
                          "src": "427:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,address) view returns (bool)"
                          }
                        },
                        "id": 2045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "427:30:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e74207065726d697373696f6e",
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "459:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        },
                        "value": "Insufficient permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        }
                      ],
                      "id": 2040,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "419:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:66:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "419:66:12"
                },
                {
                  "id": 2049,
                  "nodeType": "PlaceholderStatement",
                  "src": "495:1:12"
                }
              ]
            },
            "id": 2051,
            "name": "onlyMaintener",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "397:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "396:12:12"
            },
            "src": "374:129:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2071,
              "nodeType": "Block",
              "src": "811:66:12",
              "statements": [
                {
                  "expression": {
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2061,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1707,
                              "src": "821:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1665_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2063,
                            "indexExpression": {
                              "id": 2062,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2054,
                              "src": "829:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "821:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1665_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1650,
                          "src": "821:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1628_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 2066,
                        "indexExpression": {
                          "id": 2065,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2056,
                          "src": "841:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "821:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1628_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 2067,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1623,
                      "src": "821:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "866:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "821:49:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "821:49:12"
                }
              ]
            },
            "documentation": {
              "id": 2052,
              "nodeType": "StructuredDocumentation",
              "src": "604:124:12",
              "text": " @dev Function to authorize an address to maintain a token.\n @param maintener The authorized address"
            },
            "functionSelector": "8aeba37e",
            "id": 2072,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2059,
                "modifierName": {
                  "id": 2058,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3200,
                  "src": "801:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "801:9:12"
              }
            ],
            "name": "authorizeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2054,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "761:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "773:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:31:12"
            },
            "returnParameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "811:0:12"
            },
            "scope": 2185,
            "src": "733:144:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2092,
              "nodeType": "Block",
              "src": "1121:67:12",
              "statements": [
                {
                  "expression": {
                    "id": 2090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2082,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1707,
                              "src": "1131:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1665_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2084,
                            "indexExpression": {
                              "id": 2083,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2075,
                              "src": "1139:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1131:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1665_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2085,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1650,
                          "src": "1131:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1628_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 2087,
                        "indexExpression": {
                          "id": 2086,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2077,
                          "src": "1151:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1131:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1628_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 2088,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1623,
                      "src": "1131:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1176:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1131:50:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2091,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:50:12"
                }
              ]
            },
            "documentation": {
              "id": 2073,
              "nodeType": "StructuredDocumentation",
              "src": "883:158:12",
              "text": " @dev Function to revoke the authorization to maintain a token.\n @param id the token id\n @param maintener The authorized address"
            },
            "functionSelector": "d41d0aa3",
            "id": 2093,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2080,
                "modifierName": {
                  "id": 2079,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3200,
                  "src": "1111:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1111:9:12"
              }
            ],
            "name": "revokeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "1071:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2077,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "1083:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1070:31:12"
            },
            "returnParameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1121:0:12"
            },
            "scope": 2185,
            "src": "1046:142:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2108,
              "nodeType": "Block",
              "src": "1495:51:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2104,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "1525:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2105,
                        "name": "maintener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2098,
                        "src": "1529:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2103,
                      "name": "_isMaintener",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2184,
                      "src": "1512:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 2106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2102,
                  "id": 2107,
                  "nodeType": "Return",
                  "src": "1505:34:12"
                }
              ]
            },
            "documentation": {
              "id": 2094,
              "nodeType": "StructuredDocumentation",
              "src": "1194:215:12",
              "text": " @dev Function to check if an address is authorized to maintain a token.\n @param id the token id\n @param maintener The authorized address\n @return true if it's a maintener address"
            },
            "functionSelector": "5dafec1b",
            "id": 2109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2096,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "1435:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2098,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "1447:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1434:31:12"
            },
            "returnParameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "1489:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1488:6:12"
            },
            "scope": 2185,
            "src": "1414:132:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2162,
              "nodeType": "Block",
              "src": "2692:384:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2137,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1707,
                              "src": "2710:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1665_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2139,
                            "indexExpression": {
                              "id": 2138,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2112,
                              "src": "2718:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2710:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1665_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1630,
                          "src": "2710:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2731:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2710:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6b6e6f776e20746f6b656e",
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2734:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        },
                        "value": "Unknown token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        }
                      ],
                      "id": 2136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2702:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2702:48:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2145,
                  "nodeType": "ExpressionStatement",
                  "src": "2702:48:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2147,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "2771:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2148,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2114,
                        "src": "2793:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2149,
                        "name": "transactionFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2118,
                        "src": "2825:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "id": 2150,
                        "name": "feesRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2121,
                        "src": "2860:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2151,
                        "name": "feesRecipientsPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2124,
                        "src": "2894:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2152,
                        "name": "minHoldingForCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2126,
                        "src": "2938:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2153,
                        "name": "isPrivate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2128,
                        "src": "2979:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2154,
                        "name": "legalAuthority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2130,
                        "src": "3008:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2146,
                      "name": "_setToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2543,
                      "src": "2761:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256[3] memory,address[] memory,uint256[] memory,uint256,bool,address)"
                      }
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:262:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2156,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:262:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2158,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "3052:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2159,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2114,
                        "src": "3056:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2157,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2036,
                      "src": "3039:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3039:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2161,
                  "nodeType": "EmitStatement",
                  "src": "3034:35:12"
                }
              ]
            },
            "documentation": {
              "id": 2110,
              "nodeType": "StructuredDocumentation",
              "src": "1552:696:12",
              "text": " @dev Function to update a token with the given ID.\n @param id ID of the token to be updated\n @param metadataHash Metadata file hash\n @param transactionFees transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\n @param feesRecipients list of addresses receiving transfer fees\n @param feesRecipientsPercentage list of percentage, each one for the corresponding feesRecipients\n @param minHoldingForCallback minimum holding to propose a callback\n @param isPrivate true if holder need approval\n @param legalAuthority address of the legal authority"
            },
            "functionSelector": "4ab0d253",
            "id": 2163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2133,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2112,
                    "src": "2688:2:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2134,
                "modifierName": {
                  "id": 2132,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2051,
                  "src": "2674:13:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2674:17:12"
              }
            ],
            "name": "updateToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2274:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "metadataHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2311:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2118,
                  "mutability": "mutable",
                  "name": "transactionFees",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2358:33:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2115,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2358:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2117,
                    "length": {
                      "hexValue": "33",
                      "id": 2116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2366:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2358:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "feesRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2418:31:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2119,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2418:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2120,
                    "nodeType": "ArrayTypeName",
                    "src": "2418:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "feesRecipientsPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2476:41:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2122,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2476:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2123,
                    "nodeType": "ArrayTypeName",
                    "src": "2476:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2126,
                  "mutability": "mutable",
                  "name": "minHoldingForCallback",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2544:29:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2128,
                  "mutability": "mutable",
                  "name": "isPrivate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2600:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2130,
                  "mutability": "mutable",
                  "name": "legalAuthority",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2641:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2641:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2273:391:12"
            },
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2692:0:12"
            },
            "scope": 2185,
            "src": "2253:823:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2183,
              "nodeType": "Block",
              "src": "3259:80:12",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2172,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1707,
                              "src": "3276:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1665_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2174,
                            "indexExpression": {
                              "id": 2173,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2165,
                              "src": "3284:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3276:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1665_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2175,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1650,
                          "src": "3276:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1628_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 2177,
                        "indexExpression": {
                          "id": 2176,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2167,
                          "src": "3296:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3276:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1628_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 2178,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1623,
                      "src": "3276:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2179,
                        "name": "_isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3267,
                        "src": "3322:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3322:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3276:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2171,
                  "id": 2182,
                  "nodeType": "Return",
                  "src": "3269:63:12"
                }
              ]
            },
            "id": 2184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2165,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "3199:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2167,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "3211:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3198:31:12"
            },
            "returnParameters": {
              "id": 2171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "3253:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3252:6:12"
            },
            "scope": 2185,
            "src": "3177:162:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2186,
        "src": "96:3246:12"
      }
    ],
    "src": "45:3298:12"
  },
  "legacyAST": {
    "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Maintenable.sol",
    "exportedSymbols": {
      "Maintenable": [
        2185
      ]
    },
    "id": 2186,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2027,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:12"
      },
      {
        "absolutePath": "/home/ouziel/Work/StashBloxContracts/contracts/lib/Mintable.sol",
        "file": "./Mintable.sol",
        "id": 2028,
        "nodeType": "ImportDirective",
        "scope": 2186,
        "sourceUnit": 2707,
        "src": "70:24:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2029,
              "name": "Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2706,
              "src": "120:8:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Mintable_$2706",
                "typeString": "contract Mintable"
              }
            },
            "id": 2030,
            "nodeType": "InheritanceSpecifier",
            "src": "120:8:12"
          }
        ],
        "contractDependencies": [
          155,
          167,
          217,
          240,
          269,
          1588,
          1712,
          1796,
          2706,
          3170,
          3268,
          3444,
          4099
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2185,
        "linearizedBaseContracts": [
          2185,
          2706,
          3170,
          3444,
          3268,
          1588,
          1796,
          1712,
          269,
          240,
          4099,
          167,
          155,
          217
        ],
        "name": "Maintenable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 2036,
            "name": "TokenUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "238:19:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_documentHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "259:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:44:12"
            },
            "src": "219:63:12"
          },
          {
            "body": {
              "id": 2050,
              "nodeType": "Block",
              "src": "409:94:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2042,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2038,
                            "src": "440:2:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2043,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1760
                              ],
                              "referencedDeclaration": 1760,
                              "src": "444:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 2044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "444:12:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2041,
                          "name": "_isMaintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2184,
                          "src": "427:12:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,address) view returns (bool)"
                          }
                        },
                        "id": 2045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "427:30:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e74207065726d697373696f6e",
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "459:25:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        },
                        "value": "Insufficient permission"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_841d81cf420bca37f4a97ba7054ed33e237854d956020bb6cb8ac564c774f30f",
                          "typeString": "literal_string \"Insufficient permission\""
                        }
                      ],
                      "id": 2040,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "419:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:66:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "419:66:12"
                },
                {
                  "id": 2049,
                  "nodeType": "PlaceholderStatement",
                  "src": "495:1:12"
                }
              ]
            },
            "id": 2051,
            "name": "onlyMaintener",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "397:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "396:12:12"
            },
            "src": "374:129:12",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2071,
              "nodeType": "Block",
              "src": "811:66:12",
              "statements": [
                {
                  "expression": {
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2061,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1707,
                              "src": "821:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1665_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2063,
                            "indexExpression": {
                              "id": 2062,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2054,
                              "src": "829:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "821:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1665_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2064,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1650,
                          "src": "821:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1628_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 2066,
                        "indexExpression": {
                          "id": 2065,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2056,
                          "src": "841:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "821:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1628_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 2067,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1623,
                      "src": "821:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "866:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "821:49:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "821:49:12"
                }
              ]
            },
            "documentation": {
              "id": 2052,
              "nodeType": "StructuredDocumentation",
              "src": "604:124:12",
              "text": " @dev Function to authorize an address to maintain a token.\n @param maintener The authorized address"
            },
            "functionSelector": "8aeba37e",
            "id": 2072,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2059,
                "modifierName": {
                  "id": 2058,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3200,
                  "src": "801:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "801:9:12"
              }
            ],
            "name": "authorizeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2054,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "761:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2072,
                  "src": "773:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:31:12"
            },
            "returnParameters": {
              "id": 2060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "811:0:12"
            },
            "scope": 2185,
            "src": "733:144:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2092,
              "nodeType": "Block",
              "src": "1121:67:12",
              "statements": [
                {
                  "expression": {
                    "id": 2090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2082,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1707,
                              "src": "1131:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1665_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2084,
                            "indexExpression": {
                              "id": 2083,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2075,
                              "src": "1139:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1131:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1665_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2085,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1650,
                          "src": "1131:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1628_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 2087,
                        "indexExpression": {
                          "id": 2086,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2077,
                          "src": "1151:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1131:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1628_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 2088,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1623,
                      "src": "1131:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 2089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1176:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1131:50:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2091,
                  "nodeType": "ExpressionStatement",
                  "src": "1131:50:12"
                }
              ]
            },
            "documentation": {
              "id": 2073,
              "nodeType": "StructuredDocumentation",
              "src": "883:158:12",
              "text": " @dev Function to revoke the authorization to maintain a token.\n @param id the token id\n @param maintener The authorized address"
            },
            "functionSelector": "d41d0aa3",
            "id": 2093,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2080,
                "modifierName": {
                  "id": 2079,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3200,
                  "src": "1111:9:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1111:9:12"
              }
            ],
            "name": "revokeMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2075,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "1071:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2077,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "1083:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1070:31:12"
            },
            "returnParameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1121:0:12"
            },
            "scope": 2185,
            "src": "1046:142:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2108,
              "nodeType": "Block",
              "src": "1495:51:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2104,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2096,
                        "src": "1525:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2105,
                        "name": "maintener",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2098,
                        "src": "1529:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2103,
                      "name": "_isMaintener",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2184,
                      "src": "1512:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 2106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2102,
                  "id": 2107,
                  "nodeType": "Return",
                  "src": "1505:34:12"
                }
              ]
            },
            "documentation": {
              "id": 2094,
              "nodeType": "StructuredDocumentation",
              "src": "1194:215:12",
              "text": " @dev Function to check if an address is authorized to maintain a token.\n @param id the token id\n @param maintener The authorized address\n @return true if it's a maintener address"
            },
            "functionSelector": "5dafec1b",
            "id": 2109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2096,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "1435:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1435:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2098,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "1447:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1434:31:12"
            },
            "returnParameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2109,
                  "src": "1489:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1488:6:12"
            },
            "scope": 2185,
            "src": "1414:132:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2162,
              "nodeType": "Block",
              "src": "2692:384:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2137,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1707,
                              "src": "2710:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1665_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2139,
                            "indexExpression": {
                              "id": 2138,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2112,
                              "src": "2718:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2710:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1665_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "supply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1630,
                          "src": "2710:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2731:1:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2710:22:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6b6e6f776e20746f6b656e",
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2734:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        },
                        "value": "Unknown token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_46d8de58ac01c6f74b1e9b33c81ca807cf4e83790faca0b4eec89b833b0ae8e3",
                          "typeString": "literal_string \"Unknown token\""
                        }
                      ],
                      "id": 2136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2702:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2702:48:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2145,
                  "nodeType": "ExpressionStatement",
                  "src": "2702:48:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2147,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "2771:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2148,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2114,
                        "src": "2793:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2149,
                        "name": "transactionFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2118,
                        "src": "2825:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        }
                      },
                      {
                        "id": 2150,
                        "name": "feesRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2121,
                        "src": "2860:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2151,
                        "name": "feesRecipientsPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2124,
                        "src": "2894:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2152,
                        "name": "minHoldingForCallback",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2126,
                        "src": "2938:21:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2153,
                        "name": "isPrivate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2128,
                        "src": "2979:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 2154,
                        "name": "legalAuthority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2130,
                        "src": "3008:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                          "typeString": "uint256[3] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2146,
                      "name": "_setToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2543,
                      "src": "2761:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$3_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256[3] memory,address[] memory,uint256[] memory,uint256,bool,address)"
                      }
                    },
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:262:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2156,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:262:12"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2158,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2112,
                        "src": "3052:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2159,
                        "name": "metadataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2114,
                        "src": "3056:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2157,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2036,
                      "src": "3039:12:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3039:30:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2161,
                  "nodeType": "EmitStatement",
                  "src": "3034:35:12"
                }
              ]
            },
            "documentation": {
              "id": 2110,
              "nodeType": "StructuredDocumentation",
              "src": "1552:696:12",
              "text": " @dev Function to update a token with the given ID.\n @param id ID of the token to be updated\n @param metadataHash Metadata file hash\n @param transactionFees transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]\n @param feesRecipients list of addresses receiving transfer fees\n @param feesRecipientsPercentage list of percentage, each one for the corresponding feesRecipients\n @param minHoldingForCallback minimum holding to propose a callback\n @param isPrivate true if holder need approval\n @param legalAuthority address of the legal authority"
            },
            "functionSelector": "4ab0d253",
            "id": 2163,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2133,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2112,
                    "src": "2688:2:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2134,
                "modifierName": {
                  "id": 2132,
                  "name": "onlyMaintener",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2051,
                  "src": "2674:13:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2674:17:12"
              }
            ],
            "name": "updateToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2112,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2274:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2274:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "metadataHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2311:20:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2118,
                  "mutability": "mutable",
                  "name": "transactionFees",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2358:33:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$3_memory_ptr",
                    "typeString": "uint256[3]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2115,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2358:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2117,
                    "length": {
                      "hexValue": "33",
                      "id": 2116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2366:1:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2358:10:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
                      "typeString": "uint256[3]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2121,
                  "mutability": "mutable",
                  "name": "feesRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2418:31:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2119,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2418:7:12",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2120,
                    "nodeType": "ArrayTypeName",
                    "src": "2418:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "feesRecipientsPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2476:41:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2122,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2476:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2123,
                    "nodeType": "ArrayTypeName",
                    "src": "2476:9:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2126,
                  "mutability": "mutable",
                  "name": "minHoldingForCallback",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2544:29:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2128,
                  "mutability": "mutable",
                  "name": "isPrivate",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2600:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2127,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2130,
                  "mutability": "mutable",
                  "name": "legalAuthority",
                  "nodeType": "VariableDeclaration",
                  "scope": 2163,
                  "src": "2641:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2641:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2273:391:12"
            },
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2692:0:12"
            },
            "scope": 2185,
            "src": "2253:823:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2183,
              "nodeType": "Block",
              "src": "3259:80:12",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2172,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1707,
                              "src": "3276:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$1665_storage_$",
                                "typeString": "mapping(uint256 => struct Data.Token storage ref)"
                              }
                            },
                            "id": 2174,
                            "indexExpression": {
                              "id": 2173,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2165,
                              "src": "3284:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3276:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$1665_storage",
                              "typeString": "struct Data.Token storage ref"
                            }
                          },
                          "id": 2175,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "holders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1650,
                          "src": "3276:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1628_storage_$",
                            "typeString": "mapping(address => struct Data.Holder storage ref)"
                          }
                        },
                        "id": 2177,
                        "indexExpression": {
                          "id": 2176,
                          "name": "maintener",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2167,
                          "src": "3296:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3276:30:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1628_storage",
                          "typeString": "struct Data.Holder storage ref"
                        }
                      },
                      "id": 2178,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isMaintener",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1623,
                      "src": "3276:42:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2179,
                        "name": "_isOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3267,
                        "src": "3322:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 2180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3322:10:12",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3276:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2171,
                  "id": 2182,
                  "nodeType": "Return",
                  "src": "3269:63:12"
                }
              ]
            },
            "id": 2184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isMaintener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2165,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "3199:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2167,
                  "mutability": "mutable",
                  "name": "maintener",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "3211:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3198:31:12"
            },
            "returnParameters": {
              "id": 2171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "3253:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3252:6:12"
            },
            "scope": 2185,
            "src": "3177:162:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2186,
        "src": "96:3246:12"
      }
    ],
    "src": "45:3298:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-22T10:26:15.566Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "authorizeMaintener(uint256,address)": {
        "details": "Function to authorize an address to maintain a token.",
        "params": {
          "maintener": "The authorized address"
        }
      },
      "authorizeTokenizer(address)": {
        "details": "Function to authorize an address to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "averageAge(address,uint256)": {
        "details": "Function to get the average age of the token for the given address.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID"
        },
        "returns": {
          "_0": "average age in seconds"
        }
      },
      "balanceOf(address,uint256)": {
        "details": "Get the specified address' balance for token with specified ID. Attempting to query the zero account for a balance will result in a revert.",
        "params": {
          "account": "The address of the token holder",
          "id": "ID of the token"
        },
        "returns": {
          "_0": "The account's balance of the token type requested"
        }
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "Get the balance of multiple account/token pairs. If any of the query accounts is the zero account, this query will revert.",
        "params": {
          "accounts": "The addresses of the token holders",
          "ids": "IDs of the tokens"
        },
        "returns": {
          "_0": "Balances for each account and token id pair"
        }
      },
      "cloneToken(uint256,uint256[],uint256[])": {
        "details": "Function to mint tokens in batch.",
        "params": {
          "id": "Identifier of the template",
          "ids": "list of IDs of the tokens to be minted",
          "metadataHashes": "list of metadata file hashes"
        }
      },
      "createToken(address,uint256,uint256,uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to mint an amount of a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be minted",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "recipient": "The address that will own the minted tokens",
          "supply": "Amount of the token to be minted",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "account": "The account of the Tokens",
          "operator": "Address of authorized operator"
        },
        "returns": {
          "_0": "True if the operator is approved, false if not"
        }
      },
      "isMaintener(uint256,address)": {
        "details": "Function to check if an address is authorized to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        },
        "returns": {
          "_0": "true if it's a maintener address"
        }
      },
      "isTokenizer(address)": {
        "details": "Function to check if an address is authorized to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "revokeMaintener(uint256,address)": {
        "details": "Function to revoke the authorization to maintain a token.",
        "params": {
          "id": "the token id",
          "maintener": "The authorized address"
        }
      },
      "revokeTokenizer(address)": {
        "details": "Function to revoke the authorization to create a token.",
        "params": {
          "tokenizer": "The authorized address"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "Transfers `values` amount(s) of `ids` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155BatchReceived` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "ids": "IDs of each token type",
          "to": "Target address",
          "values": "Transfer amounts per token type"
        }
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "Transfers `value` amount of an `id` from the `from` address to the `to` address specified. Caller must be approved to manage the tokens being transferred out of the `from` account. If `to` is a smart contract, will call `onERC1155Received` on `to` and act appropriately.",
        "params": {
          "data": "Data forwarded to `onERC1155Received` if `to` is a contract receiver",
          "from": "Source address",
          "id": "ID of the token type",
          "to": "Target address",
          "value": "Transfer amount"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator. An operator is allowed to transfer all tokens of the sender on their behalf. Because an account already has operator privileges for itself, this function will revert if the account attempts to set the approval status for itself.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "address to set the approval"
        }
      },
      "setProxyRegistryAddress(address)": {
        "details": "Function to update the operator whitelist",
        "params": {
          "proxyAddress": "Proxy address"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "_interfaceID": "The interface identifier, as specified in ERC-165"
        },
        "returns": {
          "_0": "`true` if the contract implements `_interfaceID` and"
        }
      },
      "transactionFees(address,uint256,uint256)": {
        "details": "Function to get the transaction price to transfer tokens.",
        "params": {
          "account": "the address from where to transfer the tokens",
          "id": "The token ID",
          "value": "The amount to transfer"
        },
        "returns": {
          "_0": "transfer price"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateToken(uint256,uint256,uint256[3],address[],uint256[],uint256,bool,address)": {
        "details": "Function to update a token with the given ID.",
        "params": {
          "feesRecipients": "list of addresses receiving transfer fees",
          "feesRecipientsPercentage": "list of percentage, each one for the corresponding feesRecipients",
          "id": "ID of the token to be updated",
          "isPrivate": "true if holder need approval",
          "legalAuthority": "address of the legal authority",
          "metadataHash": "Metadata file hash",
          "minHoldingForCallback": "minimum holding to propose a callback",
          "transactionFees": "transaction fees: [lumpSumFees (in WEI), valueProportionalFees (ratio of transfered amount * 10**8), storageFees (in storageCredit * 10**8)]"
        }
      },
      "uri(uint256)": {
        "params": {
          "id": "Token ID"
        },
        "returns": {
          "_0": "URI string"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Queries the approval status of an operator for a given account."
      },
      "isTrustedForwarder(address)": {
        "notice": "return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."
      },
      "supportsInterface(bytes4)": {
        "notice": "Query if a contract implements an interface"
      }
    },
    "version": 1
  }
}